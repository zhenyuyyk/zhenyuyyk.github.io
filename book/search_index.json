{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["book","build","cli","g","gitbook","github博客地址：zhenyuyyk.github.io","init","instal","node版本：10.12.0","npm","serv"],"js/":["js"],"js/闭包.html":["1","10","1000","1~10，但却输出10次11。这是因为settimeout是一个宏任务，当settimeout执行的时候for循环已经结束了，所以打印出十次11","a=&quot;xx&quot","aleen42","bar","baz","console.log(a","console.log(i","console.log(j","es6增加，let和const","foo","foo中创建了函数bar，并返回了函数bar，并在函数foo作用域外执行了函数bar，当函数bar执行时，访问了foo作用域中的变量a","function","ie","i在每次迭代的时候，都产生一个私有的作用域，在这个私有的作用域中保存当前i","j","javascript","lt","method），把内部变量当作它的私有属性（priv","object）使用，把闭包当作它的公用方法（publ","power","reserv","return","right","settimeout(funct","treeviewcopyright","valu","var","window、var"],"js/原型和原型链.html":["https://blog.csdn.net/yuyuking/article/details/88952654","https://juejin.im/post/6844904073133572104"],"js/Promise.html":["0","1","1000","2","2)判断x的类型，如果x是对象或者函数，说明x有可能是一个promise，否则就不可能是promis","39","39;function&#39","39;object&#39","39;pending&#39","39;rejected&#39","39;resolved&#39","39;then&#39","a+规范，我们自己写的这个promise用不上called,但是为了遵循规范才加上这个控制的，因为别人写的promis","aleen42","amp;&amp","call","catch","catch(","catch(errcallback","catch方法其实就是没有成功回调的then方法，这个很好理解，因为一旦失败之后就会调用reject,最终都会走到then方法的失败回调中，只是简单的把then","chain","class","console.log(","console.log(&#39;catch错误&#39","console.log(&#39;成功的结果1&#39","console.log(&#39;成功的结果2&#39","console.log(1","console.log(err","console.log(error","const","constructor(executor","cycl","detect","e","err","errcallback","error","error手动调用reject","es6将其写进了语言标准。所谓promis","executor","executor(resolv","executor传入我们定义的成功和失败函数:把内部的resolve和reject传入executor中用户写的resolv","fn","function","gt","if((typeof","instanceof","lt;promise&gt","mypromis","mypromise((resolv","new","null","obj","obj.then","object.defineproperty(promis","ok，基于以上所述我们写一个最基本的promis","onfulfil","onfulfilled(this.valu","onreject","onrejected(this.reason","pend","power","promis","promise((resolv","promise.then","promise.then((r","promise2","promise2,为什么要取到promise2","promise2,既然返回的结果是一个promise那就继续解析尝试在它的then方法中拿到这个promise的结果，此时promise2的状态依然是pending，那么执行promise2.then方法只会添加订阅，而一直得不到resolv","promise2.then","promise2的reject","promise2的resolv","promise2的resolve和reject","promise2的状态就变为失败，在它的then","promise2的状态就变为成功了，就可以在它的then","promise可以then","promise实例上都要有一个then","promise实现，但是大家都必须遵循promis","promise对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled/resolved（已成功）、reject","promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为reject","promise必须是resolve之后才能走到它then方法，从而创建下一个的promis","promise有内部会提供两个方法，注意不是原型对象上的，这两个方法会传给用户,可以更改promis","promise的then方法执行的时候创建了promise2，这个时候promise2状态是pend","promise的实现可能有多个，但都要遵循promis","promise要有then","promise解析出来的结果可能还是一个promis","promise那就要有then","promise，如果是promise的话，需要让这个promis","promise，这里至于为什么要把promise2","r","re","reason","reject","reject(","reject(new","reject(r","reject);//resolve和reject都是当前promis","rejected）返回失败的原因，如果不写原因返回undefin","reject传入executor中用户写的resolv","reject都是promise2","reserv","resolv","resolve(&#39;hello&#39","resolve(&#39;xxx&#39","resolve(new","resolve(x","resolve,reject都取的到，因为resolve的执行是在这两个函数执行之后，这里递归是防止value也是一个promis","resolved（已定型）。如果改变已经发生了，你再对promis","resolved）返回成功的结果，如果不写结果返回undefin","resolvepromis","resolvepromise(promise2","resolvepromise第一个参数promise2到底有什么用？其实很简单就是为了符合promis","resolvepromise这么一个函数，用来递归处理then内部回调函数执行后的结果，它有4","resolve的也是promis","return","right","settimeout","then(onfulfil","then.call(x","then中返回一个普通值或者一个成功的promis","then内部的回调函数执行结果依然是一个promise那就把这个promise的结果resolv","then方法报错就走到下一个then","then方法有可能是gett","then方法要访问到所以放到thi","then方法返回的必须是一个promis","then时有风险，所以要放在try...catch","this.a","this.onrejectedcallback","this.onrejectedcallbacks.foreach(fn","this.onrejectedcallbacks.push","this.onresolvedcallback","this.onresolvedcallbacks.foreach(fn","this.onresolvedcallbacks.push","this.onresolvedcallbacks.push(onfulfil","this.reason","this.statu","this.then(nul","this.valu","throw","todo","treeviewcopyright","tri","true","typeerror(&#39;[typeerror","typeof","undefin","v","valu","value.then(resolv","x","x.then","x.then(()=&gt","xxx","x是一个promise那么在new的时候executor就立即执行了，就会执行他的resolve，那么数据就会传递到他的then","y"],"js/前端路由.html":["1、hash","2、histori","3、hash","8&quot;&gt","aleen42","api","callback","changebgcolor(&quot;green&quot","changebgcolor(&quot;white&quot","changebgcolor(&quot;yellow&quot","changebgcolor(color","charset=&quot;utf","color","console.log(&quot","console.log(&quot;请为路由绑定处理方法&quot","content","content.style.backgroundcolor","document.queryselector(&quot;body&quot","fals","function","function(path","hash","hashchange，hash值为&quot","hash。在浏览器中，可以通过location.hash","histori","history.pushst","history.replacest","history.st","href=&quot;#&quot;&gt;white&lt;/a&gt;&lt;/li&gt","href=&quot;#green&quot;&gt;green&lt;/a&gt;&lt;/li&gt","href=&quot;#yellow&quot;&gt;yellow&lt;/a&gt;&lt;/li&gt","html","html&gt","html5","http","http://www.xxx.com/list/complet","ie8","index.html","lang=&quot;en&quot;&gt","location.hash","location.hash.slice(1","lt;!doctyp","lt;/body&gt","lt;/head&gt","lt;/html&gt","lt;/script&gt","lt;/ul&gt","lt;body&gt","lt;head&gt","lt;html","lt;li&gt;&lt;a","lt;meta","lt;script&gt","lt;title&gt;title&lt;/title&gt","lt;ul&gt","mvvm","new","onhashchang","power","quot;&quot","quot;/&quot","reserv","right","router","router.prototype.init","router.prototype.refresh","router.prototype.rout","router.route(&quot;/&quot","router.route(&quot;/green&quot","router.route(&quot;/yellow&quot","spa","this.currenturl","this.refresh.bind(thi","this.rout","this.routes[path","this.routes[this.currenturl","treeviewcopyright","ui","url","var","vs","web","window.addeventlistener(&quot;domcontentloaded&quot","window.addeventlistener(&quot;hashchange&quot","window.rout","window.router.init"],"js/垃圾回收机制.html":["0","1","1s","1~8m","1个单位的内存，如果有一个对象需要占用3个内存单位的话，那么就会导致mutator一直处于暂停状态，而collector一直在尝试进行垃圾收集，直到out","2","2.v8","2位系统新生代内存大小为16mb，老生代内存大小为700mb","3.v8","32位系统下约为0.7gb","4.v8新生代算法（scaveng","5.v8老生代算法（mark","5000","64位系统下约为1.4gb","64位系统下，新生代内存大小为32mb，老生代内存大小为1.4gb","a,b互相引用,计数不会等于0","a.test","add","aleen42","b","b.test","c","cach","cheney","collec","collect","compact","compact算法。mark","console.log(add","c不再引用a","document.getelementbyid(&#39;div&#39","foo","function","gc(garbag","gener","heap","ie9","if(nod","javascript","javascript的垃圾回收机制，必须要知道内存的概念。javascript","javascript脚本中，绝大多数对象的生存期很短，只有部分对象的生存期较长。所以，v8","mark","mark），一个是清除阶段(sweep","memori","new","node","node.innerhtml","node中javascript","null","num","object","old","power","problem","quot;!.......&quot","quot;lala&quot","reserv","return","right","scaceng","scaveng","scavenge算法中，但是在分代式垃圾回收的前提下，from空间中存活的对象在复制到to","semi","semispace，每块内存大小8mb（32位）或16mb（64","setinterval(funct","space","spaces)：to","sweep","sweep和mark","sweep的基础上演进而来的，相比mark","sweep，mark","test","this.test","to空间的使用应超过25","treeviewcopyright","v8","v8在老生代中主要采用mark","v8最初是作为浏览器的javascript","v8的垃圾回收机制的限制。由于v8需要保证javascript应用逻辑与垃圾回收器所看到的不一样，v8在执行垃圾回收时会阻塞javascript应用逻辑，直到垃圾回收结束再重新执行javascript应用逻辑，这种行为被称为“全停顿”（stop","v8的堆内存为1.5gb，v8做一次小的垃圾回收需要50ms以上，做一次非增量式的垃圾回收甚至要1","var","window","world"],"js/浅拷贝和深拷贝.html":["1","1.json.parse(json.stringify(obj","2","39;child&#39","39;conardli&#39","39;object&#39","4","8","aleen42","arr1","arr2","array","array.isarray(target","array.length","child","cloen函数进行改写：当遍历数组时，直接使用foreach进行遍历，当遍历对象时，使用object.keys取出所有的key进行遍历，然后在遍历时把foreach会调函数的value当作key","clone(target","clone(target[key","clone2(target[key","clonetarget","clonetarget[key","const","copyobj","date","field1","field2","field3","field4","foreach(array","foreach(key","function","gt","https://github.com/lodash/lodash","index","in在遍历时效率是非常低的，我们来对比下常见的三种循环for、while、for","in这种方式，实际上for","in遍历改变为whil","isarray","iterate","iteratee(array[index","key","key，克隆对象作为valu","length","lodash的clonedeep","lt","map","map.get(target","map.set(target","module.export","name","new","null","obj","obj.concat(objx","object","object.assign","object.assign、contact","object.keys(target","object和array","obj，进行释放，然是target依然对obj","power","regexp","reserv","return","right","set","target","target.set(obj,&#39;code秘密花园&#39","target.target","target属性，变为了一个circular","treeviewcopyright","typeof","undefin","valu","var","weakmap","weakmap提代map","weakmap的话，target和obj存在的就是弱引用关系，当下一次垃圾回收机制执行时，这块内存就会被释放掉。设想一下，如果我们要拷贝的对象非常庞大时，使用map会对内存造成非常大的额外消耗，而且我们需要手动清除map的属性才能释放这块内存，而weakmap会帮我们巧妙化解这个问题。我也经常在某些代码中看到有人使用weakmap来解决循环引用问题，但是解释都是模棱两可的，当你不太了解weakmap的真正作用时。我建议你也不要在面试中写这样的代码，结果只能是给自己挖坑，即使是准备面试，你写的每一行代码也都是需要经过深思熟虑并且非常明白的。能考虑到循环引用的问题，你已经向面试官展示了你考虑问题的全面性，如果还能用weakmap","while来实现一个通用的foreach遍历，iteratee是遍历的回掉函数，他可以接收每次遍历的value和index","while的效率是最好的，所以，我们可以想办法把for"],"js/函数式编程.html":["0","0.2","0.4","1","1,2,3","1,2,3,4,5","10","100","11","12","14","2","2&#39","2)(3","20","3","39","39;%&#39","39;100%&#39","39;20%&#39","39;300%&#39","39;40%&#39","39;hello","39;rh&#39","39;unexpect","4","4,5","49","5","5,6,math.ab","6","_arrarg","_valu","add","add(a","add(x","add(x,y,f","add4(x","addcurri","addcurry(a","addcurry=createcurry(add","addcurry=createcurry(function(a","addcurry，那么从上述定义可知，addcurry(1)(2","add函数就是一个纯函数，它读取x和y两个参数的值，返回它们的和，并且不会受到全局的z","aleen42","allarrarg","allarrargs.length","allarrargs=arrargs.concat(_arrarg","arg","args.callee.call(thi","args.length","args=argu","args[i].call(thi","args[start].apply(thi","argument","arr.length","arrarg","array","array.map(func","array.map(function(item","array.prototype.filt","array.prototype.find","array.prototype.map","array.prototype.reduc","array.prototype.slice.call(argu","array.prototype.sort","b","c","calculate=compose(multiply4,add4","catch(","class","compos","compose(f,g","compose）和柯里化（curri","console.log(add(1","console.log(addcurry(1","console.log(addcurry(1)(2","console.log(addcurry(1)(2)(3","console.log(calculate(1","console.log(errorp","console.log(getnewarray([1","console.log(io","console.log(iofn","console.log(l","console.log(lenarray","console.log(multiply4(add4(1","console.log(p","console.log(r","const","constructor(fn","constructor(valu","contain","container(valu","container.of(5","container.of(fn(this._valu","createcurri","createcurry(func","createcurry(map","curri","e.messag","either：两者中的任何一个，类似if...els","error","errorp","f(g(x","f(x)+f(i","fn","fn(arr[i","for(let","fp","fp模块中的flowright将io函子中存储的value(函数)和map传入的fn","func","func.apply(thi","func.length","funclength","function","function(b","function(item","function(x","functor","getnewarray","getnewarray(array","gt","higher","io","io(fp.flowright(fn","io(funct","io._valu","io.of(process).map(v","iofn","io函子中的_valu","io函子可以把不纯的动作存储到_valu","io的of函数时of函数会将我们传递进来值保存到一个函数中，在使用时再来获取process","io，但是此时我们使用的是io","item","item.length","json","l","left","left(valu","left.of","left.of(12).map(v","left函子中map","lenarray","log中得到的function就是分析3","log我们可以看到我们得到了一个io","lt","map","map(fn","map(func","map(v","map(x","mapcurri","mapcurry(function(item","mapforeach(arr","mapforeach(strarray","map方法中组合了fn和this._value,fn是我们传入的v","map方法返回了一个新的io函子，这个新的io函子中valu","map方法，map","mayb","maybe(valu","maybe.of(&#39;hello","maybe.of(fn(this._valu","maybe.of(nul","maybe函子中我们学习了如何处理函子内部值是空值的情况，此时我们可以控制传入值的异常。那如果我们在调用传入处理函数fn","multiply4(x","n","name","new","newarray","newarray.push","node","node环境，我们将nod","null","null/undefin","of(valu","of方法返回的是io对象，这个io对象中的value存储了一个函数，这个函数返回当前传入的process","order","p","parsejson(&#39","parsejson(str","posit","power","print","programming,fp)，fp","pure","quot;name&quot","quot;rh&quot","r","require(&#39;lodash/fp&#39","reserv","result","return","rh","right","right(valu","right.of(12).map(v","right.of(fn(this._valu","right.of(json.parse(str","right函子中map","slice","splice","splice和slic","start","static","this._valu","this.valid","token","treeviewcopyright","tri","undefin","usr/local/cellar/node/12.6.0/bin/nod","v","v.execpath","v.execpath,this._value是我们使用of得到创建的io对象中保存的函数(即返回valu","valid","valu","value中的funct","var","world&#39","x","x.touppercas","x=add","xs","xs.slice(0,3","xs.splice(0,3","x、i","y","z"],"js/网络安全.html":["1","2","3.dom","a.com发布带有恶意链接的帖子或者评论（提交对a.com带有增删改的诱导型img/form/a","a.com并在自己浏览器留下a.com","aleen42","b.com","b.com时候，b.com带着a.com的登陆凭证冒充受害用户执行对a.com的恶意操作2","b.com植有访问a.com","cooki","cookie、sessionid","cross","csp","csrf","csrf（cross","dom","dom型和反射性都是通过诱导用户点击链接执行，并且都是临时型的，但是反射型属于服务端安全漏洞而dom","forgeri","http","javascript","power","request","reserv","right","script","site","sql注入、dns劫持、do","token","treeviewcopyright","url","xss"],"js/常见知识点整理.html":["3.x","aleen42","array、object和funct","comput","computed与watch","cookie、sessionstorage、localstorag","cookie数据大小不能超过4k；sessionstorage和localstorage的存储比cookie大得多，可以达到5m","cookie的数据会自动的传递到服务器；sessionstorage和localstorag","cookie设置的过期时间之前一直有效；localstorage永久存储，浏览器关闭后数据不丢失除非主动删除数据；sessionstorag","css规则树：生成css规则树（css","data","data是对象的话，对象属于引用类型，会影响到所有的实例。所以为了保证组件不同的实例之间data不冲突，data","diff算法执行时更快的找到对应的节点，提高diff速度，更高效的更新虚拟dom","dns域名解析：浏览器向dns服务器发起请求，解析该url中的域名对应的ip","dom","dom树：词法分析然后解析成dom树（dom","for和v","html","http请求：浏览器发起读取文件的http请求，，该请求报文作为tcp","instanceof","js引擎解析过程：调用js引擎执行j","key","layout","mvvm","mvvm拆开来即为model","mvvm的架构下，view层和model层并没有直接联系，而是通过viewmodel层进行交互。viewmodel层通过双向数据绑定将view层和model层连接了起来，使得view层和model层的同步工作完全是自动的。因此开发者只需关注业务逻辑，无需手动操作dom，复杂的数据状态维护交给mvvm统一来管理。在vue.js中mvvm","number，boolean，str","object.prototype.tostring.cal","object、array和null区分，都返回object","painting）：即遍历render树，并使用ui","power","render树：web浏览器将dom和cssom结合，并构建出渲染树（rend","reserv","right","rule","tcp连接：解析出ip地址后，根据ip地址和默认80端口，和服务器建立tcp","tcp连接：通过四次挥手释放tcp","tree","treeviewcopyright","tree），是由dom元素及属性节点组成，树的根是docu","typeof","url","v","view","viewmodel，有view，viewmodel，model三部分组成。view层代表的是视图、模版，负责将数据模型转化为ui展现出来。model层代表的是模型、数据，可以在model层中定义数据修改和操作的业务逻辑。viewmodel层连接model和view","vue","vue.j","vue的diff函数中，会根据新节点的key去对比旧节点数组中的key，从而找到相应旧节点。如果没找到就认为是一个新增节点。而如果没有key，那么就会采用遍历查找的方式去找到对应的旧节点。一种一个map映射，另一种是遍历查找。相比而言。map","watch"],"js/js循环总结.html":["1","2","28","3","4","5","ag","aleen42","arr","arr.foreach(i","arr.map(i","arri","break,continue和return","break中断循环，不能使用return","break中断循环，可以使用return","citi","console.log(arr)//1,3,4","console.log(arr)//[1,3,4","console.log(arry[i","console.log(i","console.log(i);//2,4,5","console.log(item","console.log(newarr)//[2,4,5","console.log(newarr)//undefin","console.log(text","continue跳过循环中的一个迭代（区别于for","foreach","gt","item","js","map","map，object,array,set","name","newarr","person","person[i","power","quot;&quot","quot;1&quot","quot;2&quot","quot;3&quot","quot;4&quot","quot;北京&quot","quot;小白&quot","reserv","return","right","string","text","treeviewcopyright"],"htmlcss/":["aleen42","html和css","power","reserv","right","treeviewcopyright"],"htmlcss/常见知识点汇总.html":["0","100px","2","200px","200px)/2","50","500px","a:hov","a[rel=&quot;external&quot","absolut","absoult","aleen42","align","align:cent","auto","background","background:r","block","block和text","border","bottom","bottom:0","box","calc","cell","center","chang","child","color","contain","content","content:cent","css","display","display:flex","display:t","display：inlin","div","dom","d选择器(#myid","fix","flex","flow","gpu加速，translate使用3d","gt","gt;id","h1","h1,p","height","height:100vh","height:200px","hidden隐藏一个dom","html","ie","import","index","inherit","item","justifi","left","left:0","left:50","left:calc((100","li","li:nth","margin","margin:auto.div","margin负值.div","middl","myclass","none隐藏一个dom","p","pad","pink","posit","position:absolut","position：absolute或fix","power","rel","relative，子元素margin","reserv","right","right:0","root（bfc","size","skyblu","static","sticki","tabl","text","top","top:0","top:50","top:calc((100","transform","transform，translatex可以移动本身元素的50","translat","treeviewcopyright","ul","vertic","visibl","width","width:200px","z"],"htmlcss/BFC.html":["000","1","100px","10px","20px","absolut","aleen42","auto","background","bfc","bfc环境的盒子，他们两的margin才不会重叠，那么我们只需触发box3的bfc","bfc的区域不会与float","bfc的区域不会与float的元素区域重叠，把绿色盒子设置为bfc","bfc的高度时，浮动子元素也参与计算，把外层盒子设置bfc","bfc，即使该元素没有包裹在一个多列容器中（标准变更，chrome","block","bottom","box","box2","box3","bug","caption，html","cell，html","class=&quot;box&quot;&gt;&lt;/div&gt","class=&quot;box2","class=&quot;box2&quot;&gt;&lt;/div&gt","class=&quot;box3","class=&quot;box3&quot;&gt;&lt;/div&gt","class=&quot;container&quot;&gt","color","column","comput","contain","container的高度为0","context","context提供了一个环境，html","count","display","en","fix","flex","float","flow","footer","format","green","grid","group、tabl","group（分别是html","header","height","inlin","layout、cont","left","lt;/div&gt","lt;div","margin","margin决定（即margin","margin重叠了，距离只有10px","none","overflow","overflow:hidden","paint","posit","power","quot;块级格式化上下文&quot","red","reserv","right","root","row","span","tabl","table、row、tbody、thead、tfoot","table、t","top","treeviewcopyright","visibl","w","w&quot;&gt;&lt;/div&gt","w3c官方解释为：bfc它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，block","width"],"frame/":[],"frame/vue组件传值方式整理.html":["0","10","39;@/tools/ev","39;@/views/home&#39","39;app&#39","39;data&#39","39;sun&#39","39;vue&#39","39;这是爷组件的值&#39","aleen42","attrs/$listen","attrs爷传孙，$listen","bind=&quot;$attrs&quot","bu","bug","bus&#39","bus.$emit(&quot;share&quot","bus.$off(&quot;share&quot","bus.$on(&quot;share&quot;,(data)=&gt","bus.j","changechildren","changemsg(data","changemsg=&quot;changemsg&quot;/&gt","children","childrenmsg","childrenvalue(nsg","class=&quot;sun&quot;&gt","click=&quot;changechildren&quot;&gt;点击改变子元素的值&lt;/button&gt","click=&quot;clickbtn&quot;&gt;点我改变父组件&lt;/button&gt","click=&quot;clickbtn&quot;&gt;点我改变父组件的值&lt;/button&gt","click=&quot;setval&quot;&gt;点击&lt;/button&gt","click=&quot;tovalue&quot;&gt;点击传值给爷组件&lt;/button&gt","clickbtn","compon","comput","const","creat","data","dataobj","default","destroy","eventbu","export","gt","home","id=&quot;app&quot;&gt","import","inject","lang=&quot;ts&quot;&gt","lt","lt;/div&gt","lt;/script&gt","lt;/style&gt","lt;/template&gt","lt;button","lt;children","lt;div","lt;div&gt","lt;home&gt;&lt;/home&gt","lt;p&gt;&lt;/p&gt","lt;parent","lt;script","lt;script&gt","lt;style","lt;template&gt","math.ceil(math.random","math.ceil(math.random()*10","method","msg","msg2","msg:&#39;&#39","msg=&quot;msg&quot","msg=&quot;子组件改变父组件&quot","msg=&quot;父组件改变子组件&quot","name","new","num","on=&quot;$listeners&quot;/&gt","parent","parentmsg","power","prop","properti","props/$emit","provid","provide/inject","quot;./children&quot","quot;./parent&quot","quot;@/views/assembly/children&quot","quot;children&quot","quot;default&quot","quot;grandparent&quot","quot;parent&quot","quot;后代组件&quot","quot;子元素的值&quot","quot;孙组建的传值&quot","quot;我是孙组件的值&quot","quot;我是爷组件的值&quot","quot;接收孙组件的值&quot","quot;改变后的值&quot","quot;父组件的值&quot","ref=&quot;children&quot;/&gt","ref与$parent/$children","reserv","return","right","scoped&gt","setmsg","setmsg(msg","setval","setval(msg","setval=&quot;setval&quot;/&gt","src/tools/ev","string","this.$emit(&quot;changemsg&quot","this.$emit(&quot;setval&quot","this.$parent.childrenvalue(msg","this.$refs.children.setmsg(msg","this.childrenmsg","this.data.msg}+${this.data.num}+${this.parentmsg","this.dataobj","this.msg","this.msg2","this.msg=nsg","this.setmsg","tovalu","treeviewcopyright","txt","type","v","vue","vue.extend","vuex"],"frame/webpack5工程化示例.html":["1","2","2021/5/12","3","3.创建一个vue","39;../dist&#39","39;../public/index.html&#39","39;../src/main.js&#39","39;./app.vue&#39","39;@&#39;:path.resolve(__dirname,&#39;../src&#39","39;@babel/plugin","39;@babel/preset","39;[name].[hash:8].js&#39","39;asset&#39","39;babel","39;css","39;defaults&#39","39;development&#39","39;fonts/[nam","39;imgs/[nam","39;inlin","39;less","39;media/[nam","39;node_modules&#39","39;postcss","39;production&#39","39;style","39;usage&#39","39;vue$&#39;:&#39;vue/dist/vue.runtime.esm.js&#39","39;vue&#39","4","5.引用css","6.为css","7","7.把css样式从js文件中提取到单独的css","8","8&quot;&gt","9","aleen42","alia","app","app.vu","aquamarin","arrow","asset","autoprefix","babel","babel/cor","babel/plugin","babel/preset","babel转义j","build","build/webpack.config.j","build/webpack.config.js&quot","build/webpack.dev.j","build/webpack.prod.js&quot","build文件夹并新建webpack.config.j","build，可以看到dist下的js和css。发现main.css整合了src下面两个css","build，可以看到生成了dist文件夹并在index.html引入了j","cachedirectori","charset=&quot;utf","chunkfilenam","class","class=&quot;content&quot;&gt","clean","cli","click=&quot;msgchange&quot;&gt;点击&lt;/button&gt","color","common","compil","config","const","content","core","corej","css","css时也需要一些loader来解析我们的css","d","data","decor","decorators&#39","default","dev","dev,打包npm","develop","devserv","devtool","display","dist","entri","env","env&#39","es6新增api","exclud","export","extensions:[&#39;*&#39;,&#39;.js&#39;,&#39;.json&#39;,&#39;.vue&#39","extract","fals","filenam","filename:\"icons/[nam","filename:&quot;icons/[nam","flex","fonts/[nam","function","functions&#39","gener","gt","h","h(app","hash:8].[ext","hash:8].[ext]&#39","hash:8].[ext]&quot","hot:tru","html","html&gt","htmlwebpackplugin","html作为模版，在dist目录下会生成一个相同的html，之后将打包好的js注入到该html","html文件中手动引入打包好的js，这时候就需要使用html","id=&quot;app&quot;&gt;&lt;/div&gt","id].css","imgs/[nam","import","index.html","init","javascript","js负责将新的api进行转化，例如promise、generator、set、maps、proxi","lang=&quot;en&quot;&gt","legaci","less","loader","loader&#39","loader/lib/plugin&#39","loader负责将es6/7/8等语法转换为es5","loos","lt;!doctyp","lt;/body&gt","lt;/div&gt","lt;/head&gt","lt;/html&gt","lt;/script&gt","lt;/style&gt","lt;/template&gt","lt;body&gt","lt;button","lt;div","lt;head&gt","lt;html","lt;meta","lt;script&gt","lt;style","lt;template&gt","lt;title&gt;title&lt;/title&gt","m?j","main","main.j","map&#39","media/[nam","merg","merge&#39","merge(common","merge帮我们merg","method","mini","minicssextractplugin","minicssextractplugin.load","mode","modul","module.export","mount(&#39;#app&#39","mp4|webm|ogg|mp3|wav|flac|aac","msg","msgchang","name","name].[hash:8].css","name].[hash:8].j","new","node_modul","npm","open&quot","option","output","package.json","package.json中的script","path","path.resolve(__dirnam","plugin","plugin&#39","plugin创建html页面，并将打包后的js文件需要引入到html","plugin插件的作用,webpack5","port:3000","postcss","postcss.config.j","power","preset","properti","properties&#39","propos","public/index.html","public文件夹，新建index.html文件，更改webpack.config.j","quot;112233&quot","quot;[id].css&quot","quot;[name].[hash:8].css&quot","quot;build&quot","quot;dev&quot","quot;hello","quot;scripts&quot","quot;webpack","render","require(&#39;./webpack.config.js&#39","require(&#39;autoprefixer&#39","require(&#39;html","require(&#39;mini","require(&#39;path&#39","require(&#39;vu","require(&#39;webpack","require(&#39;webpack&#39","require('html","require('mini","require('path","reserv","resolv","return","right","rule","run","runtim","s","scoped&gt","server","sourc","src/main.j","src下面新建一个index1.css文件和index2.less文件，并在main.j","src目录，并在下面新建一个main.j","style","target","templat","test","test:/\\.(png|jpe?g|gif","test:/\\.svg","test:/\\.vu","this.msg","transform","treeviewcopyright","true","true时是赋值法定义属性，false时是使用object.defineproperti","type","type:&#39;asset&#39","type:'asset","us","usag","use:[&#39;vu","usebuiltin","vue","vueloaderplugin","webpack","webpack.config.j","webpack.config.js也需要做出修改，我们只需要删除mode和devserv","webpack.config.js和入口main.j","webpack.config.js里配置postcss","webpack.dev.j","webpack.hotmodulereplacementplugin","webpack.prod.j","webpack5","webpackdemo目录，初始化npm","woff2?|eot|ttf|otf","world&quot"],"design/":["aleen42","power","reserv","right","treeviewcopyright"],"design/发布-订阅模式.html":["0","1","110","2","200","2000000","3","300","3000000","39","39;click&#39","39;default&#39","39;function&#39","39;http","39;last&#39","39;loginsucc&#39","39;namespace1&#39","39;namespace2&#39","39;production&#39","39;价格=2000000&#39","88","_creat","_default","_fn","_listen","_listen(key","_remov","_remove(key","_self","_shift","_shift.call(argu","_slice","_trigger","_trigger.apply(_self","_unshift","_unshift.call(argu","address.refresh","addsub","addsub添加订阅方法，removesub取消订阅，notify是通知更新方法，depend是调用了watcher的adddep","ajax","aleen42","amp;&amp","api","arg","argument","arguments.length","array&lt;watcher&gt","array.isarray(valu","array.prototype.shift","array.prototype.shift.cal","array.prototype.shift.call(argu","array.prototype.slic","array.prototype.unshift","ary.length","ary[i","boolean","both","bug","cach","cache[key","cache[key].length","cache[key].push(fn","cache[key].splice(i","cache[key][i","call","callback","cart.refresh","catch","cb","chang","childob","childob.dep.depend","class","clientlist","clientlist[key","clientlist[key].push(fn","clinetlist","collect","compon","configur","console.log","console.log(&#39","console.log(&#39;squaremet","const","constructor","creat","customsett","data","deep","default","definereact","dep","dep.depend","dep.notifi","dep.target","dep.target.adddep(thi","depend","dependarray(valu","dep对象比较简单，内部有一个唯一id，用于作为dep对象的唯一标识。还有一个保存watcher的数组sub","dep是订阅器，也是连接observer和watch","direct","e","each","each(offlinestack","each(stack","enumer","evalu","even","event","event.cr","event.listen","event.listen(&#39;squaremeter88&#39","event.listen(key","event.one(key","event.remove(key","event.trigg","event.trigger(&#39;squaremeter88&#39","event.trigger.apply(thi","event[i","exporfn","export","express","fals","final","find","fire","fn","fn.appli","fn.apply(thi","fn.call(n","fn1","fns.length","fns.splice(l","fns[i","fns[l","function","function(ari","function(data","function(key","function(namespac","function(obj","function(pric","getter","getter.call(obj","getter。在这个getter中会调用相关data的gett","getter中，添加dep.depend方法，set中添加dep.notifi","global","gt","handleerror(","header","header.setavatar(data.avatar","header1、header2","hi","id","ignor","index.j","info","installev","installevent(salesoffic","interfac","invokewitherrorhandling(this.cb","isobject(valu","isrenderwatch","istanbul","javascript","job","key","l","last","listen","login.listen(&#39;loginsucc&#39","login.succ(function(data","login.trigg","lt","message.refresh","mm","mutat","mvc","mvvm","n","namespac","namespacecach","namespacecache[namespac","nav","nav.setavatar(data.avatar","new","newval","noop","notifi","null","number","obj","obj[i","obj[key","object","object.defineproperty()来劫持各个属性的setter，gett","object.defineproperty(obj","object.getownpropertydescriptor(obj","object/array","obj的key值添加装饰器的地方。它会为每个值创建一个dep。之后通过object.defineproperti","observe(newv","observe(v","observer，主要作用是劫持数据添加上setter，gett","offlinestack","offlinestack.length","offlinestack.pop","offlinestack.push(fn","oldvalu","on","option","pars","parsepath(exporfn","poptarget","power","price","process.env.node_env","properti","property.configur","property.get","property.set","pushtarget(thi","qq","queuewatcher(thi","quot;${this.expression}&quot","quot;touch&quot","re","reactivegett","reactivesett","refresh，这种耦合性会使程序变得僵硬，head","remov","remove(this.sub","removesub","remove方法里的for","reserv","ret","return","right","run","run中还会调用this.get()来获取修改之后的valu","salesoffic","salesoffices.clientlist","salesoffices.listen","salesoffices.listen(&#39;squaremeter100&#39;,function(pric","salesoffices.listen(&#39;squaremeter110&#39;,function(pric","salesoffices.listen(&#39;squaremeter88&#39","salesoffices.listen(&#39;squaremeter88&#39;,function(pric","salesoffices.listen(function(pric","salesoffices.remov","salesoffices.remove(&#39;squaremeter88&#39","salesoffices.trigg","salesoffices.trigger(&#39;squaremeter100&#39","salesoffices.trigger(&#39;squaremeter110&#39","salesoffices.trigger(&#39;squaremeter88&#39","salesoffices.trigger(2000000","salesoffices.trigger(3000000","salesoffices2","same","schedul","set","setavatar","setter","setter.call(obj","settouxiang","shallow","squaremet","src/core/observ","src/core/observer/dep.j","src/core/observer/watcher.j","stack","stack.length","static","string","sub","subs.length","subs[i].upd","subscrib","target","this.act","this.apply(_self","this.cb.call(this.vm","this.cleanupdep","this.clientlist","this.clientlist.length","this.clientlist.push","this.clientlist[i","this.clientlist[key","this.clientlist[key].push(fn","this.creat","this.deep","this.dirti","this.get","this.gett","this.getter.call(vm","this.id","this.lazi","this.listen(key","this.run","this.sub","this.subs.push(sub","this.subs.slic","this.sync","this.us","this.valu","this.vm","throw","track","traverse(valu","treeviewcopyright","tri","trigger","true","typeof","uid","undefin","updat","us","val","valu","var","vm","vm._watcher","vm._watchers.push(thi","vue","vue的eventbu","vue的源码，我这里使用的v2.6.14","watch","watcher","watcher创建时，会调用的this.get()，里面会执行根据exporfn","watcher的update方法，进而调用run","xxx.com?login&#39"],"design/适配器模式.html":["0","11","12","13","39;guangzhou&#39","39;shenzhen&#39","39;开始渲染广东省地图&#39","39;开始渲染百度地图&#39","39;开始渲染第三方地图&#39","39;开始渲染谷歌地图&#39","address","addressadapt","aleen42","b","baidumap","c","c.id","c.name","console.log","display","document.writ","fn","function","getguangdongc","googlemap","guangdongc","guangzhou","id","instanceof","json.stringifi","map","map.show","name","oldaddress","oldaddressfn","othermap","othermap.display","othermapadapt","power","render","rendermap","reserv","return","right","shenzhen","show","treeviewcopyright","usb","var","wrapper","zhuhai"],"browser/":[],"browser/浏览器缓存.html":["02:54:16","1","2","200","2019","24","3","304","5min），同时也不会严格执行http","ag","age=xxx","aleen42","apr","cach","cache/memori","chrome","control","date）,需要和last","disk","dist","etag","etag放在request","etag：每个文件有一个，是一个字符串，其内容通常是数据的哈希值,改动文件了就变了，可以看似md5","expir","gmt","gt","header","header的if","http","http头部中的字段判断哪些资源需要缓存哪些可以直接使用那些需要重新请求。如果相同url的资源一旦被硬盘缓存，就不会再去请求数据。（http","http的header","last","match与自己服务器中的etag","match中，服务器比较if","max","memori","modifi","modified:w","modified中的时间添加到if","modified这个header,将last","modified：文件的修改时间,服务器可以通过配置这个响应头，来向浏览器发送一个数据上次被修改的时间标签，例如：last","none","power","privat","private和publ","public","push","reserv","respons","right","session","since中的时间与服务器中这个资源的最后修改时间对比，没变化就返回304，最后修改时间比if","since中的时间大，就说明有变化，返回200","since这个head","size","statu","store","treeviewcopyright","xxxb"],"browser/浏览器的多进程和js的单线程.html":["1","1475236","1~5","2，后面的promise.resolve().then()扔进微队列，此时微队列{console.log(3","3d","45道promis","7","ajax","aleen42","bitmap","catch","chrome","chrome浏览器中打开了多个tab，然后打开mac","console.log","console.log(1","console.log(2","console.log(3","console.log(4","console.log(5)执行，输出5","console.log(6","console.log(7","console.log(data","cpu","dom，则可能出现ui","event","eventloop","fifo","final","first","gpu","gt","gui","gui线程和j","heap","http","javascript","javascript是多线程的方式来操作这些ui","javascript是多线程的话，在多线程的交互下，处于ui中的dom节点就可能成为一个临界资源，假设存在两个线程同时操作一个dom","js","js引擎执行时gui线程会被挂起，gui更新则会被保存在一个队列中等到j","js的单线程和它的用途有关，作为浏览器脚本语言，它主要是用来处理页面中用户的交互，以及操作dom树、css","last","lifo","loop","macrotask1","macrotask1执行完(调用栈空)，再去执行微队列{console.log(3)}，输出3","macrotask1，扔进调用栈执行，此时宏队列{macrotask2","macrotask1，执行console.log(2","macrotask2","macrotask2，执行console.log(6)，输出6","new","node.js。实际上，如今，javascript","object","out","power","process.nexttick、mutationobserver、promise.then","promise((resolv","promise.resolve().then","promise.then","promise内语句console.log(4)，输出4，后面的then扔进微队列，此时的微队列{console.log(5","promise，则先正常执行promise里面语句，把后面的then","queue","reject","reserv","resolve(5","right","script","script（整体代码）、settimeout、setinterval、i/o、setimmedid","setinterval与settimeout","settimeout","settimeout、ajax","settimeout扔进宏队列，将这个记作macrotask1，此时宏队列为{macrotask1","settimeout扔进宏队列，记作macrotask2，此时的宏队列{macrotask1,macrotask2","stack","tab","then((data","treeviewcopyright"],"network/":[],"network/http和https.html":["10%~20","443","50","80","aleen42","http","https：是以安全为目标的http通道，简单讲是http的安全版，即http下加入ssl","http和http","http：全称超文本传输协议，是一种详细规定客户端与web","power","reserv","right","ssl","ssl+http","treeviewcopyright","web"],"network/传输层协议TCP和UDP.html":["39;3次握手&#39","aleen42","a主机需要和b主机之间建立数据收发，a需要发送一个请求询问b：&#39;我要建立连接&#39","a收到b的回应后，a向b再次回应：&#39;我要开始发送了&#39","a的发送能力、b","a的接收、发送能力，b","b收到消息后，会给a发送一个回应：&#39;可以连接&#39","b的发送能力、a","control","ip（internet","power","protocol","reserv","right","tcp","tcp(传输控制协议)是基于连接的。在正式收发数据之前，必须要与对方建立连接。这之间需要经过&#39;三次握手&#39","tcp/ip","tcp/ip协议分为五层，分别是应用层、传输层、网络层、数据链路层、物理层。每层都有对应的相关协议，其中tcp和udp","tcp和ucd","tcp和udp","tcp是可靠的，udp","tcp（transmiss","tcp，而第二种对应udp。tcp是需要对方确认的，也就是传输之前需要进行三次握手（传输的两端需要经过三次握手，才开始通信）。udp","tcp：是全双工、面向连接、可靠的，而且精确控制的协议。主要用于实时性不强，但传输要求高的应用。比方说：网页浏览、文件下载(不是bt、电脑下载)、邮件的发送等场合，这些场景需要tcp","treeviewcopyright","udp","udp(用户数据报协议)是面向非连接的，不与对方建立连接，而直接把数据报=包发送出去。udp适用于一次传输少量的数据，对于可靠性要求不高的应用环境。日常生活中使用的ping命令测试主机是否通信正常，事实上&#39;ping&#39;命令的原理就是向对方主机发送udp","udp不可靠，就没有应用场景。据说qq发送数据就是靠udp发送的，尽管是不可靠的连接，可是还是用了非常多的校验算法保证了数据质量稳定，同也保证了效率。tcp尽管耗时，可是对于稳定性优先的场景，还是应该有限选用tcp，比方浏览器中访问网页用的就是tcp。此外在一些长连接系统里面，比方微信，连接通道应该也是用tcp","udp：这是一个不可靠的传输协议。由于它不排序所要发送的数据段，不负责这些数据段到达目标的顺序（说一它才不可靠）。它在网络的开销要比tcp小很多，因此udp适合用在那些实时性强、允许出错的场合。比如说：即时通讯(msn、qq"],"network/TCP三次握手和四次挥手.html":["1。server确认isn序列号，放到seq域里，同时将确认序号(ack)设置为client的isn加1，即x+1","ack","ack=0","ack=1","ack=1，seq=u+1，ack=w+1","ack=1，seq=v，ack=u+1","ack=1，seq=x+1，ack=y+1","ack=x+1","aleen42","client","client再次发送确认包(ack)，ack标志位为1，并且把server发来isn的序号字段+1","client发送syn标志位1的包到server，以及初始序号x（保存在包头的序列号seq字段，简称isn），和ack标志位为0，并进入syn_send状态，等待serv","client和server断开连接，tcp","client接收到来自server端的关闭请求之后，发送最后一个ack确认包，确认序号设置为收到序号加1。cli","client的最后一个ack","client端和server端关闭tcp","client端和server端建立稳定tcp","close_wait","fin","fin=1，ack=1，seq=w，ack=u+1","fin=1，seq=u","fin_wait_1","fin_wait_2","fin标志位置为1，当前序列号为u的包，表示需要关闭连接了。cli","isn","last_ack","listen（监听）状态下，收到建立连接请求的syn报文后，把ack和syn放在一个报文里发送给客户端。而关闭连接时，当收到对方的fin报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方是否现在关闭发送数据通道，需要上层应用来决定，因此，己方ack和fin","power","reserv","right","seq","seq=i","seq=x","server","server发回确认包(ack","server将剩余数据发送完之后，会发送一个自己的fin包，序列号为u+1。serv","server接收到这个确认包之后，关闭连接，进入closed状态。(client会等待2msl之后，没有收到server的ack","server收到client的fin包之后，会发送一个确认序号为收到的序列号u+1的包，表明自己接受到了client关闭连接的请求，但还未准备好关闭连接。serv","server进入closed状态，自己也关闭进入clos","syn","syn=1","syn_rcvd","tcp","time_wait","treeviewcopyright"],"structure/":["aleen42","power","reserv","right","treeviewcopyright"],"structure/堆栈和队列.html":["0","1","2","3","39;(&#39","39;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&#39","39;)&#39","39;[&#39","39;]&#39","39;{&#39","39;}&#39","39;蜗牛&#39","4","5","6","aleen42","amp;&amp","ari","array.isarray(ary[i","ary.length","ary[i","ch","class","clear","console.log(nam","const","constructor","dequeu","enqueue(el","enqueue(element(","eval可执行上下文：ev","fals","fifo","flatten","fn","fn(result","fn(target","front","function","getitem","getqueu","gt","isempti","isvalid","item","items.get(thi","items.set(thi","javascript","javascript中，数据类型分为基本数据类型和引用数据类型，基本数据类型包含：string、number、boolean、undefined、null、symbol、bigint","js执行中最先进入全局环境，所以处于&quot;栈底的永远是全局环境的执行上下文&quot;。而处于&quot;栈顶的是当前正在执行函数的执行上下文&quot","lifo","lt","name","nestedlist","new","object","os","peek","pop","power","push(el","push(element(","queue","queue1","quot;()&quot","reserv","result","return","right","s","s.charat(i","s.length","saynam","sayname(nam","saynameend(nam","saynamestart(nam","size","stack","stack.length","stack.pop","stack.push(ch","target","target.push(item","this.getitem","this.getitems().length","this.getitems().pop","this.getitems().push(el","this.getitems()[this.getitems.length","this.getqueue().length","this.getqueue().push(el","this.getqueue().shift","this.getqueue()[0","treeviewcopyright","true","var","weakmap"],"structure/二叉树.html":["1","1层，根的子节点为第2","abdefgc","aleen42","amp;&amp","aux","aux.key","b","binarysearchtre","bst","cb","cb(node.key","console.log(tree.getroot","cycl","debgfac","edgfbca","fals","findminnode(nod","findminnode(node.right","function","function(cb","function(key","gt","if(key","if(nod","if(node.left","if(node.right","inordertraversenode(nod","inordertraversenode(node.left","inordertraversenode(node.right","inordertraversenode(root","insertnod","insertnode(nod","insertnode(node.left","insertnode(node.right","insertnode(root","key","lt","maxnode(nod","maxnode(root","minnode(nod","minnode(root","m（m&gt;=0","n,n的深度为从根到n的唯一路径长，根的深度为0","n,n的高度为从n到一片树叶的最长路径长，所有树叶的高度为0","new","newnod","newnode.key","node","node(key","node.key","node.left","node.right","null","n（n&gt;0","postordertraversenode(nod","postordertraversenode(node.left","postordertraversenode(node.right","power","preordertraversenode(nod","preordertraversenode(node.left","preordertraversenode(node.right","preordertraversenode(root","removenode(nod","removenode(node.left","removenode(node.right","removenode(root","reserv","return","right","root","searchnode(ndo","searchnode(node.left","searchnode(node.right","searchnode(root","this.getroot","this.inordertravers","this.insert","this.key","this.left","this.max","this.min","this.postordertravers","this.preordertravers","this.remov","this.right","this.search","tree","tree.insert(10","tree.insert(19","tree.insert(20","treeviewcopyright","true","while(nod"],"structure/哈希表HashMap.html":["0","0,1,2","0.25","0.75","0~9","1","10","1000","10^2","10^3","13","14","14，14","15","16","163","17","19","1的自然数中，除了1和它本身以外不再有其他因数的自然数。通俗来说，就是除了1","1，b","1，直到是为止。比如原长度：7，2","2","20","213","23、24、25、26、27","26","27","27^2","27^3","2，c","3","31","33","3~7","3、4、5、6、7","3；这样单词也可以用该种方式来表示：cat","4","43","5","5、bucket","6","60337","63","6543","7","9511151","9511151转换为95年11月15","95年11月15","aaaaaaaaaa","aleen42","amp","amp;&amp","b","b[1","bucket","bucket.length","bucket.push([key","bucket.splice(i","bucket[i","cat","class","console.log(hashfn(&quot;123&quot","console.log(hashfn(&quot;abc&quot","const","constant","constructor","count","f(key)将一组关键字映射到一个有限且连续的地址区间上，并以关键字在地址区间中的“像”作为元素在表中的存储位置的一种数据结构。这个映射过程称为哈希造表或者散列，这个映射函数f(key","f(x","fals","function","get(key","getprim","getprime(numb","gt","hashcod","hashcode(key","hashfn(key","hashfn(str","hashmap","hashtabl","hashtable.length","index","index+1","index=3","index=4","isempti","isprim","isprime(numb","item","item.charcodeat","java","javascript","key","laodfactor","len","length","limit","loadfactor","lt","math.ceil(math.sqrt(numb","n","n(n+1)/2","newlimit","null","number","o","o(1","o(n","o(n^2","oldstorag","power","prime","push","put","put(key","put(key,valu","remov","remove(key","reserv","resiz","resize(newlimit","resize(valu","return","right","size","stepsiz","storag","string","temp","this.count","this.limit","this.loadfactor","this.minloadfactor","this.put(b[0","this.resize(this.getprime(math.floor(this.limit","this.resize(this.getprime(this.limit","this.storag","this.storage[index","treeviewcopyright","true","trun","tupl","tuple[0","tuple[1","undefin","valu","x","x+1^2^、x+2^2^、x+3^3","x+1、x+2、x+3","z","zxcvvv"],"structure/链表.html":["39;head&#39","aleen42","amp;&amp","a、b节点之间插入一个新节点c","a断开指向b的指针，将指针指向c","console.log","currnod","currnode.el","currnode.next","currnode.next.el","currnode.next.previ","currnode.previ","currnode.previous.next","c节点将指针指向b","display","element","find","findprev","findprevi","function","head","head.next","insert","item","llist","new","newel","newnod","newnode.next","newnode.previ","next","node","node(el","null","o(1","o(1),插入的时间复杂度是o(n","o(n","o(n)，插入的时间复杂度是：o(1","pointer","power","prev","previou","prevnod","prevnode.next","prevnode.next.next","prev属性，所以我们需要把nod","remov","reserv","return","right","this.display","this.el","this.find","this.findprev","this.head","this.insert","this.next","this.prev","this.remov","treeviewcopyright","val,另一个就是节点的指针next","var"],"algorithm/":["aleen42","complex","constant","exponenti","factori","growth","linear","logarithm","n","o(1","o(1)，也称为常数阶。只有一重循环，则算法的基本操作的执行频度与问题规模n呈线性增大关系，记作o（n","o(2^n","o(log","o(n","o(n^2","o(n^3","power","reserv","right","squar","treeviewcopyright"],"algorithm/排序.html":["0","1","aleen42","array","array.length","array[i","array[j","array[target","break","bubblesort(array","complet","fals","function","gt","insertsort(array","j","lt","o(1","o(n2","power","reserv","return","right","target","treeviewcopyright","true"]},"length":35},"tokenStore":{"root":{"0":{"0":{"0":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}},"docs":{}},"2":{"docs":{},":":{"5":{"4":{"docs":{},":":{"1":{"6":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.011730205278592375},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.018072289156626505},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.02098635886673662},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.026595744680851064},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.020703933747412008},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.046153846153846156}},".":{"2":{"5":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"4":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"7":{"5":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.010351966873706004}}},"docs":{}},"docs":{}},",":{"1":{"docs":{},",":{"2":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"docs":{}},"~":{"9":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664},"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},"p":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.059782608695652176}}}}},"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.08333333333333333},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00558659217877095},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.008281573498964804}},"p":{"docs":{},"x":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.016304347826086956}}}},"%":{"docs":{},"~":{"2":{"0":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}},"docs":{}},"docs":{}}},"^":{"2":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"1":{"0":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.018292682926829267}}},"2":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.018292682926829267}}},"3":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.020703933747412008}}},"4":{"7":{"5":{"2":{"3":{"6":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"，":{"1":{"4":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"docs":{}}},"5":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}},"6":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}},"7":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}},"9":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664},"js/Promise.html":{"ref":"js/Promise.html","tf":0.011730205278592375},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.04819277108433735},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0111731843575419},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.08163265306122448},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.08},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.013641133263378805},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.015957446808510637},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.031055900621118012},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.09230769230769231}},"~":{"1":{"0":{"docs":{},"，":{"docs":{},"但":{"docs":{},"却":{"docs":{},"输":{"docs":{},"出":{"1":{"0":{"docs":{},"次":{"1":{"1":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"宏":{"docs":{},"任":{"docs":{},"务":{"docs":{},"，":{"docs":{},"当":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"已":{"docs":{},"经":{"docs":{},"结":{"docs":{},"束":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"十":{"docs":{},"次":{"1":{"1":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"5":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"8":{"docs":{},"m":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}},"docs":{}},"、":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}}}}}},"s":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"需":{"docs":{},"要":{"docs":{},"占":{"docs":{},"用":{"3":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"单":{"docs":{},"位":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"一":{"docs":{},"直":{"docs":{},"处":{"docs":{},"于":{"docs":{},"暂":{"docs":{},"停":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"而":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"进":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"收":{"docs":{},"集":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"2":{"docs":{},",":{"3":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0074487895716946}},",":{"4":{"docs":{},",":{"5":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"确":{"docs":{},"认":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"序":{"docs":{},"列":{"docs":{},"号":{"docs":{},"，":{"docs":{},"放":{"docs":{},"到":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"域":{"docs":{},"里":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"确":{"docs":{},"认":{"docs":{},"序":{"docs":{},"号":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"加":{"1":{"docs":{},"，":{"docs":{},"即":{"docs":{},"x":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"，":{"docs":{},"根":{"docs":{},"的":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"第":{"2":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}}}}}}}}}},"的":{"docs":{},"自":{"docs":{},"然":{"docs":{},"数":{"docs":{},"中":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"1":{"docs":{},"和":{"docs":{},"它":{"docs":{},"本":{"docs":{},"身":{"docs":{},"以":{"docs":{},"外":{"docs":{},"不":{"docs":{},"再":{"docs":{},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"因":{"docs":{},"数":{"docs":{},"的":{"docs":{},"自":{"docs":{},"然":{"docs":{},"数":{"docs":{},"。":{"docs":{},"通":{"docs":{},"俗":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"除":{"docs":{},"了":{"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"，":{"docs":{},"b":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"直":{"docs":{},"到":{"docs":{},"是":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"原":{"docs":{},"长":{"docs":{},"度":{"docs":{},"：":{"7":{"docs":{},"，":{"2":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"2":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0062959076600209865}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.0297029702970297}},"p":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196}},")":{"docs":{},"/":{"2":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}},"docs":{}}}}}},"1":{"9":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"docs":{}},"2":{"1":{"docs":{},"/":{"5":{"docs":{},"/":{"1":{"2":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"p":{"docs":{},"x":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}}},"1":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"3":{"docs":{},"、":{"2":{"4":{"docs":{},"、":{"2":{"5":{"docs":{},"、":{"2":{"6":{"docs":{},"、":{"2":{"7":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"4":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"6":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"7":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"^":{"2":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"8":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667}}},"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.024096385542168676},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0148975791433892},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.061224489795918366},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0062959076600209865},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.024844720496894408}},")":{"docs":{},"判":{"docs":{},"断":{"docs":{},"x":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"x":{"docs":{},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"或":{"docs":{},"者":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"x":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"3":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}},"、":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}}}}}}}}},".":{"docs":{},"v":{"8":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338}}},"docs":{}}},"位":{"docs":{},"系":{"docs":{},"统":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"6":{"docs":{},"m":{"docs":{},"b":{"docs":{},"，":{"docs":{},"老":{"docs":{},"生":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"7":{"0":{"0":{"docs":{},"m":{"docs":{},"b":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}},"docs":{}}},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"扔":{"docs":{},"进":{"docs":{},"微":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"微":{"docs":{},"队":{"docs":{},"列":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"3":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}},"3":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"4":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802}}},"docs":{}},"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"2":{"docs":{},"位":{"docs":{},"系":{"docs":{},"统":{"docs":{},"下":{"docs":{},"约":{"docs":{},"为":{"0":{"docs":{},".":{"7":{"docs":{},"g":{"docs":{},"b":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}},"docs":{}}},"docs":{}}}}}}}},"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.01049317943336831}},";":{"1":{"0":{"0":{"docs":{},"%":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"2":{"0":{"docs":{},"%":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}}}}},"docs":{}},"3":{"0":{"0":{"docs":{},"%":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}},"docs":{}},"docs":{}}}}}}},"4":{"0":{"docs":{},"%":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.011730205278592375},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.02}}},"docs":{}},"docs":{}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}},"docs":{}},"docs":{}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}},"docs":{}},"docs":{}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}},"docs":{}},"docs":{}}}}}}}}}},"h":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}},"docs":{}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}},"docs":{}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"docs":{}},"docs":{}}}}}}},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.009887005649717515}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0062959076600209865}}},"docs":{}},"docs":{}}}}}}}},"%":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}},"docs":{}},"docs":{}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}},"@":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"z":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}}}}}}}}}}},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}},"$":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},":":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}},"这":{"docs":{},"是":{"docs":{},"爷":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}}}}}}},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"[":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},":":{"8":{"docs":{},"]":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}},"docs":{}},"docs":{}}}},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00847457627118644}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"docs":{}},"docs":{}}}},"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"docs":{}},"docs":{}}}},"docs":{}}}}}}}}}},"价":{"docs":{},"格":{"docs":{},"=":{"2":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"z":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"渲":{"docs":{},"染":{"docs":{},"广":{"docs":{},"东":{"docs":{},"省":{"docs":{},"地":{"docs":{},"图":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}}}}}}}},"百":{"docs":{},"度":{"docs":{},"地":{"docs":{},"图":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}}}}}}},"第":{"docs":{},"三":{"docs":{},"方":{"docs":{},"地":{"docs":{},"图":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}},"docs":{}},"docs":{}}}}}}}},"谷":{"docs":{},"歌":{"docs":{},"地":{"docs":{},"图":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}},"docs":{}},"docs":{}}}}}}}}}}},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}},";":{"docs":{},"，":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},")":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"，":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"{":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"，":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"}":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"，":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"，":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"]":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}},")":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}}}},"]":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}}}},"{":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}},"docs":{}},"docs":{}}}},"}":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}}}},"蜗":{"docs":{},"牛":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"docs":{}},"docs":{}}}}}}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0186219739292365},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.05333333333333334},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.014492753623188406}},"、":{"4":{"docs":{},"、":{"5":{"docs":{},"、":{"6":{"docs":{},"、":{"7":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}}}}}},".":{"docs":{},"v":{"8":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338}}},"docs":{}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.04081632653061224}}}}},"x":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}},"d":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"~":{"7":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"；":{"docs":{},"这":{"docs":{},"样":{"docs":{},"单":{"docs":{},"词":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"该":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"：":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}}}}}}}}}}}}}},"4":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}},"4":{"3":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}},"docs":{}},"5":{"docs":{},"道":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}},"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0111731843575419},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.05333333333333334},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}},".":{"docs":{},"v":{"8":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"算":{"docs":{},"法":{"docs":{},"（":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338}}}}}}}}}}}}}}}},"docs":{}}},",":{"5":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}},"5":{"0":{"0":{"0":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{},"p":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}}}},"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.020618556701030927},"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.008281573498964804}},".":{"docs":{},"v":{"8":{"docs":{},"老":{"docs":{},"生":{"docs":{},"代":{"docs":{},"算":{"docs":{},"法":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338}}}}}}}}}}}}},"docs":{}},"引":{"docs":{},"用":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}},",":{"6":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}},"docs":{}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"不":{"docs":{},"会":{"docs":{},"严":{"docs":{},"格":{"docs":{},"执":{"docs":{},"行":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}},"6":{"0":{"3":{"3":{"7":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"docs":{}},"docs":{}},"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"4":{"docs":{},"位":{"docs":{},"系":{"docs":{},"统":{"docs":{},"下":{"docs":{},"约":{"docs":{},"为":{"1":{"docs":{},".":{"4":{"docs":{},"g":{"docs":{},"b":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}},"docs":{}}},"docs":{}}},"，":{"docs":{},"新":{"docs":{},"生":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"3":{"2":{"docs":{},"m":{"docs":{},"b":{"docs":{},"，":{"docs":{},"老":{"docs":{},"生":{"docs":{},"代":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"docs":{},".":{"4":{"docs":{},"g":{"docs":{},"b":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"5":{"4":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"docs":{}},"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},".":{"docs":{},"为":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}},"7":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.012422360248447204}},".":{"docs":{},"把":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"样":{"docs":{},"式":{"docs":{},"从":{"docs":{},"j":{"docs":{},"s":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"提":{"docs":{},"取":{"docs":{},"到":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"0":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}},"8":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0062959076600209865}}},"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}},"9":{"5":{"1":{"1":{"1":{"5":{"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"转":{"docs":{},"换":{"docs":{},"为":{"9":{"5":{"docs":{},"年":{"1":{"1":{"docs":{},"月":{"1":{"5":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"年":{"1":{"1":{"docs":{},"月":{"1":{"5":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{},"b":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.03614457831325301},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.10526315789473684}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}},":":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}}}}},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"x":{"2":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}},"3":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.021739130434782608}}},"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.02577319587628866},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}},"u":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.008287292817679558}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.10526315789473684},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"并":{"docs":{},"新":{"docs":{},"建":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"下":{"docs":{},"的":{"docs":{},"j":{"docs":{},"s":{"docs":{},"和":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"。":{"docs":{},"发":{"docs":{},"现":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"整":{"docs":{},"合":{"docs":{},"了":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"成":{"docs":{},"了":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"并":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}},"docs":{}},"docs":{}}},".":{"docs":{},"$":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},",":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.055900621118012424}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664}}},"z":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664}}},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.04891304347826087}},":":{"docs":{},"r":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00847457627118644}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}}}}}}}}},"转":{"docs":{},"义":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.042682926829268296}}}}}}}}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"带":{"docs":{},"着":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"的":{"docs":{},"登":{"docs":{},"陆":{"docs":{},"凭":{"docs":{},"证":{"docs":{},"冒":{"docs":{},"充":{"docs":{},"受":{"docs":{},"害":{"docs":{},"用":{"docs":{},"户":{"docs":{},"执":{"docs":{},"行":{"docs":{},"对":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"的":{"docs":{},"恶":{"docs":{},"意":{"docs":{},"操":{"docs":{},"作":{"2":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"植":{"docs":{},"有":{"docs":{},"访":{"docs":{},"问":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}},"中":{"docs":{},"断":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.016304347826086956}},"和":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}},"f":{"docs":{},"c":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":10.076086956521738}},"环":{"docs":{},"境":{"docs":{},"的":{"docs":{},"盒":{"docs":{},"子":{"docs":{},"，":{"docs":{},"他":{"docs":{},"们":{"docs":{},"两":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"才":{"docs":{},"不":{"docs":{},"会":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"触":{"docs":{},"发":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"3":{"docs":{},"的":{"docs":{},"b":{"docs":{},"f":{"docs":{},"c":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"不":{"docs":{},"会":{"docs":{},"与":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"区":{"docs":{},"域":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"，":{"docs":{},"把":{"docs":{},"绿":{"docs":{},"色":{"docs":{},"盒":{"docs":{},"子":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"b":{"docs":{},"f":{"docs":{},"c":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"度":{"docs":{},"时":{"docs":{},"，":{"docs":{},"浮":{"docs":{},"动":{"docs":{},"子":{"docs":{},"元":{"docs":{},"素":{"docs":{},"也":{"docs":{},"参":{"docs":{},"与":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"把":{"docs":{},"外":{"docs":{},"层":{"docs":{},"盒":{"docs":{},"子":{"docs":{},"设":{"docs":{},"置":{"docs":{},"b":{"docs":{},"f":{"docs":{},"c":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"没":{"docs":{},"有":{"docs":{},"包":{"docs":{},"裹":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"多":{"docs":{},"列":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"（":{"docs":{},"标":{"docs":{},"准":{"docs":{},"变":{"docs":{},"更":{"docs":{},"，":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"$":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.009868421052631578}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}},"收":{"docs":{},"到":{"docs":{},"消":{"docs":{},"息":{"docs":{},"后":{"docs":{},"，":{"docs":{},"会":{"docs":{},"给":{"docs":{},"a":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"回":{"docs":{},"应":{"docs":{},"：":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"可":{"docs":{},"以":{"docs":{},"连":{"docs":{},"接":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"发":{"docs":{},"送":{"docs":{},"能":{"docs":{},"力":{"docs":{},"、":{"docs":{},"a":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}},"s":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.019736842105263157}}}},"[":{"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"c":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.018072289156626505},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.05263157894736842},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"c":{"docs":{},"k":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"点":{"docs":{},"击":{"docs":{},"改":{"docs":{},"变":{"docs":{},"子":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"点":{"docs":{},"我":{"docs":{},"改":{"docs":{},"变":{"docs":{},"父":{"docs":{},"组":{"docs":{},"件":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"点":{"docs":{},"击":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"点":{"docs":{},"击":{"docs":{},"传":{"docs":{},"值":{"docs":{},"给":{"docs":{},"爷":{"docs":{},"组":{"docs":{},"件":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"点":{"docs":{},"击":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"t":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.05172413793103448}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}},"]":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"次":{"docs":{},"发":{"docs":{},"送":{"docs":{},"确":{"docs":{},"认":{"docs":{},"包":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"把":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"发":{"docs":{},"来":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"的":{"docs":{},"序":{"docs":{},"号":{"docs":{},"字":{"docs":{},"段":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"发":{"docs":{},"送":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"1":{"docs":{},"的":{"docs":{},"包":{"docs":{},"到":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"初":{"docs":{},"始":{"docs":{},"序":{"docs":{},"号":{"docs":{},"x":{"docs":{},"（":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"包":{"docs":{},"头":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"号":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"字":{"docs":{},"段":{"docs":{},"，":{"docs":{},"简":{"docs":{},"称":{"docs":{},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"和":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"并":{"docs":{},"进":{"docs":{},"入":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"等":{"docs":{},"待":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"和":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"断":{"docs":{},"开":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}},"接":{"docs":{},"收":{"docs":{},"到":{"docs":{},"来":{"docs":{},"自":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"端":{"docs":{},"的":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"请":{"docs":{},"求":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"发":{"docs":{},"送":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"确":{"docs":{},"认":{"docs":{},"包":{"docs":{},"，":{"docs":{},"确":{"docs":{},"认":{"docs":{},"序":{"docs":{},"号":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"收":{"docs":{},"到":{"docs":{},"序":{"docs":{},"号":{"docs":{},"加":{"1":{"docs":{},"。":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}},"端":{"docs":{},"和":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"端":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}},"建":{"docs":{},"立":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"2":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"e":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"改":{"docs":{},"写":{"docs":{},"：":{"docs":{},"当":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"时":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"当":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"取":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"把":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"会":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"当":{"docs":{},"作":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.025}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.05}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.02}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}},"r":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.042682926829268296},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}},"(":{"1":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}}},"2":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"3":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"4":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"5":{"docs":{},")":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"5":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}},"6":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"7":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}}},"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}},"a":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}},"d":{"docs":{},"d":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.018072289156626505}},"(":{"1":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"1":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},")":{"docs":{},"(":{"2":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00558659217877095}},")":{"docs":{},"(":{"3":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},"/":{"docs":{},"/":{"1":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}},"docs":{}}},"docs":{}}},"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"i":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}},"o":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"2":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}},"j":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649}},";":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"错":{"docs":{},"误":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}},"docs":{}},"docs":{}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"1":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}},"docs":{}}}},"2":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}},"docs":{}}}},"docs":{}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}},"docs":{}},"docs":{}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}},";":{"docs":{},"请":{"docs":{},"为":{"docs":{},"路":{"docs":{},"由":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"法":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}},"o":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"[":{"1":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}}}}}}}}}}}}}},"l":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"4":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"4":{"docs":{},"(":{"1":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0074487895716946}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},"/":{"docs":{},"/":{"docs":{},"[":{"2":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}},"docs":{}}},"docs":{}}},"docs":{}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"1":{"2":{"3":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}},"docs":{}},"docs":{}},"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.013196480938416423},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.05},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0260707635009311},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.01694915254237288},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.011542497376705142},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.024844720496894408}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}}},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0074487895716946}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602},"algorithm/":{"ref":"algorithm/","tf":0.06451612903225806}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}},"x":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"环":{"docs":{},"境":{"docs":{},"，":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.016304347826086956}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"5":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}},"docs":{}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"（":{"docs":{},"区":{"docs":{},"别":{"docs":{},"于":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.039603960396039604},"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}},"u":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.016304347826086956},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.021739130434782608}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.04216867469879518}},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.01675977653631285}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},",":{"docs":{},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"）":{"docs":{},"和":{"docs":{},"柯":{"docs":{},"里":{"docs":{},"化":{"docs":{},"（":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.016574585635359115},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"u":{"docs":{},"t":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},"e":{"docs":{},"d":{"docs":{},"与":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.16129032258064516}}},"t":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.046153846153846156}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}},"p":{"docs":{},"y":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.08163265306122448}},"e":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"d":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"、":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"大":{"docs":{},"小":{"docs":{},"不":{"docs":{},"能":{"docs":{},"超":{"docs":{},"过":{"4":{"docs":{},"k":{"docs":{},"；":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"和":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"比":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"i":{"docs":{},"e":{"docs":{},"大":{"docs":{},"得":{"docs":{},"多":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"达":{"docs":{},"到":{"5":{"docs":{},"m":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"的":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"；":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"和":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"置":{"docs":{},"的":{"docs":{},"过":{"docs":{},"期":{"docs":{},"时":{"docs":{},"间":{"docs":{},"之":{"docs":{},"前":{"docs":{},"一":{"docs":{},"直":{"docs":{},"有":{"docs":{},"效":{"docs":{},"；":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"永":{"docs":{},"久":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"后":{"docs":{},"数":{"docs":{},"据":{"docs":{},"不":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"除":{"docs":{},"非":{"docs":{},"主":{"docs":{},"动":{"docs":{},"删":{"docs":{},"除":{"docs":{},"数":{"docs":{},"据":{"docs":{},"；":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}},"r":{"docs":{},"e":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.020527859237536656},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}},"c":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"4":{"docs":{},",":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"4":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"c":{"docs":{},"h":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.017595307917888565},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"(":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"成":{"docs":{},"功":{"docs":{},"回":{"docs":{},"调":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"很":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"失":{"docs":{},"败":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{},"最":{"docs":{},"终":{"docs":{},"都":{"docs":{},"会":{"docs":{},"走":{"docs":{},"到":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"失":{"docs":{},"败":{"docs":{},"回":{"docs":{},"调":{"docs":{},"中":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"把":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.15841584158415842}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}},"h":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.03723404255319149}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}},"n":{"docs":{},"g":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"e":{"docs":{},"b":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"u":{"docs":{},"t":{"docs":{},"f":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.016574585635359115}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"中":{"docs":{},"打":{"docs":{},"开":{"docs":{},"了":{"docs":{},"多":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"打":{"docs":{},"开":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}},"不":{"docs":{},"再":{"docs":{},"引":{"docs":{},"用":{"docs":{},"a":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825}}},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.06779661016949153}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.06779661016949153}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}},"r":{"docs":{},"f":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.061224489795918366}},"（":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}}}}},"s":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.020618556701030927},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0211864406779661}},"规":{"docs":{},"则":{"docs":{},"树":{"docs":{},"：":{"docs":{},"生":{"docs":{},"成":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"规":{"docs":{},"则":{"docs":{},"树":{"docs":{},"（":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}},"时":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"些":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"来":{"docs":{},"解":{"docs":{},"析":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196}},"，":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196}}}}}}},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.039473684210526314}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.009868421052631578}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}}}}},"p":{"docs":{},"u":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}}}},"节":{"docs":{},"点":{"docs":{},"将":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"b":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}},"g":{"docs":{"./":{"ref":"./","tf":0.05263157894736842}},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.3684210526315789}}}}}},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"博":{"docs":{},"客":{"docs":{},"地":{"docs":{},"址":{"docs":{},"：":{"docs":{},"z":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"y":{"docs":{},"u":{"docs":{},"y":{"docs":{},"y":{"docs":{},"k":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.0747800586510264},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.04655493482309125},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.03608247422680412},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.045871559633027525},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.02631578947368421},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.026915113871635612},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}},";":{"docs":{},"i":{"docs":{},"d":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}},"c":{"docs":{},"(":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"b":{"docs":{},"a":{"docs":{},"g":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.011299435028248588}}}}},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"中":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"相":{"docs":{},"关":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"添":{"docs":{},"加":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.024390243902439025}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.010351966873706004}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"加":{"docs":{},"速":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"使":{"docs":{},"用":{"3":{"docs":{},"d":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}},"docs":{}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}}},"i":{"docs":{},"d":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"、":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}}}}},"（":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}},"w":{"docs":{},"t":{"docs":{},"h":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"o":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.042682926829268296}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.03048780487804878}}}}}}},"z":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}}}}}}},"i":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"j":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}},"m":{"docs":{},"t":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.05263157894736842},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.05263157894736842}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.02824858757062147}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.020703933747412008}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"+":{"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}},"=":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}},"4":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}}}},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{},"效":{"docs":{},"率":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"低":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"对":{"docs":{},"比":{"docs":{},"下":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"三":{"docs":{},"种":{"docs":{},"循":{"docs":{},"环":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"、":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"改":{"docs":{},"变":{"docs":{},"为":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.02717391304347826}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}},"f":{"docs":{},"o":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"8":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}},"9":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"都":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"私":{"docs":{},"有":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"i":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.02631578947368421}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.013157894736842105}}}}}}},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}},"n":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.02127659574468085},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.008281573498964804}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}},"m":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.02127659574468085},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.06779661016949153}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}}}}}}}},"o":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.01303538175046555}},"(":{"docs":{},"f":{"docs":{},"p":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},".":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},"函":{"docs":{},"子":{"docs":{},"中":{"docs":{},"的":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"不":{"docs":{},"纯":{"docs":{},"的":{"docs":{},"动":{"docs":{},"作":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"o":{"docs":{},"f":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"o":{"docs":{},"f":{"docs":{},"函":{"docs":{},"数":{"docs":{},"会":{"docs":{},"将":{"docs":{},"我":{"docs":{},"们":{"docs":{},"传":{"docs":{},"递":{"docs":{},"进":{"docs":{},"来":{"docs":{},"值":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"再":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"i":{"docs":{},"o":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}},"g":{"docs":{},"s":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.03048780487804878}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"p":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.012422360248447204},"algorithm/":{"ref":"algorithm/","tf":0.0967741935483871}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.049342105263157895},"structure/链表.html":{"ref":"structure/链表.html","tf":0.022598870056497175}},"版":{"docs":{},"本":{"docs":{},"：":{"1":{"0":{"docs":{},".":{"1":{"2":{"docs":{},".":{"0":{"docs":{"./":{"ref":"./","tf":0.05263157894736842}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"。":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"，":{"docs":{},"如":{"docs":{},"今":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.029605263157894735}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.03289473684210526}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.03289473684210526}}}}}}}},"中":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}},"环":{"docs":{},"境":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}}}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}},"e":{"docs":{},"l":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}},"n":{"docs":{},"e":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802}},"隐":{"docs":{},"藏":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"p":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.05263157894736842},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.022598870056497175}}}},"e":{"docs":{},"w":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.010263929618768328},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.018072289156626505},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.025},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0111731843575419},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.009887005649717515},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.009868421052631578},"structure/链表.html":{"ref":"structure/链表.html","tf":0.022598870056497175}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667}},"a":{"docs":{},"y":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0062959076600209865}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.05263157894736842},"structure/链表.html":{"ref":"structure/链表.html","tf":0.022598870056497175}},"e":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}},"e":{"docs":{},"l":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.022598870056497175}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.01694915254237288}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.09539473684210527},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.026915113871635612},"structure/链表.html":{"ref":"structure/链表.html","tf":0.05649717514124294}},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}},"m":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.012422360248447204}},"，":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03038674033149171},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.024390243902439025},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"]":{"docs":{},".":{"docs":{},"[":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},":":{"8":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"docs":{}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"n":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"从":{"docs":{},"根":{"docs":{},"到":{"docs":{},"n":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"，":{"docs":{},"根":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"度":{"docs":{},"为":{"docs":{},"从":{"docs":{},"n":{"docs":{},"到":{"docs":{},"一":{"docs":{},"片":{"docs":{},"树":{"docs":{},"叶":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"路":{"docs":{},"径":{"docs":{},"长":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"树":{"docs":{},"叶":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"n":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"0":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}}}}}}},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"/":{"2":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}}},"docs":{}}}}},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.015957446808510637}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.05263157894736842}},"e":{"docs":{},"r":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}},"发":{"docs":{},"回":{"docs":{},"确":{"docs":{},"认":{"docs":{},"包":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}},"将":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"数":{"docs":{},"据":{"docs":{},"发":{"docs":{},"送":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"包":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"docs":{},"号":{"docs":{},"为":{"docs":{},"u":{"docs":{},"+":{"1":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"收":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"确":{"docs":{},"认":{"docs":{},"包":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"进":{"docs":{},"入":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"会":{"docs":{},"等":{"docs":{},"待":{"2":{"docs":{},"m":{"docs":{},"s":{"docs":{},"l":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"收":{"docs":{},"到":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"收":{"docs":{},"到":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"包":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"确":{"docs":{},"认":{"docs":{},"序":{"docs":{},"号":{"docs":{},"为":{"docs":{},"收":{"docs":{},"到":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"号":{"docs":{},"u":{"docs":{},"+":{"1":{"docs":{},"的":{"docs":{},"包":{"docs":{},"，":{"docs":{},"表":{"docs":{},"明":{"docs":{},"自":{"docs":{},"己":{"docs":{},"接":{"docs":{},"受":{"docs":{},"到":{"docs":{},"了":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"请":{"docs":{},"求":{"docs":{},"，":{"docs":{},"但":{"docs":{},"还":{"docs":{},"未":{"docs":{},"准":{"docs":{},"备":{"docs":{},"好":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"入":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"自":{"docs":{},"己":{"docs":{},"也":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"进":{"docs":{},"入":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.013196480938416423},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.027522935779816515}},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664}}}}}}}},"、":{"docs":{},"a":{"docs":{},"j":{"docs":{},"a":{"docs":{},"x":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}},"扔":{"docs":{},"进":{"docs":{},"宏":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"记":{"docs":{},"作":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"1":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"宏":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"1":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"记":{"docs":{},"作":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"2":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"宏":{"docs":{},"队":{"docs":{},"列":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"2":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}},"与":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}}}}}}},"m":{"docs":{},"i":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"，":{"docs":{},"每":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"8":{"docs":{},"m":{"docs":{},"b":{"docs":{},"（":{"3":{"2":{"docs":{},"位":{"docs":{},"）":{"docs":{},"或":{"1":{"6":{"docs":{},"m":{"docs":{},"b":{"docs":{},"（":{"6":{"4":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}},"q":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}},"=":{"docs":{},"i":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"x":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}},"c":{"docs":{},"e":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.07228915662650602}},"s":{"docs":{},")":{"docs":{},"：":{"docs":{},"t":{"docs":{},"o":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"和":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.030120481927710843}},"e":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"分":{"docs":{},"代":{"docs":{},"式":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"下":{"docs":{},"，":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"存":{"docs":{},"活":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"t":{"docs":{},"o":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}},"（":{"docs":{},"整":{"docs":{},"体":{"docs":{},"代":{"docs":{},"码":{"docs":{},"）":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"、":{"docs":{},"i":{"docs":{},"/":{"docs":{},"o":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.024861878453038673},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.018072289156626505}},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"演":{"docs":{},"进":{"docs":{},"而":{"docs":{},"来":{"docs":{},"的":{"docs":{},"，":{"docs":{},"相":{"docs":{},"比":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.018072289156626505}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0111731843575419},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"u":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}},"c":{"docs":{},"k":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.02127659574468085}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.015957446808510637}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"a":{"docs":{},"g":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.012422360248447204}}}}}},"e":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.04081632653061224}}}},"z":{"docs":{},"e":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.02127659574468085},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.008281573498964804}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"与":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"中":{"docs":{},"这":{"docs":{},"个":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"间":{"docs":{},"对":{"docs":{},"比":{"docs":{},"，":{"docs":{},"没":{"docs":{},"变":{"docs":{},"化":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"3":{"0":{"4":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"间":{"docs":{},"比":{"docs":{},"i":{"docs":{},"f":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"，":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"有":{"docs":{},"变":{"docs":{},"化":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"2":{"0":{"0":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}},"q":{"docs":{},"l":{"docs":{},"注":{"docs":{},"入":{"docs":{},"、":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"劫":{"docs":{},"持":{"docs":{},"、":{"docs":{},"d":{"docs":{},"o":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.06451612903225806}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}}}}}}}},"k":{"docs":{},"y":{"docs":{},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"v":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},".":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"文":{"docs":{},"件":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"2":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"目":{"docs":{},"录":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"e":{"docs":{},"s":{"2":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"0":{"0":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"1":{"0":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"8":{"8":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},";":{"docs":{},",":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"8":{"8":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"e":{"docs":{},"r":{"docs":{},"(":{"2":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"0":{"0":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}},"docs":{}},"1":{"0":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}},"8":{"8":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}},"e":{"docs":{},"n":{"docs":{},"z":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}}}}}},"o":{"docs":{},"w":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.042682926829268296}}}}},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"s":{"docs":{},"l":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}},"+":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}}}}}}}},"y":{"docs":{},"n":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.034482758620689655}},"=":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.034482758620689655}}},"docs":{}},"_":{"docs":{},"r":{"docs":{},"c":{"docs":{},"v":{"docs":{},"d":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}},"j":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.12307692307692308}},"s":{"docs":{"js/":{"ref":"js/","tf":11},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":10},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":10.119266055045872}},"o":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}}}}}}}}}}}}},"引":{"docs":{},"擎":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{},"调":{"docs":{},"用":{"docs":{},"j":{"docs":{},"s":{"docs":{},"引":{"docs":{},"擎":{"docs":{},"执":{"docs":{},"行":{"docs":{},"j":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"线":{"docs":{},"程":{"docs":{},"会":{"docs":{},"被":{"docs":{},"挂":{"docs":{},"起":{"docs":{},"，":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"更":{"docs":{},"新":{"docs":{},"则":{"docs":{},"会":{"docs":{},"被":{"docs":{},"保":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"等":{"docs":{},"到":{"docs":{},"j":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"负":{"docs":{},"责":{"docs":{},"将":{"docs":{},"新":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"化":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"、":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"、":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"、":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"、":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"x":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"单":{"docs":{},"线":{"docs":{},"程":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"用":{"docs":{},"途":{"docs":{},"有":{"docs":{},"关":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"脚":{"docs":{},"本":{"docs":{},"语":{"docs":{},"言":{"docs":{},"，":{"docs":{},"它":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"页":{"docs":{},"面":{"docs":{},"中":{"docs":{},"用":{"docs":{},"户":{"docs":{},"的":{"docs":{},"交":{"docs":{},"互":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"操":{"docs":{},"作":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"树":{"docs":{},"、":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"中":{"docs":{},"最":{"docs":{},"先":{"docs":{},"进":{"docs":{},"入":{"docs":{},"全":{"docs":{},"局":{"docs":{},"环":{"docs":{},"境":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"处":{"docs":{},"于":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"栈":{"docs":{},"底":{"docs":{},"的":{"docs":{},"永":{"docs":{},"远":{"docs":{},"是":{"docs":{},"全":{"docs":{},"局":{"docs":{},"环":{"docs":{},"境":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"。":{"docs":{},"而":{"docs":{},"处":{"docs":{},"于":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"正":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.08333333333333333},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.03614457831325301},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"机":{"docs":{},"制":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"知":{"docs":{},"道":{"docs":{},"内":{"docs":{},"存":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"。":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"脚":{"docs":{},"本":{"docs":{},"中":{"docs":{},"，":{"docs":{},"绝":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"生":{"docs":{},"存":{"docs":{},"期":{"docs":{},"很":{"docs":{},"短":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"部":{"docs":{},"分":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"生":{"docs":{},"存":{"docs":{},"期":{"docs":{},"较":{"docs":{},"长":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"v":{"8":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{},"这":{"docs":{},"些":{"docs":{},"u":{"docs":{},"i":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}},"话":{"docs":{},"，":{"docs":{},"在":{"docs":{},"多":{"docs":{},"线":{"docs":{},"程":{"docs":{},"的":{"docs":{},"交":{"docs":{},"互":{"docs":{},"下":{"docs":{},"，":{"docs":{},"处":{"docs":{},"于":{"docs":{},"u":{"docs":{},"i":{"docs":{},"中":{"docs":{},"的":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"可":{"docs":{},"能":{"docs":{},"成":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"界":{"docs":{},"资":{"docs":{},"源":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"线":{"docs":{},"程":{"docs":{},"同":{"docs":{},"时":{"docs":{},"操":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"分":{"docs":{},"为":{"docs":{},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"包":{"docs":{},"含":{"docs":{},"：":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"、":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"、":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"、":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"、":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"、":{"docs":{},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"、":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}}}}}}},"o":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}},"a":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"x":{"docs":{},"x":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"4":{"2":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664},"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.04081632653061224},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667},"htmlcss/":{"ref":"htmlcss/","tf":0.25},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"design/":{"ref":"design/","tf":0.3333333333333333},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101},"network/http和https.html":{"ref":"network/http和https.html","tf":0.09523809523809523},"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.05},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.034482758620689655},"structure/":{"ref":"structure/","tf":0.3333333333333333},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402},"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588},"algorithm/":{"ref":"algorithm/","tf":0.06451612903225806},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}}},"docs":{}},"docs":{}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"=":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196}},":":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}},"a":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}},"+":{"docs":{},"规":{"docs":{},"范":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"的":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"用":{"docs":{},"不":{"docs":{},"上":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{},"但":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"规":{"docs":{},"范":{"docs":{},"才":{"docs":{},"加":{"docs":{},"上":{"docs":{},"这":{"docs":{},"个":{"docs":{},"控":{"docs":{},"制":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"别":{"docs":{},"人":{"docs":{},"写":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},";":{"docs":{},"&":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.013641133263378805},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.015957446808510637},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.013157894736842105},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}},"p":{"docs":{},"i":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.022388059701492536},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"p":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},".":{"docs":{},"v":{"docs":{},"u":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"r":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}},",":{"docs":{},"b":{"docs":{},"互":{"docs":{},"相":{"docs":{},"引":{"docs":{},"用":{"docs":{},",":{"docs":{},"计":{"docs":{},"数":{"docs":{},"不":{"docs":{},"会":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"发":{"docs":{},"布":{"docs":{},"带":{"docs":{},"有":{"docs":{},"恶":{"docs":{},"意":{"docs":{},"链":{"docs":{},"接":{"docs":{},"的":{"docs":{},"帖":{"docs":{},"子":{"docs":{},"或":{"docs":{},"者":{"docs":{},"评":{"docs":{},"论":{"docs":{},"（":{"docs":{},"提":{"docs":{},"交":{"docs":{},"对":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"带":{"docs":{},"有":{"docs":{},"增":{"docs":{},"删":{"docs":{},"改":{"docs":{},"的":{"docs":{},"诱":{"docs":{},"导":{"docs":{},"型":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"/":{"docs":{},"a":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"在":{"docs":{},"自":{"docs":{},"己":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"留":{"docs":{},"下":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"4":{"docs":{},"(":{"docs":{},"x":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00558659217877095}},"(":{"docs":{},"a":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"x":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},",":{"docs":{},"y":{"docs":{},",":{"docs":{},"f":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},"=":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"从":{"docs":{},"上":{"docs":{},"述":{"docs":{},"定":{"docs":{},"义":{"docs":{},"可":{"docs":{},"知":{"docs":{},"，":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"(":{"2":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"纯":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"读":{"docs":{},"取":{"docs":{},"x":{"docs":{},"和":{"docs":{},"y":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"不":{"docs":{},"会":{"docs":{},"受":{"docs":{},"到":{"docs":{},"全":{"docs":{},"局":{"docs":{},"的":{"docs":{},"z":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.018292682926829267}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"添":{"docs":{},"加":{"docs":{},"订":{"docs":{},"阅":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"取":{"docs":{},"消":{"docs":{},"订":{"docs":{},"阅":{"docs":{},"，":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"是":{"docs":{},"通":{"docs":{},"知":{"docs":{},"更":{"docs":{},"新":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"是":{"docs":{},"调":{"docs":{},"用":{"docs":{},"了":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"1":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"2":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.05333333333333334}},"a":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.046153846153846156}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},"n":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"和":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.09230769230769231}}},"j":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.046153846153846156}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.046153846153846156}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00558659217877095}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"i":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667}}},"o":{"docs":{},"w":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}}}}},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"=":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.013641133263378805}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}},"[":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}},"i":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}},"g":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802}},"e":{"docs":{},"=":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}},":":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.02577319587628866},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"c":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}},"x":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}},"爷":{"docs":{},"传":{"docs":{},"孙":{"docs":{},"，":{"docs":{},"$":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}},"j":{"docs":{},"a":{"docs":{},"x":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}},"主":{"docs":{},"机":{"docs":{},"需":{"docs":{},"要":{"docs":{},"和":{"docs":{},"b":{"docs":{},"主":{"docs":{},"机":{"docs":{},"之":{"docs":{},"间":{"docs":{},"建":{"docs":{},"立":{"docs":{},"数":{"docs":{},"据":{"docs":{},"收":{"docs":{},"发":{"docs":{},"，":{"docs":{},"a":{"docs":{},"需":{"docs":{},"要":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"请":{"docs":{},"求":{"docs":{},"询":{"docs":{},"问":{"docs":{},"b":{"docs":{},"：":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"我":{"docs":{},"要":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"收":{"docs":{},"到":{"docs":{},"b":{"docs":{},"的":{"docs":{},"回":{"docs":{},"应":{"docs":{},"后":{"docs":{},"，":{"docs":{},"a":{"docs":{},"向":{"docs":{},"b":{"docs":{},"再":{"docs":{},"次":{"docs":{},"回":{"docs":{},"应":{"docs":{},"：":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"我":{"docs":{},"要":{"docs":{},"开":{"docs":{},"始":{"docs":{},"发":{"docs":{},"送":{"docs":{},"了":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"发":{"docs":{},"送":{"docs":{},"能":{"docs":{},"力":{"docs":{},"、":{"docs":{},"b":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}},"接":{"docs":{},"收":{"docs":{},"、":{"docs":{},"发":{"docs":{},"送":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"b":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.06896551724137931}},"=":{"0":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"=":{"docs":{},"u":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"=":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}},"docs":{}}},"v":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"=":{"docs":{},"u":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}},"x":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"=":{"docs":{},"y":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}},"docs":{},"x":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}},"、":{"docs":{},"b":{"docs":{},"节":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"c":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}}},"断":{"docs":{},"开":{"docs":{},"指":{"docs":{},"向":{"docs":{},"b":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"将":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"c":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}},"e":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.017595307917888565},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"s":{"6":{"docs":{},"增":{"docs":{},"加":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}}}}}}}}}},"将":{"docs":{},"其":{"docs":{},"写":{"docs":{},"进":{"docs":{},"了":{"docs":{},"语":{"docs":{},"言":{"docs":{},"标":{"docs":{},"准":{"docs":{},"。":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}},"新":{"docs":{},"增":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}},"docs":{}},"r":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.010263929618768328},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},"手":{"docs":{},"动":{"docs":{},"调":{"docs":{},"用":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}},"传":{"docs":{},"入":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"成":{"docs":{},"功":{"docs":{},"和":{"docs":{},"失":{"docs":{},"败":{"docs":{},"函":{"docs":{},"数":{"docs":{},":":{"docs":{},"把":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"传":{"docs":{},"入":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"中":{"docs":{},"用":{"docs":{},"户":{"docs":{},"写":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03314917127071823},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}},"i":{"docs":{},"r":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.0297029702970297}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.014124293785310734}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"*":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},".":{"docs":{},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}}}}}}}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"：":{"docs":{},"两":{"docs":{},"者":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"i":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}},"v":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.014690451206715634},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}},"b":{"docs":{},"u":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"8":{"8":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"8":{"8":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"可":{"docs":{},"执":{"docs":{},"行":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"：":{"docs":{},"e":{"docs":{},"v":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"(":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}},"放":{"docs":{},"在":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}},"：":{"docs":{},"每":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"其":{"docs":{},"内":{"docs":{},"容":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"值":{"docs":{},",":{"docs":{},"改":{"docs":{},"动":{"docs":{},"文":{"docs":{},"件":{"docs":{},"了":{"docs":{},"就":{"docs":{},"变":{"docs":{},"了":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"似":{"docs":{},"m":{"docs":{},"d":{"5":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"g":{"docs":{},"f":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338}},"中":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"外":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"，":{"docs":{},"当":{"docs":{},"函":{"docs":{},"数":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"了":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"a":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}},"和":{"docs":{},"v":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}}}},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.0625},"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.05970149253731343},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.030120481927710843},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.03},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.037243947858473},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.025183630640083946},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.0975609756097561},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.03723404255319149},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.06578947368421052},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.062146892655367235},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}},"b":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"x":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.014690451206715634},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}},"c":{"docs":{},"b":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.009868421052631578}}}}},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}},"o":{"docs":{},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}}}}}}}},"n":{"1":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.010263929618768328},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.06295907660020986},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.024390243902439025},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.01049317943336831}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.007345225603357817},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.02127659574468085},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"1":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"2":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"3":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"4":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}},"docs":{}}}},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.020618556701030927},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.014124293785310734}},"e":{"docs":{},":":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}},"a":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/链表.html":{"ref":"structure/链表.html","tf":0.01694915254237288}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.01694915254237288}},"i":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}}},"=":{"1":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"=":{"1":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"=":{"docs":{},"w":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"=":{"docs":{},"u":{"docs":{},"+":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"=":{"docs":{},"u":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}},"docs":{}},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"1":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"2":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}},"docs":{}}}}}}},"标":{"docs":{},"志":{"docs":{},"位":{"docs":{},"置":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"序":{"docs":{},"列":{"docs":{},"号":{"docs":{},"为":{"docs":{},"u":{"docs":{},"的":{"docs":{},"包":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"需":{"docs":{},"要":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"了":{"docs":{},"。":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"r":{"docs":{},"e":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}},"s":{"docs":{},"t":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.027522935779816515}}}}},"f":{"docs":{},"o":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}},"(":{"docs":{},"g":{"docs":{},"(":{"docs":{},"x":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"x":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},")":{"docs":{},"+":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},"将":{"docs":{},"一":{"docs":{},"组":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"映":{"docs":{},"射":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"限":{"docs":{},"且":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"区":{"docs":{},"间":{"docs":{},"上":{"docs":{},"，":{"docs":{},"并":{"docs":{},"以":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"在":{"docs":{},"地":{"docs":{},"址":{"docs":{},"区":{"docs":{},"间":{"docs":{},"中":{"docs":{},"的":{"docs":{},"“":{"docs":{},"像":{"docs":{},"”":{"docs":{},"作":{"docs":{},"为":{"docs":{},"元":{"docs":{},"素":{"docs":{},"在":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"映":{"docs":{},"射":{"docs":{},"过":{"docs":{},"程":{"docs":{},"称":{"docs":{},"为":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"造":{"docs":{},"表":{"docs":{},"或":{"docs":{},"者":{"docs":{},"散":{"docs":{},"列":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"映":{"docs":{},"射":{"docs":{},"函":{"docs":{},"数":{"docs":{},"f":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"模":{"docs":{},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"将":{"docs":{},"i":{"docs":{},"o":{"docs":{},"函":{"docs":{},"子":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"函":{"docs":{},"数":{"docs":{},")":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}},"o":{"docs":{},"w":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}},"a":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.02717391304347826}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.015957446808510637}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}},"l":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.016789087093389297}},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.013157894736842105},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.016563146997929608},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.06153846153846154}},";":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"p":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}},"!":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03038674033149171},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.024861878453038673},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03038674033149171},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03038674033149171},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.013812154696132596},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"a":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.022388059701492536}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.024861878453038673},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03038674033149171},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.03804347826086957},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.024861878453038673}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.008287292817679558}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}},"、":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.019801980198019802},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}},"o":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}},"docs":{}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}},"g":{"docs":{},"中":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"就":{"docs":{},"是":{"docs":{},"分":{"docs":{},"析":{"3":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"我":{"docs":{},"们":{"docs":{},"得":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"o":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.03672316384180791}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.03248587570621469}}},"docs":{}},"docs":{}}},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"负":{"docs":{},"责":{"docs":{},"将":{"docs":{},"e":{"docs":{},"s":{"6":{"docs":{},"/":{"7":{"docs":{},"/":{"8":{"docs":{},"等":{"docs":{},"语":{"docs":{},"法":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"e":{"docs":{},"s":{"5":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}}}},"o":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}},"p":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}}}}},"e":{"docs":{},"n":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"f":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.01303538175046555},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.020618556701030927},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.016304347826086956}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},"(":{"1":{"2":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}},"docs":{}},"docs":{}}}}},"函":{"docs":{},"子":{"docs":{},"中":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},":":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"5":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}},"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"(":{"docs":{},"(":{"1":{"0":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.011299435028248588}}}}},"i":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}},":":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.01049317943336831}},"（":{"docs":{},"监":{"docs":{},"听":{"docs":{},"）":{"docs":{},"状":{"docs":{},"态":{"docs":{},"下":{"docs":{},"，":{"docs":{},"收":{"docs":{},"到":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"请":{"docs":{},"求":{"docs":{},"的":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"报":{"docs":{},"文":{"docs":{},"后":{"docs":{},"，":{"docs":{},"把":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"和":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"放":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"报":{"docs":{},"文":{"docs":{},"里":{"docs":{},"发":{"docs":{},"送":{"docs":{},"给":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"。":{"docs":{},"而":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"连":{"docs":{},"接":{"docs":{},"时":{"docs":{},"，":{"docs":{},"当":{"docs":{},"收":{"docs":{},"到":{"docs":{},"对":{"docs":{},"方":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"报":{"docs":{},"文":{"docs":{},"时":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"表":{"docs":{},"示":{"docs":{},"对":{"docs":{},"方":{"docs":{},"不":{"docs":{},"再":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"了":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"能":{"docs":{},"接":{"docs":{},"收":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"己":{"docs":{},"方":{"docs":{},"是":{"docs":{},"否":{"docs":{},"现":{"docs":{},"在":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"通":{"docs":{},"道":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"上":{"docs":{},"层":{"docs":{},"应":{"docs":{},"用":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"己":{"docs":{},"方":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"和":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03038674033149171},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"）":{"docs":{},"，":{"docs":{},"把":{"docs":{},"内":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"当":{"docs":{},"作":{"docs":{},"它":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"属":{"docs":{},"性":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.0297029702970297}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"/":{"docs":{},"[":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}},"e":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}},"帮":{"docs":{},"我":{"docs":{},"们":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}},"v":{"docs":{},"v":{"docs":{},"m":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"拆":{"docs":{},"开":{"docs":{},"来":{"docs":{},"即":{"docs":{},"为":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}},"的":{"docs":{},"架":{"docs":{},"构":{"docs":{},"下":{"docs":{},"，":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"层":{"docs":{},"和":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"直":{"docs":{},"接":{"docs":{},"联":{"docs":{},"系":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"互":{"docs":{},"。":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"通":{"docs":{},"过":{"docs":{},"双":{"docs":{},"向":{"docs":{},"数":{"docs":{},"据":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"将":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"层":{"docs":{},"和":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"连":{"docs":{},"接":{"docs":{},"了":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"层":{"docs":{},"和":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"的":{"docs":{},"同":{"docs":{},"步":{"docs":{},"工":{"docs":{},"作":{"docs":{},"完":{"docs":{},"全":{"docs":{},"是":{"docs":{},"自":{"docs":{},"动":{"docs":{},"的":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"只":{"docs":{},"需":{"docs":{},"关":{"docs":{},"注":{"docs":{},"业":{"docs":{},"务":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"无":{"docs":{},"需":{"docs":{},"手":{"docs":{},"动":{"docs":{},"操":{"docs":{},"作":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"，":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"状":{"docs":{},"态":{"docs":{},"维":{"docs":{},"护":{"docs":{},"交":{"docs":{},"给":{"docs":{},"m":{"docs":{},"v":{"docs":{},"v":{"docs":{},"m":{"docs":{},"统":{"docs":{},"一":{"docs":{},"来":{"docs":{},"管":{"docs":{},"理":{"docs":{},"。":{"docs":{},"在":{"docs":{},"v":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"中":{"docs":{},"m":{"docs":{},"v":{"docs":{},"v":{"docs":{},"m":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.04216867469879518}},"）":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"清":{"docs":{},"除":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"(":{"docs":{},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.03608247422680412},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.02717391304347826}},":":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}},"负":{"docs":{},"值":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}},"决":{"docs":{},"定":{"docs":{},"（":{"docs":{},"即":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}},"重":{"docs":{},"叠":{"docs":{},"了":{"docs":{},"，":{"docs":{},"距":{"docs":{},"离":{"docs":{},"只":{"docs":{},"有":{"1":{"0":{"docs":{},"p":{"docs":{},"x":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"p":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.055},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0074487895716946},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.04},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.02}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.024390243902439025}}}}}}},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"v":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"x":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"组":{"docs":{},"合":{"docs":{},"了":{"docs":{},"f":{"docs":{},"n":{"docs":{},"和":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{},"f":{"docs":{},"n":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"v":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"i":{"docs":{},"o":{"docs":{},"函":{"docs":{},"子":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"i":{"docs":{},"o":{"docs":{},"函":{"docs":{},"子":{"docs":{},"中":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"，":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}},"y":{"docs":{},"b":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0111731843575419}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"docs":{}},"docs":{}}},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}}}}}},"函":{"docs":{},"子":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"学":{"docs":{},"习":{"docs":{},"了":{"docs":{},"如":{"docs":{},"何":{"docs":{},"处":{"docs":{},"理":{"docs":{},"函":{"docs":{},"子":{"docs":{},"内":{"docs":{},"部":{"docs":{},"值":{"docs":{},"是":{"docs":{},"空":{"docs":{},"值":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"控":{"docs":{},"制":{"docs":{},"传":{"docs":{},"入":{"docs":{},"值":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"。":{"docs":{},"那":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"传":{"docs":{},"入":{"docs":{},"处":{"docs":{},"理":{"docs":{},"函":{"docs":{},"数":{"docs":{},"f":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}},"(":{"docs":{},")":{"docs":{},"*":{"1":{"0":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"与":{"docs":{},"自":{"docs":{},"己":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"比":{"docs":{},"较":{"docs":{},"i":{"docs":{},"f":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}},"x":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.0297029702970297}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"1":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"执":{"docs":{},"行":{"docs":{},"完":{"docs":{},"(":{"docs":{},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"空":{"docs":{},")":{"docs":{},"，":{"docs":{},"再":{"docs":{},"去":{"docs":{},"执":{"docs":{},"行":{"docs":{},"微":{"docs":{},"队":{"docs":{},"列":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"3":{"docs":{},")":{"docs":{},"}":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"3":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"扔":{"docs":{},"进":{"docs":{},"调":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"宏":{"docs":{},"队":{"docs":{},"列":{"docs":{},"{":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"2":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"2":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}}}}}}}}}}},"2":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"6":{"docs":{},")":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"6":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00847457627118644}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.01694915254237288}}}}}}}}}}}},"e":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.039603960396039604}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},"w":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}},"中":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"添":{"docs":{},"加":{"docs":{},"到":{"docs":{},"i":{"docs":{},"f":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"将":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}}}}},"：":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"修":{"docs":{},"改":{"docs":{},"时":{"docs":{},"间":{"docs":{},",":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"配":{"docs":{},"置":{"docs":{},"这":{"docs":{},"个":{"docs":{},"响":{"docs":{},"应":{"docs":{},"头":{"docs":{},"，":{"docs":{},"来":{"docs":{},"向":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"发":{"docs":{},"送":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"上":{"docs":{},"次":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"标":{"docs":{},"签":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"#":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"4":{"docs":{},"(":{"docs":{},"x":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}},"docs":{}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}},"n":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}},"s":{"docs":{},"g":{"2":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}},"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03591160220994475},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},":":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}},"子":{"docs":{},"组":{"docs":{},"件":{"docs":{},"改":{"docs":{},"变":{"docs":{},"父":{"docs":{},"组":{"docs":{},"件":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}},"父":{"docs":{},"组":{"docs":{},"件":{"docs":{},"改":{"docs":{},"变":{"docs":{},"子":{"docs":{},"组":{"docs":{},"件":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}},"?":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}},"p":{"4":{"docs":{},"|":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"m":{"docs":{},"|":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"|":{"docs":{},"m":{"docs":{},"p":{"3":{"docs":{},"|":{"docs":{},"w":{"docs":{},"a":{"docs":{},"v":{"docs":{},"|":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"|":{"docs":{},"a":{"docs":{},"a":{"docs":{},"c":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"m":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}},"（":{"docs":{},"m":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"=":{"0":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}}}}}}}}},"o":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"b":{"docs":{},"j":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.035},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}},"）":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"把":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"当":{"docs":{},"作":{"docs":{},"它":{"docs":{},"的":{"docs":{},"公":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}},")":{"docs":{},"来":{"docs":{},"劫":{"docs":{},"持":{"docs":{},"各":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"的":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}},"、":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}},"、":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"区":{"docs":{},"分":{"docs":{},"，":{"docs":{},"都":{"docs":{},"返":{"docs":{},"回":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"x":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}},"，":{"docs":{},"进":{"docs":{},"行":{"docs":{},"释":{"docs":{},"放":{"docs":{},"，":{"docs":{},"然":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"依":{"docs":{},"然":{"docs":{},"对":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"值":{"docs":{},"添":{"docs":{},"加":{"docs":{},"装":{"docs":{},"饰":{"docs":{},"器":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"。":{"docs":{},"它":{"docs":{},"会":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"r":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"劫":{"docs":{},"持":{"docs":{},"数":{"docs":{},"据":{"docs":{},"添":{"docs":{},"加":{"docs":{},"上":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"，":{"docs":{},"基":{"docs":{},"于":{"docs":{},"以":{"docs":{},"上":{"docs":{},"所":{"docs":{},"述":{"docs":{},"我":{"docs":{},"们":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"$":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}},"f":{"docs":{},"n":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.010351966873706004}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825}}}}}}},"方":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"是":{"docs":{},"i":{"docs":{},"o":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"i":{"docs":{},"o":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},":":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"u":{"docs":{},"t":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.018292682926829267}}}}}}}}}}}}}},"s":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"(":{"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294},"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}},")":{"docs":{},",":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}},"，":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"常":{"docs":{},"数":{"docs":{},"阶":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"则":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"频":{"docs":{},"度":{"docs":{},"与":{"docs":{},"问":{"docs":{},"题":{"docs":{},"规":{"docs":{},"模":{"docs":{},"n":{"docs":{},"呈":{"docs":{},"线":{"docs":{},"性":{"docs":{},"增":{"docs":{},"大":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"记":{"docs":{},"作":{"docs":{},"o":{"docs":{},"（":{"docs":{},"n":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"^":{"docs":{},"n":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}},"docs":{},"n":{"2":{"docs":{"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}}},"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294},"algorithm/":{"ref":"algorithm/","tf":0.06451612903225806}},"^":{"2":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}},"3":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}},"docs":{}},")":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}},"docs":{}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903}}}}}}},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"htmlcss/":{"ref":"htmlcss/","tf":0.125},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/":{"ref":"design/","tf":0.16666666666666666},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616},"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827},"structure/":{"ref":"structure/","tf":0.16666666666666666},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294},"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.03608247422680412},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}}}}}}}}},"：":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"或":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},":":{"3":{"0":{"0":{"0":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"p":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.024926686217008796}}}},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667}},"[":{"docs":{},"i":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"e":{"docs":{},"k":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":10.041055718475073}},"e":{"2":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.013196480938416423}},",":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"取":{"docs":{},"到":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}}}}}}}}}}}}}},"既":{"docs":{},"然":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"那":{"docs":{},"就":{"docs":{},"继":{"docs":{},"续":{"docs":{},"解":{"docs":{},"析":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"执":{"docs":{},"行":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"只":{"docs":{},"会":{"docs":{},"添":{"docs":{},"加":{"docs":{},"订":{"docs":{},"阅":{"docs":{},"，":{"docs":{},"而":{"docs":{},"一":{"docs":{},"直":{"docs":{},"得":{"docs":{},"不":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}},"e":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"就":{"docs":{},"变":{"docs":{},"为":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}},"实":{"docs":{},"例":{"docs":{},"上":{"docs":{},"都":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}},"现":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"大":{"docs":{},"家":{"docs":{},"都":{"docs":{},"必":{"docs":{},"须":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"代":{"docs":{},"表":{"docs":{},"一":{"docs":{},"个":{"docs":{},"异":{"docs":{},"步":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"（":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"）":{"docs":{},"、":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"（":{"docs":{},"已":{"docs":{},"成":{"docs":{},"功":{"docs":{},"）":{"docs":{},"、":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"：":{"docs":{},"从":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"变":{"docs":{},"为":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"和":{"docs":{},"从":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"变":{"docs":{},"为":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"之":{"docs":{},"后":{"docs":{},"才":{"docs":{},"能":{"docs":{},"走":{"docs":{},"到":{"docs":{},"它":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"创":{"docs":{},"建":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"内":{"docs":{},"部":{"docs":{},"会":{"docs":{},"提":{"docs":{},"供":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"不":{"docs":{},"是":{"docs":{},"原":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"上":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"会":{"docs":{},"传":{"docs":{},"给":{"docs":{},"用":{"docs":{},"户":{"docs":{},",":{"docs":{},"可":{"docs":{},"以":{"docs":{},"更":{"docs":{},"改":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"方":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"，":{"docs":{},"但":{"docs":{},"都":{"docs":{},"要":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"有":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}},"解":{"docs":{},"析":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"能":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"就":{"docs":{},"要":{"docs":{},"有":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"让":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"至":{"docs":{},"于":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"把":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}}}}}}}}}}}}}}}}},"则":{"docs":{},"先":{"docs":{},"正":{"docs":{},"常":{"docs":{},"执":{"docs":{},"行":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"里":{"docs":{},"面":{"docs":{},"语":{"docs":{},"句":{"docs":{},"，":{"docs":{},"把":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"语":{"docs":{},"句":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"4":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"扔":{"docs":{},"进":{"docs":{},"微":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"微":{"docs":{},"队":{"docs":{},"列":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"5":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{},"f":{"docs":{},"p":{"docs":{},")":{"docs":{},"，":{"docs":{},"f":{"docs":{},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}},"p":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"e":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}},"o":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"、":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"、":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.05}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},"c":{"docs":{},"e":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.007345225603357817}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}},"e":{"docs":{},"和":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}}},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"e":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.011049723756906077}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{},"：":{"docs":{},"即":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"树":{"docs":{},"，":{"docs":{},"并":{"docs":{},"使":{"docs":{},"用":{"docs":{},"u":{"docs":{},"i":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.01977401129943503}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"，":{"docs":{},"新":{"docs":{},"建":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"更":{"docs":{},"改":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.0297029702970297},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}},",":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.02401129943502825}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}},"创":{"docs":{},"建":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"页":{"docs":{},"面":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"打":{"docs":{},"包":{"docs":{},"后":{"docs":{},"的":{"docs":{},"j":{"docs":{},"s":{"docs":{},"文":{"docs":{},"件":{"docs":{},"需":{"docs":{},"要":{"docs":{},"引":{"docs":{},"入":{"docs":{},"到":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"件":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},",":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"5":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825}},"e":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"htmlcss/":{"ref":"htmlcss/","tf":0.125},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/":{"ref":"design/","tf":0.16666666666666666},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616},"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827},"structure/":{"ref":"structure/","tf":0.16666666666666666},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294},"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.0469208211143695},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"e":{"docs":{},"(":{"5":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}},"docs":{}},"docs":{}}}}}}}},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}},"x":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282}}}},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"都":{"docs":{},"取":{"docs":{},"的":{"docs":{},"到":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"是":{"docs":{},"在":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"执":{"docs":{},"行":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"递":{"docs":{},"归":{"docs":{},"是":{"docs":{},"防":{"docs":{},"止":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"（":{"docs":{},"已":{"docs":{},"定":{"docs":{},"型":{"docs":{},"）":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"改":{"docs":{},"变":{"docs":{},"已":{"docs":{},"经":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"，":{"docs":{},"你":{"docs":{},"再":{"docs":{},"对":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"返":{"docs":{},"回":{"docs":{},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"写":{"docs":{},"结":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.020527859237536656}}},"docs":{}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{},"到":{"docs":{},"底":{"docs":{},"有":{"docs":{},"什":{"docs":{},"么":{"docs":{},"用":{"docs":{},"？":{"docs":{},"其":{"docs":{},"实":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"就":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"符":{"docs":{},"合":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"这":{"docs":{},"么":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"递":{"docs":{},"归":{"docs":{},"处":{"docs":{},"理":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"内":{"docs":{},"部":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{},"执":{"docs":{},"行":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"它":{"docs":{},"有":{"4":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"也":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0074487895716946},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}},"i":{"docs":{},"z":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.007345225603357817}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/Promise.html":{"ref":"js/Promise.html","tf":0.021994134897360705},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.055},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0670391061452514},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03591160220994475},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.025183630640083946},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.03048780487804878},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.09574468085106383},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.07236842105263158},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.031055900621118012},"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}}}}}},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.05865102639296188},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}},"(":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.01906158357771261}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}},")":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"和":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"都":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"返":{"docs":{},"回":{"docs":{},"失":{"docs":{},"败":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"写":{"docs":{},"原":{"docs":{},"因":{"docs":{},"返":{"docs":{},"回":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"入":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"中":{"docs":{},"用":{"docs":{},"户":{"docs":{},"写":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}},"docs":{}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"l":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"/":{"docs":{},"f":{"docs":{},"p":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"docs":{}},"docs":{}}}}}}}}}}}},".":{"docs":{},"/":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}},"v":{"docs":{},"u":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.024390243902439025}},"树":{"docs":{},"：":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"将":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"和":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{},"结":{"docs":{},"合":{"docs":{},"，":{"docs":{},"并":{"docs":{},"构":{"docs":{},"建":{"docs":{},"出":{"docs":{},"渲":{"docs":{},"染":{"docs":{},"树":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.042682926829268296}}}}}}}}},"l":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"，":{"docs":{},"子":{"docs":{},"元":{"docs":{},"素":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}},"d":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.02717391304347826}}},"f":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"$":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"$":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"耦":{"docs":{},"合":{"docs":{},"性":{"docs":{},"会":{"docs":{},"使":{"docs":{},"程":{"docs":{},"序":{"docs":{},"变":{"docs":{},"得":{"docs":{},"僵":{"docs":{},"硬":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.007345225603357817},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602},"structure/链表.html":{"ref":"structure/链表.html","tf":0.02824858757062147}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.010351966873706004}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}},"方":{"docs":{},"法":{"docs":{},"里":{"docs":{},"的":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"htmlcss/":{"ref":"htmlcss/","tf":0.125},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/":{"ref":"design/","tf":0.16666666666666666},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616},"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827},"structure/":{"ref":"structure/","tf":0.16666666666666666},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294},"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"1":{"2":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}},"docs":{}},"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"子":{"docs":{},"中":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},":":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.029605263157894735}},"（":{"docs":{},"b":{"docs":{},"f":{"docs":{},"c":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}},"w":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.009887005649717515}}}},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.007062146892655367},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}},"中":{"docs":{},"还":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"修":{"docs":{},"改":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334},"htmlcss/":{"ref":"htmlcss/","tf":0.125},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/":{"ref":"design/","tf":0.16666666666666666},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616},"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827},"structure/":{"ref":"structure/","tf":0.16666666666666666},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294},"algorithm/":{"ref":"algorithm/","tf":0.03225806451612903},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}}}}}}}}}}}}}}},"）":{"docs":{},"，":{"docs":{},"是":{"docs":{},"由":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"元":{"docs":{},"素":{"docs":{},"及":{"docs":{},"属":{"docs":{},"性":{"docs":{},"节":{"docs":{},"点":{"docs":{},"组":{"docs":{},"成":{"docs":{},"，":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"是":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"1":{"0":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"9":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}},"2":{"0":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}},"docs":{}},"docs":{}}}}}}}}}}},"i":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.01906158357771261},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.011542497376705142}}}}}}},"u":{"docs":{},"e":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00847457627118644},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.015384615384615385}},"时":{"docs":{},"是":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"法":{"docs":{},"定":{"docs":{},"义":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"时":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"可":{"docs":{},"以":{"docs":{},"移":{"docs":{},"动":{"docs":{},"本":{"docs":{},"身":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"5":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}},"c":{"docs":{},"k":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}},"中":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"值":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"个":{"docs":{},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"回":{"docs":{},"调":{"docs":{},"函":{"docs":{},"数":{"docs":{},"执":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"那":{"docs":{},"就":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"报":{"docs":{},"错":{"docs":{},"就":{"docs":{},"走":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}},"要":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"所":{"docs":{},"以":{"docs":{},"放":{"docs":{},"到":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.005865102639296188}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}},"时":{"docs":{},"有":{"docs":{},"风":{"docs":{},"险":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"要":{"docs":{},"放":{"docs":{},"在":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}},"c":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.005865102639296188}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"(":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526},"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.03812316715542522}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.012422360248447204}},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.008281573498964804}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.010263929618768328},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}},"i":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"m":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"m":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"[":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649}},"]":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.024844720496894408}}}}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0148975791433892}}}}}}},"$":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"}":{"docs":{},"+":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"}":{"docs":{},"+":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"2":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}},"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.011049723756906077},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"=":{"docs":{},"n":{"docs":{},"s":{"docs":{},"g":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}},"a":{"docs":{},"x":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}},"i":{"docs":{},"n":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"m":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}},"[":{"0":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}},"docs":{}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}}}}}},"i":{"docs":{},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052},"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}}},"l":{"docs":{},"a":{"docs":{},"z":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.028985507246376812}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.006578947368421052}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}}}}}}}},"v":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"[":{"0":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}}}}}},"e":{"docs":{},"l":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.02824858757062147}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.01694915254237288}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.02824858757062147}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.011299435028248588}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"应":{"docs":{},"超":{"docs":{},"过":{"2":{"5":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{}},"docs":{}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}},"p":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},":":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"5":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}},"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"(":{"docs":{},"(":{"1":{"0":{"0":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"[":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"o":{"docs":{},"f":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.011730205278592375},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.02},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}},":":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}}},"'":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.012048192771084338},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0211864406779661}},":":{"docs":{},"/":{"docs":{},"\\":{"docs":{},".":{"docs":{},"(":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},"|":{"docs":{},"j":{"docs":{},"p":{"docs":{},"e":{"docs":{},"?":{"docs":{},"g":{"docs":{},"|":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}},"v":{"docs":{},"u":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.02666666666666667},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}},"m":{"docs":{},"p":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.08},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"algorithm/排序.html":{"ref":"algorithm/排序.html","tf":0.03076923076923077}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},",":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"秘":{"docs":{},"密":{"docs":{},"花":{"docs":{},"园":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"变":{"docs":{},"为":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.01834862385321101}},"l":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.02577319587628866},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.021739130434782608}},"e":{"docs":{},"、":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"、":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"、":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"、":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}},"c":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.075},"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":10.10344827586207}},"连":{"docs":{},"接":{"docs":{},"：":{"docs":{},"解":{"docs":{},"析":{"docs":{},"出":{"docs":{},"i":{"docs":{},"p":{"docs":{},"地":{"docs":{},"址":{"docs":{},"后":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"i":{"docs":{},"p":{"docs":{},"地":{"docs":{},"址":{"docs":{},"和":{"docs":{},"默":{"docs":{},"认":{"8":{"0":{"docs":{},"端":{"docs":{},"口":{"docs":{},"，":{"docs":{},"和":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"建":{"docs":{},"立":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"四":{"docs":{},"次":{"docs":{},"挥":{"docs":{},"手":{"docs":{},"释":{"docs":{},"放":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}},"(":{"docs":{},"传":{"docs":{},"输":{"docs":{},"控":{"docs":{},"制":{"docs":{},"协":{"docs":{},"议":{"docs":{},")":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"。":{"docs":{},"在":{"docs":{},"正":{"docs":{},"式":{"docs":{},"收":{"docs":{},"发":{"docs":{},"数":{"docs":{},"据":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"与":{"docs":{},"对":{"docs":{},"方":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{},"这":{"docs":{},"之":{"docs":{},"间":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"i":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.075}},"协":{"docs":{},"议":{"docs":{},"分":{"docs":{},"为":{"docs":{},"五":{"docs":{},"层":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"应":{"docs":{},"用":{"docs":{},"层":{"docs":{},"、":{"docs":{},"传":{"docs":{},"输":{"docs":{},"层":{"docs":{},"、":{"docs":{},"网":{"docs":{},"络":{"docs":{},"层":{"docs":{},"、":{"docs":{},"数":{"docs":{},"据":{"docs":{},"链":{"docs":{},"路":{"docs":{},"层":{"docs":{},"、":{"docs":{},"物":{"docs":{},"理":{"docs":{},"层":{"docs":{},"。":{"docs":{},"每":{"docs":{},"层":{"docs":{},"都":{"docs":{},"有":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"相":{"docs":{},"关":{"docs":{},"协":{"docs":{},"议":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"和":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"u":{"docs":{},"c":{"docs":{},"d":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}},"d":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":10.1}}}}}},"是":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"，":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}},"，":{"docs":{},"而":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"对":{"docs":{},"应":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"。":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"方":{"docs":{},"确":{"docs":{},"认":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"传":{"docs":{},"输":{"docs":{},"之":{"docs":{},"前":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"（":{"docs":{},"传":{"docs":{},"输":{"docs":{},"的":{"docs":{},"两":{"docs":{},"端":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"docs":{},"三":{"docs":{},"次":{"docs":{},"握":{"docs":{},"手":{"docs":{},"，":{"docs":{},"才":{"docs":{},"开":{"docs":{},"始":{"docs":{},"通":{"docs":{},"信":{"docs":{},"）":{"docs":{},"。":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"是":{"docs":{},"全":{"docs":{},"双":{"docs":{},"工":{"docs":{},"、":{"docs":{},"面":{"docs":{},"向":{"docs":{},"连":{"docs":{},"接":{"docs":{},"、":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"精":{"docs":{},"确":{"docs":{},"控":{"docs":{},"制":{"docs":{},"的":{"docs":{},"协":{"docs":{},"议":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"于":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"不":{"docs":{},"强":{"docs":{},"，":{"docs":{},"但":{"docs":{},"传":{"docs":{},"输":{"docs":{},"要":{"docs":{},"求":{"docs":{},"高":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"。":{"docs":{},"比":{"docs":{},"方":{"docs":{},"说":{"docs":{},"：":{"docs":{},"网":{"docs":{},"页":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"、":{"docs":{},"文":{"docs":{},"件":{"docs":{},"下":{"docs":{},"载":{"docs":{},"(":{"docs":{},"不":{"docs":{},"是":{"docs":{},"b":{"docs":{},"t":{"docs":{},"、":{"docs":{},"电":{"docs":{},"脑":{"docs":{},"下":{"docs":{},"载":{"docs":{},")":{"docs":{},"、":{"docs":{},"邮":{"docs":{},"件":{"docs":{},"的":{"docs":{},"发":{"docs":{},"送":{"docs":{},"等":{"docs":{},"场":{"docs":{},"合":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"场":{"docs":{},"景":{"docs":{},"需":{"docs":{},"要":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"network/TCP三次握手和四次挥手.html":{"ref":"network/TCP三次握手和四次挥手.html","tf":0.017241379310344827}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.016563146997929608}},"e":{"docs":{},"[":{"0":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}},"1":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}}},"docs":{}}}}}}},"v":{"8":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.024096385542168676}},"在":{"docs":{},"老":{"docs":{},"生":{"docs":{},"代":{"docs":{},"中":{"docs":{},"主":{"docs":{},"要":{"docs":{},"采":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}},"最":{"docs":{},"初":{"docs":{},"是":{"docs":{},"作":{"docs":{},"为":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"的":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"机":{"docs":{},"制":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"v":{"8":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"应":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"与":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"器":{"docs":{},"所":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"v":{"8":{"docs":{},"在":{"docs":{},"执":{"docs":{},"行":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"时":{"docs":{},"会":{"docs":{},"阻":{"docs":{},"塞":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"应":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"结":{"docs":{},"束":{"docs":{},"再":{"docs":{},"重":{"docs":{},"新":{"docs":{},"执":{"docs":{},"行":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"应":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"行":{"docs":{},"为":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"“":{"docs":{},"全":{"docs":{},"停":{"docs":{},"顿":{"docs":{},"”":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"堆":{"docs":{},"内":{"docs":{},"存":{"docs":{},"为":{"1":{"docs":{},".":{"5":{"docs":{},"g":{"docs":{},"b":{"docs":{},"，":{"docs":{},"v":{"8":{"docs":{},"做":{"docs":{},"一":{"docs":{},"次":{"docs":{},"小":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"需":{"docs":{},"要":{"5":{"0":{"docs":{},"m":{"docs":{},"s":{"docs":{},"以":{"docs":{},"上":{"docs":{},"，":{"docs":{},"做":{"docs":{},"一":{"docs":{},"次":{"docs":{},"非":{"docs":{},"增":{"docs":{},"量":{"docs":{},"式":{"docs":{},"的":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"甚":{"docs":{},"至":{"docs":{},"要":{"1":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}},"docs":{}}}}}}},"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.08450704225352113},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}},"a":{"docs":{},"l":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"u":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332},"js/Promise.html":{"ref":"js/Promise.html","tf":0.016129032258064516},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.015},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00931098696461825},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.01888772298006296},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.020703933747412008}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},",":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"就":{"docs":{},"是":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}}}}}}}}}}},"r":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.041666666666666664},"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.04216867469879518},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0297951582867784},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.04512067156348373},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.10975609756097561},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213},"structure/链表.html":{"ref":"structure/链表.html","tf":0.05084745762711865}}}},"s":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"o":{"docs":{},"f":{"docs":{},"得":{"docs":{},"到":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"i":{"docs":{},"o":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"保":{"docs":{},"存":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"(":{"docs":{},"即":{"docs":{},"返":{"docs":{},"回":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"有":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"，":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"三":{"docs":{},"部":{"docs":{},"分":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"层":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"是":{"docs":{},"视":{"docs":{},"图":{"docs":{},"、":{"docs":{},"模":{"docs":{},"版":{"docs":{},"，":{"docs":{},"负":{"docs":{},"责":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"模":{"docs":{},"型":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"u":{"docs":{},"i":{"docs":{},"展":{"docs":{},"现":{"docs":{},"出":{"docs":{},"来":{"docs":{},"。":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"是":{"docs":{},"模":{"docs":{},"型":{"docs":{},"、":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"数":{"docs":{},"据":{"docs":{},"修":{"docs":{},"改":{"docs":{},"和":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"业":{"docs":{},"务":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"。":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"层":{"docs":{},"连":{"docs":{},"接":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"和":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}},"u":{"docs":{},"e":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":10.013812154696133},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.01694915254237288},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0062959076600209865}},".":{"docs":{},"j":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}},"的":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"，":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"去":{"docs":{},"对":{"docs":{},"比":{"docs":{},"旧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"找":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"旧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"找":{"docs":{},"到":{"docs":{},"就":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"增":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"而":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"会":{"docs":{},"采":{"docs":{},"用":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"去":{"docs":{},"找":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"旧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"一":{"docs":{},"种":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{},"相":{"docs":{},"比":{"docs":{},"而":{"docs":{},"言":{"docs":{},"。":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}},"源":{"docs":{},"码":{"docs":{},"，":{"docs":{},"我":{"docs":{},"这":{"docs":{},"里":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"v":{"2":{"docs":{},".":{"6":{"docs":{},".":{"1":{"4":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}},"x":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}},"m":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},".":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}},"w":{"3":{"docs":{},"c":{"docs":{},"官":{"docs":{},"方":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"：":{"docs":{},"b":{"docs":{},"f":{"docs":{},"c":{"docs":{},"它":{"docs":{},"决":{"docs":{},"定":{"docs":{},"了":{"docs":{},"元":{"docs":{},"素":{"docs":{},"如":{"docs":{},"何":{"docs":{},"对":{"docs":{},"其":{"docs":{},"内":{"docs":{},"容":{"docs":{},"进":{"docs":{},"行":{"docs":{},"定":{"docs":{},"位":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"与":{"docs":{},"其":{"docs":{},"它":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"和":{"docs":{},"相":{"docs":{},"互":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"当":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"可":{"docs":{},"视":{"docs":{},"化":{"docs":{},"布":{"docs":{},"局":{"docs":{},"时":{"docs":{},"，":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}},"、":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"js/闭包.html":{"ref":"js/闭包.html","tf":0.020833333333333332}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.030927835051546393},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.03260869565217391}},":":{"2":{"0":{"0":{"docs":{},"p":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196}}}}},"docs":{}},"docs":{}},"docs":{}}}}}},"e":{"docs":{},"b":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358},"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"5":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":10}}},"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.026836158192090395}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.009887005649717515}},"s":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"做":{"docs":{},"出":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"和":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"入":{"docs":{},"口":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}},"里":{"docs":{},"配":{"docs":{},"置":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"j":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"目":{"docs":{},"录":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.03},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}},"提":{"docs":{},"代":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"弱":{"docs":{},"引":{"docs":{},"用":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"当":{"docs":{},"下":{"docs":{},"一":{"docs":{},"次":{"docs":{},"垃":{"docs":{},"圾":{"docs":{},"回":{"docs":{},"收":{"docs":{},"机":{"docs":{},"制":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"掉":{"docs":{},"。":{"docs":{},"设":{"docs":{},"想":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"非":{"docs":{},"常":{"docs":{},"庞":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"会":{"docs":{},"对":{"docs":{},"内":{"docs":{},"存":{"docs":{},"造":{"docs":{},"成":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"手":{"docs":{},"动":{"docs":{},"清":{"docs":{},"除":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"才":{"docs":{},"能":{"docs":{},"释":{"docs":{},"放":{"docs":{},"这":{"docs":{},"块":{"docs":{},"内":{"docs":{},"存":{"docs":{},"，":{"docs":{},"而":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"会":{"docs":{},"帮":{"docs":{},"我":{"docs":{},"们":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"化":{"docs":{},"解":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"我":{"docs":{},"也":{"docs":{},"经":{"docs":{},"常":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"看":{"docs":{},"到":{"docs":{},"有":{"docs":{},"人":{"docs":{},"使":{"docs":{},"用":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"循":{"docs":{},"环":{"docs":{},"引":{"docs":{},"用":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"解":{"docs":{},"释":{"docs":{},"都":{"docs":{},"是":{"docs":{},"模":{"docs":{},"棱":{"docs":{},"两":{"docs":{},"可":{"docs":{},"的":{"docs":{},"，":{"docs":{},"当":{"docs":{},"你":{"docs":{},"不":{"docs":{},"太":{"docs":{},"了":{"docs":{},"解":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"真":{"docs":{},"正":{"docs":{},"作":{"docs":{},"用":{"docs":{},"时":{"docs":{},"。":{"docs":{},"我":{"docs":{},"建":{"docs":{},"议":{"docs":{},"你":{"docs":{},"也":{"docs":{},"不":{"docs":{},"要":{"docs":{},"在":{"docs":{},"面":{"docs":{},"试":{"docs":{},"中":{"docs":{},"写":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{},"给":{"docs":{},"自":{"docs":{},"己":{"docs":{},"挖":{"docs":{},"坑":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"是":{"docs":{},"准":{"docs":{},"备":{"docs":{},"面":{"docs":{},"试":{"docs":{},"，":{"docs":{},"你":{"docs":{},"写":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"代":{"docs":{},"码":{"docs":{},"也":{"docs":{},"都":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"经":{"docs":{},"过":{"docs":{},"深":{"docs":{},"思":{"docs":{},"熟":{"docs":{},"虑":{"docs":{},"并":{"docs":{},"且":{"docs":{},"非":{"docs":{},"常":{"docs":{},"明":{"docs":{},"白":{"docs":{},"的":{"docs":{},"。":{"docs":{},"能":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"循":{"docs":{},"环":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"你":{"docs":{},"已":{"docs":{},"经":{"docs":{},"向":{"docs":{},"面":{"docs":{},"试":{"docs":{},"官":{"docs":{},"展":{"docs":{},"示":{"docs":{},"了":{"docs":{},"你":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"全":{"docs":{},"面":{"docs":{},"性":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"能":{"docs":{},"用":{"docs":{},"w":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}},"docs":{}},"docs":{}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}},"f":{"docs":{},"f":{"2":{"docs":{},"?":{"docs":{},"|":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"|":{"docs":{},"t":{"docs":{},"t":{"docs":{},"f":{"docs":{},"|":{"docs":{},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}},"docs":{}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"是":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"回":{"docs":{},"掉":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"他":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"收":{"docs":{},"每":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"效":{"docs":{},"率":{"docs":{},"是":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"想":{"docs":{},"办":{"docs":{},"法":{"docs":{},"把":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.009868421052631578}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.011542497376705142}},"创":{"docs":{},"建":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"里":{"docs":{},"面":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"根":{"docs":{},"据":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"进":{"docs":{},"而":{"docs":{},"调":{"docs":{},"用":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}}}}}}},"h":{"1":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}},",":{"docs":{},"p":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}},"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"network/http和https.html":{"ref":"network/http和https.html","tf":0.2857142857142857}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"d":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"y":{"docs":{},"u":{"docs":{},"y":{"docs":{},"u":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"8":{"8":{"9":{"5":{"2":{"6":{"5":{"4":{"docs":{"js/原型和原型链.html":{"ref":"js/原型和原型链.html","tf":0.5}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"e":{"docs":{},"j":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"6":{"8":{"4":{"4":{"9":{"0":{"4":{"0":{"7":{"3":{"1":{"3":{"3":{"5":{"7":{"2":{"1":{"0":{"4":{"docs":{"js/原型和原型链.html":{"ref":"js/原型和原型链.html","tf":0.5}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"是":{"docs":{},"以":{"docs":{},"安":{"docs":{},"全":{"docs":{},"为":{"docs":{},"目":{"docs":{},"标":{"docs":{},"的":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"通":{"docs":{},"道":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"讲":{"docs":{},"是":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"版":{"docs":{},"，":{"docs":{},"即":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"下":{"docs":{},"加":{"docs":{},"入":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"x":{"docs":{},"x":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"请":{"docs":{},"求":{"docs":{},"：":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"发":{"docs":{},"起":{"docs":{},"读":{"docs":{},"取":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"请":{"docs":{},"求":{"docs":{},"，":{"docs":{},"，":{"docs":{},"该":{"docs":{},"请":{"docs":{},"求":{"docs":{},"报":{"docs":{},"文":{"docs":{},"作":{"docs":{},"为":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"部":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"段":{"docs":{},"判":{"docs":{},"断":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"资":{"docs":{},"源":{"docs":{},"需":{"docs":{},"要":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"那":{"docs":{},"些":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"新":{"docs":{},"请":{"docs":{},"求":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"相":{"docs":{},"同":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"的":{"docs":{},"资":{"docs":{},"源":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"被":{"docs":{},"硬":{"docs":{},"盘":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"去":{"docs":{},"请":{"docs":{},"求":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"（":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}},"和":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":10}}}}}}},"：":{"docs":{},"全":{"docs":{},"称":{"docs":{},"超":{"docs":{},"文":{"docs":{},"本":{"docs":{},"传":{"docs":{},"输":{"docs":{},"协":{"docs":{},"议":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"详":{"docs":{},"细":{"docs":{},"规":{"docs":{},"定":{"docs":{},"客":{"docs":{},"户":{"docs":{},"端":{"docs":{},"与":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"network/http和https.html":{"ref":"network/http和https.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"l":{"5":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.014925373134328358}}},"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.022388059701492536},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}},"和":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"htmlcss/":{"ref":"htmlcss/","tf":10.25}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}}}}}}}}}}},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"版":{"docs":{},"，":{"docs":{},"在":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"目":{"docs":{},"录":{"docs":{},"下":{"docs":{},"会":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"将":{"docs":{},"打":{"docs":{},"包":{"docs":{},"好":{"docs":{},"的":{"docs":{},"j":{"docs":{},"s":{"docs":{},"注":{"docs":{},"入":{"docs":{},"到":{"docs":{},"该":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"手":{"docs":{},"动":{"docs":{},"引":{"docs":{},"入":{"docs":{},"打":{"docs":{},"包":{"docs":{},"好":{"docs":{},"的":{"docs":{},"j":{"docs":{},"s":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.04477611940298507}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"，":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"为":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.014492753623188406}},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}},"。":{"docs":{},"在":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"8":{"docs":{},"]":{"docs":{},".":{"docs":{},"[":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}},"]":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322}}},"docs":{}},"docs":{}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}}},"docs":{}},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":10.006211180124224}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.04477611940298507}}},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"=":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"#":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"a":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"a":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"a":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{},";":{"docs":{},"&":{"docs":{},"l":{"docs":{},"t":{"docs":{},";":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169},"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}},"d":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}},"e":{"docs":{},"r":{"1":{"docs":{},"、":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}}}}}}}}},"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"i":{"docs":{},"f":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"structure/链表.html":{"ref":"structure/链表.html","tf":0.005649717514124294}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.02717391304347826}},":":{"1":{"0":{"0":{"docs":{},"v":{"docs":{},"h":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}},"docs":{}},"docs":{}},"2":{"0":{"0":{"docs":{},"p":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}},"t":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"d":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.014124293785310734}},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03314917127071823},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00423728813559322},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}},"docs":{}},"docs":{}}}}}}}}}}},"v":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.00847457627118644}},",":{"docs":{},"打":{"docs":{},"包":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"e":{"docs":{},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}},"p":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.004197271773347324}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.005246589716684155}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"作":{"docs":{},"为":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"标":{"docs":{},"识":{"docs":{},"。":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"保":{"docs":{},"存":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"订":{"docs":{},"阅":{"docs":{},"器":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"连":{"docs":{},"接":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"和":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.010638297872340425}}}}}},"b":{"docs":{},"g":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.003289473684210526}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513}}}}}}}}}}}}},"m":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.02577319587628866}},"型":{"docs":{},"和":{"docs":{},"反":{"docs":{},"射":{"docs":{},"性":{"docs":{},"都":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"诱":{"docs":{},"导":{"docs":{},"用":{"docs":{},"户":{"docs":{},"点":{"docs":{},"击":{"docs":{},"链":{"docs":{},"接":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"都":{"docs":{},"是":{"docs":{},"临":{"docs":{},"时":{"docs":{},"型":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"反":{"docs":{},"射":{"docs":{},"型":{"docs":{},"属":{"docs":{},"于":{"docs":{},"服":{"docs":{},"务":{"docs":{},"端":{"docs":{},"安":{"docs":{},"全":{"docs":{},"漏":{"docs":{},"洞":{"docs":{},"而":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"树":{"docs":{},"：":{"docs":{},"词":{"docs":{},"法":{"docs":{},"分":{"docs":{},"析":{"docs":{},"然":{"docs":{},"后":{"docs":{},"解":{"docs":{},"析":{"docs":{},"成":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"树":{"docs":{},"（":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"u":{"docs":{},"i":{"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}},"）":{"docs":{},",":{"docs":{},"需":{"docs":{},"要":{"docs":{},"和":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}}}}}}}}},"a":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.028169014084507043},"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.03867403314917127},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"是":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"对":{"docs":{},"象":{"docs":{},"属":{"docs":{},"于":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"会":{"docs":{},"影":{"docs":{},"响":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"证":{"docs":{},"组":{"docs":{},"件":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"之":{"docs":{},"间":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"不":{"docs":{},"冲":{"docs":{},"突":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"算":{"docs":{},"法":{"docs":{},"执":{"docs":{},"行":{"docs":{},"时":{"docs":{},"更":{"docs":{},"快":{"docs":{},"的":{"docs":{},"找":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"提":{"docs":{},"高":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"速":{"docs":{},"度":{"docs":{},"，":{"docs":{},"更":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.015463917525773196},"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.043478260869565216},"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.012195121951219513},"structure/链表.html":{"ref":"structure/链表.html","tf":0.01694915254237288}},":":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}},"t":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}},"：":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734},"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}},"k":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.0297029702970297}}}},"v":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.010309278350515464}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"n":{"docs":{},"s":{"docs":{},"域":{"docs":{},"名":{"docs":{},"解":{"docs":{},"析":{"docs":{},"：":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"向":{"docs":{},"d":{"docs":{},"n":{"docs":{},"s":{"docs":{},"服":{"docs":{},"务":{"docs":{},"器":{"docs":{},"发":{"docs":{},"起":{"docs":{},"请":{"docs":{},"求":{"docs":{},"，":{"docs":{},"解":{"docs":{},"析":{"docs":{},"该":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"中":{"docs":{},"的":{"docs":{},"域":{"docs":{},"名":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"i":{"docs":{},"p":{"docs":{"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"器":{"docs":{},"(":{"docs":{},"#":{"docs":{},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282},"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.01},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.006211180124223602}}}}}}}},"i":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}},"d":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}},"r":{"docs":{},"l":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.09701492537313433},"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.061224489795918366},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.04225352112676056}}}},"s":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.015536723163841809},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"1":{"2":{"docs":{},".":{"6":{"docs":{},".":{"0":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}},"e":{"docs":{},":":{"docs":{},"[":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"v":{"docs":{},"u":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}},"docs":{}},"docs":{}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}}}}}},"b":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}},"l":{"docs":{"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}},"d":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.075}},"(":{"docs":{},"用":{"docs":{},"户":{"docs":{},"数":{"docs":{},"据":{"docs":{},"报":{"docs":{},"协":{"docs":{},"议":{"docs":{},")":{"docs":{},"是":{"docs":{},"面":{"docs":{},"向":{"docs":{},"非":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"与":{"docs":{},"对":{"docs":{},"方":{"docs":{},"建":{"docs":{},"立":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"而":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"报":{"docs":{},"=":{"docs":{},"包":{"docs":{},"发":{"docs":{},"送":{"docs":{},"出":{"docs":{},"去":{"docs":{},"。":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"一":{"docs":{},"次":{"docs":{},"传":{"docs":{},"输":{"docs":{},"少":{"docs":{},"量":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"性":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"高":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"环":{"docs":{},"境":{"docs":{},"。":{"docs":{},"日":{"docs":{},"常":{"docs":{},"生":{"docs":{},"活":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"命":{"docs":{},"令":{"docs":{},"测":{"docs":{},"试":{"docs":{},"主":{"docs":{},"机":{"docs":{},"是":{"docs":{},"否":{"docs":{},"通":{"docs":{},"信":{"docs":{},"正":{"docs":{},"常":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{},";":{"docs":{},"命":{"docs":{},"令":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"就":{"docs":{},"是":{"docs":{},"向":{"docs":{},"对":{"docs":{},"方":{"docs":{},"主":{"docs":{},"机":{"docs":{},"发":{"docs":{},"送":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"，":{"docs":{},"就":{"docs":{},"没":{"docs":{},"有":{"docs":{},"应":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"。":{"docs":{},"据":{"docs":{},"说":{"docs":{},"q":{"docs":{},"q":{"docs":{},"发":{"docs":{},"送":{"docs":{},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"是":{"docs":{},"靠":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{},"，":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"可":{"docs":{},"是":{"docs":{},"还":{"docs":{},"是":{"docs":{},"用":{"docs":{},"了":{"docs":{},"非":{"docs":{},"常":{"docs":{},"多":{"docs":{},"的":{"docs":{},"校":{"docs":{},"验":{"docs":{},"算":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"数":{"docs":{},"据":{"docs":{},"质":{"docs":{},"量":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"，":{"docs":{},"同":{"docs":{},"也":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"效":{"docs":{},"率":{"docs":{},"。":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"耗":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{},"优":{"docs":{},"先":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"有":{"docs":{},"限":{"docs":{},"选":{"docs":{},"用":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"，":{"docs":{},"比":{"docs":{},"方":{"docs":{},"浏":{"docs":{},"览":{"docs":{},"器":{"docs":{},"中":{"docs":{},"访":{"docs":{},"问":{"docs":{},"网":{"docs":{},"页":{"docs":{},"用":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"在":{"docs":{},"一":{"docs":{},"些":{"docs":{},"长":{"docs":{},"连":{"docs":{},"接":{"docs":{},"系":{"docs":{},"统":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"比":{"docs":{},"方":{"docs":{},"微":{"docs":{},"信":{"docs":{},"，":{"docs":{},"连":{"docs":{},"接":{"docs":{},"通":{"docs":{},"道":{"docs":{},"应":{"docs":{},"该":{"docs":{},"也":{"docs":{},"是":{"docs":{},"用":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"的":{"docs":{},"传":{"docs":{},"输":{"docs":{},"协":{"docs":{},"议":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"它":{"docs":{},"不":{"docs":{},"排":{"docs":{},"序":{"docs":{},"所":{"docs":{},"要":{"docs":{},"发":{"docs":{},"送":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"段":{"docs":{},"，":{"docs":{},"不":{"docs":{},"负":{"docs":{},"责":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"据":{"docs":{},"段":{"docs":{},"到":{"docs":{},"达":{"docs":{},"目":{"docs":{},"标":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"（":{"docs":{},"说":{"docs":{},"一":{"docs":{},"它":{"docs":{},"才":{"docs":{},"不":{"docs":{},"可":{"docs":{},"靠":{"docs":{},"）":{"docs":{},"。":{"docs":{},"它":{"docs":{},"在":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"要":{"docs":{},"比":{"docs":{},"t":{"docs":{},"c":{"docs":{},"p":{"docs":{},"小":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"u":{"docs":{},"d":{"docs":{},"p":{"docs":{},"适":{"docs":{},"合":{"docs":{},"用":{"docs":{},"在":{"docs":{},"那":{"docs":{},"些":{"docs":{},"实":{"docs":{},"时":{"docs":{},"性":{"docs":{},"强":{"docs":{},"、":{"docs":{},"允":{"docs":{},"许":{"docs":{},"出":{"docs":{},"错":{"docs":{},"的":{"docs":{},"场":{"docs":{},"合":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"：":{"docs":{},"即":{"docs":{},"时":{"docs":{},"通":{"docs":{},"讯":{"docs":{},"(":{"docs":{},"m":{"docs":{},"s":{"docs":{},"n":{"docs":{},"、":{"docs":{},"q":{"docs":{},"q":{"docs":{"network/传输层协议TCP和UDP.html":{"ref":"network/传输层协议TCP和UDP.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.045454545454545456},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.01675977653631285},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.004140786749482402}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.004398826979472141}},"(":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"&":{"docs":{},"g":{"docs":{},"t":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.001466275659824047}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0037243947858473}}}}}}}}}}}}},"x":{"docs":{},"x":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"?":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"&":{"docs":{},"#":{"3":{"9":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}},"docs":{}},"docs":{}}}}}}}}}}}}},"b":{"docs":{"browser/浏览器缓存.html":{"ref":"browser/浏览器缓存.html","tf":0.009900990099009901}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"那":{"docs":{},"么":{"docs":{},"在":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"就":{"docs":{},"立":{"docs":{},"即":{"docs":{},"执":{"docs":{},"行":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"他":{"docs":{},"的":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"数":{"docs":{},"据":{"docs":{},"就":{"docs":{},"会":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"他":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.002932551319648094}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}},"s":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"3":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00558659217877095}}},"docs":{}}},"docs":{}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"3":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00558659217877095}}},"docs":{}}},"docs":{}}}}}}}}},"s":{"docs":{"js/网络安全.html":{"ref":"js/网络安全.html","tf":0.08163265306122448}}}},"、":{"docs":{},"i":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}},"+":{"1":{"docs":{},"^":{"2":{"docs":{},"^":{"docs":{},"、":{"docs":{},"x":{"docs":{},"+":{"2":{"docs":{},"^":{"2":{"docs":{},"^":{"docs":{},"、":{"docs":{},"x":{"docs":{},"+":{"3":{"docs":{},"^":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}},"docs":{}}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"、":{"docs":{},"x":{"docs":{},"+":{"2":{"docs":{},"、":{"docs":{},"x":{"docs":{},"+":{"3":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}},"y":{"docs":{"js/Promise.html":{"ref":"js/Promise.html","tf":0.008797653958944282},"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0148975791433892}}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"1":{"1":{"2":{"2":{"3":{"3":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"2":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"3":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"4":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}},"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179},"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}},"/":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/前端路由.html":{"ref":"js/前端路由.html","tf":0.007462686567164179}}}}}}}},"!":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/垃圾回收机制.html":{"ref":"js/垃圾回收机制.html","tf":0.006024096385542169}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}}}},"r":{"docs":{},"h":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}}},"北":{"docs":{},"京":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}},"小":{"docs":{},"白":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"js/js循环总结.html":{"ref":"js/js循环总结.html","tf":0.013333333333333334}}}}}}}}},"块":{"docs":{},"级":{"docs":{},"格":{"docs":{},"式":{"docs":{},"化":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"htmlcss/BFC.html":{"ref":"htmlcss/BFC.html","tf":0.005434782608695652}}}}}}}}}}}}}}},".":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}}}}}}},"@":{"docs":{},"/":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.008287292817679558}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}},"v":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.011049723756906077}}}}}}}}}}}}},"后":{"docs":{},"代":{"docs":{},"组":{"docs":{},"件":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}},"子":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}},"孙":{"docs":{},"组":{"docs":{},"建":{"docs":{},"的":{"docs":{},"传":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}},"我":{"docs":{},"是":{"docs":{},"孙":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}},"爷":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}},"接":{"docs":{},"收":{"docs":{},"孙":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}}}},"改":{"docs":{},"变":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0027624309392265192}}}}}}}}}}}},"父":{"docs":{},"组":{"docs":{},"件":{"docs":{},"的":{"docs":{},"值":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/vue组件传值方式整理.html":{"ref":"frame/vue组件传值方式整理.html","tf":0.0055248618784530384}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"]":{"docs":{},".":{"docs":{},"[":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},":":{"8":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.002824858757062147}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.0014124293785310734}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"frame/webpack5工程化示例.html":{"ref":"frame/webpack5工程化示例.html","tf":0.005649717514124294}}}}}}}}},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"}":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},"&":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}}}}}}}}}}}},"e":{"docs":{},"u":{"docs":{},"e":{"1":{"docs":{"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.015957446808510637}}},"docs":{"browser/浏览器的多进程和js的单线程.html":{"ref":"browser/浏览器的多进程和js的单线程.html","tf":0.009174311926605505},"structure/堆栈和队列.html":{"ref":"structure/堆栈和队列.html","tf":0.005319148936170213}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}},"q":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.045},"js/常见知识点整理.html":{"ref":"js/常见知识点整理.html","tf":0.04225352112676056},"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.012591815320041973},"structure/二叉树.html":{"ref":"structure/二叉树.html","tf":0.046052631578947366},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.049689440993788817}},"，":{"docs":{},"克":{"docs":{},"隆":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/浅拷贝和深拷贝.html":{"ref":"js/浅拷贝和深拷贝.html","tf":0.005}}}}}}}}}}}}}}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.00186219739292365}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0148975791433892}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.0031479538300104933}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}},"f":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.008394543546694649}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},"e":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.002098635886673662}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"design/发布-订阅模式.html":{"ref":"design/发布-订阅模式.html","tf":0.001049317943336831}}}}}}}}}}}}}}}}}}}},"z":{"docs":{"js/函数式编程.html":{"ref":"js/函数式编程.html","tf":0.0074487895716946},"htmlcss/常见知识点汇总.html":{"ref":"htmlcss/常见知识点汇总.html","tf":0.005154639175257732},"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}},"h":{"docs":{},"u":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{"design/适配器模式.html":{"ref":"design/适配器模式.html","tf":0.006097560975609756}}}}}}},"x":{"docs":{},"c":{"docs":{},"v":{"docs":{},"v":{"docs":{},"v":{"docs":{"structure/哈希表HashMap.html":{"ref":"structure/哈希表HashMap.html","tf":0.002070393374741201}}}}}}}}},"length":2466},"corpusTokens":["0","0,1,2","0.2","0.25","0.4","0.75","000","02:54:16","0~9","1","1,2,3","1,2,3,4,5","1.json.parse(json.stringify(obj","10","10%~20","100","1000","100px","10^2","10^3","10px","11","110","12","13","14","1475236","14，14","15","16","163","17","19","1s","1~10，但却输出10次11。这是因为settimeout是一个宏任务，当settimeout执行的时候for循环已经结束了，所以打印出十次11","1~5","1~8m","1、hash","1。server确认isn序列号，放到seq域里，同时将确认序号(ack)设置为client的isn加1，即x+1","1个单位的内存，如果有一个对象需要占用3个内存单位的话，那么就会导致mutator一直处于暂停状态，而collector一直在尝试进行垃圾收集，直到out","1层，根的子节点为第2","1的自然数中，除了1和它本身以外不再有其他因数的自然数。通俗来说，就是除了1","1，b","1，直到是为止。比如原长度：7，2","2","2&#39","2)(3","2)判断x的类型，如果x是对象或者函数，说明x有可能是一个promise，否则就不可能是promis","2.v8","20","200","2000000","200px","200px)/2","2019","2021/5/12","20px","213","23、24、25、26、27","24","26","27","27^2","27^3","28","2、histori","2位系统新生代内存大小为16mb，老生代内存大小为700mb","2，c","2，后面的promise.resolve().then()扔进微队列，此时微队列{console.log(3","3","3.dom","3.v8","3.x","3.创建一个vue","300","3000000","304","31","32位系统下约为0.7gb","33","39","39;%&#39","39;(&#39","39;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&#39","39;)&#39","39;../dist&#39","39;../public/index.html&#39","39;../src/main.js&#39","39;./app.vue&#39","39;100%&#39","39;20%&#39","39;300%&#39","39;3次握手&#39","39;40%&#39","39;@&#39;:path.resolve(__dirname,&#39;../src&#39","39;@/tools/ev","39;@/views/home&#39","39;@babel/plugin","39;@babel/preset","39;[&#39","39;[name].[hash:8].js&#39","39;]&#39","39;app&#39","39;asset&#39","39;babel","39;child&#39","39;click&#39","39;conardli&#39","39;css","39;data&#39","39;default&#39","39;defaults&#39","39;development&#39","39;fonts/[nam","39;function&#39","39;guangzhou&#39","39;head&#39","39;hello","39;http","39;imgs/[nam","39;inlin","39;last&#39","39;less","39;loginsucc&#39","39;media/[nam","39;namespace1&#39","39;namespace2&#39","39;node_modules&#39","39;object&#39","39;pending&#39","39;postcss","39;production&#39","39;rejected&#39","39;resolved&#39","39;rh&#39","39;shenzhen&#39","39;style","39;sun&#39","39;then&#39","39;unexpect","39;usage&#39","39;vue$&#39;:&#39;vue/dist/vue.runtime.esm.js&#39","39;vue&#39","39;{&#39","39;}&#39","39;价格=2000000&#39","39;开始渲染广东省地图&#39","39;开始渲染百度地图&#39","39;开始渲染第三方地图&#39","39;开始渲染谷歌地图&#39","39;蜗牛&#39","39;这是爷组件的值&#39","3d","3~7","3、4、5、6、7","3、hash","3；这样单词也可以用该种方式来表示：cat","4","4,5","4.v8新生代算法（scaveng","43","443","45道promis","49","5","5,6,math.ab","5.v8老生代算法（mark","5.引用css","50","5000","500px","5min），同时也不会严格执行http","5、bucket","6","6.为css","60337","63","64位系统下约为1.4gb","64位系统下，新生代内存大小为32mb，老生代内存大小为1.4gb","6543","7","7.把css样式从js文件中提取到单独的css","8","8&quot;&gt","80","88","9","9511151","9511151转换为95年11月15","95年11月15","_arrarg","_creat","_default","_fn","_listen","_listen(key","_remov","_remove(key","_self","_shift","_shift.call(argu","_slice","_trigger","_trigger.apply(_self","_unshift","_unshift.call(argu","_valu","a+规范，我们自己写的这个promise用不上called,但是为了遵循规范才加上这个控制的，因为别人写的promis","a,b互相引用,计数不会等于0","a.com发布带有恶意链接的帖子或者评论（提交对a.com带有增删改的诱导型img/form/a","a.com并在自己浏览器留下a.com","a.test","a:hov","a=&quot;xx&quot","a[rel=&quot;external&quot","aaaaaaaaaa","abdefgc","absolut","absoult","ack","ack=0","ack=1","ack=1，seq=u+1，ack=w+1","ack=1，seq=v，ack=u+1","ack=1，seq=x+1，ack=y+1","ack=x+1","add","add(a","add(x","add(x,y,f","add4(x","addcurri","addcurry(a","addcurry=createcurry(add","addcurry=createcurry(function(a","addcurry，那么从上述定义可知，addcurry(1)(2","address","address.refresh","addressadapt","addsub","addsub添加订阅方法，removesub取消订阅，notify是通知更新方法，depend是调用了watcher的adddep","add函数就是一个纯函数，它读取x和y两个参数的值，返回它们的和，并且不会受到全局的z","ag","age=xxx","ajax","aleen42","alia","align","align:cent","allarrarg","allarrargs.length","allarrargs=arrargs.concat(_arrarg","amp","amp;&amp","api","app","app.vu","apr","aquamarin","arg","args.callee.call(thi","args.length","args=argu","args[i].call(thi","args[start].apply(thi","argument","arguments.length","ari","arr","arr.foreach(i","arr.length","arr.map(i","arr1","arr2","arrarg","array","array&lt;watcher&gt","array.isarray(ary[i","array.isarray(target","array.isarray(valu","array.length","array.map(func","array.map(function(item","array.prototype.filt","array.prototype.find","array.prototype.map","array.prototype.reduc","array.prototype.shift","array.prototype.shift.cal","array.prototype.shift.call(argu","array.prototype.slic","array.prototype.slice.call(argu","array.prototype.sort","array.prototype.unshift","array[i","array[j","array[target","array、object和funct","arri","arrow","ary.length","ary[i","asset","attrs/$listen","attrs爷传孙，$listen","auto","autoprefix","aux","aux.key","a、b节点之间插入一个新节点c","a主机需要和b主机之间建立数据收发，a需要发送一个请求询问b：&#39;我要建立连接&#39","a收到b的回应后，a向b再次回应：&#39;我要开始发送了&#39","a断开指向b的指针，将指针指向c","a的发送能力、b","a的接收、发送能力，b","b","b.com","b.com时候，b.com带着a.com的登陆凭证冒充受害用户执行对a.com的恶意操作2","b.com植有访问a.com","b.test","b[1","babel","babel/cor","babel/plugin","babel/preset","babel转义j","background","background:r","baidumap","bar","baz","bfc","bfc环境的盒子，他们两的margin才不会重叠，那么我们只需触发box3的bfc","bfc的区域不会与float","bfc的区域不会与float的元素区域重叠，把绿色盒子设置为bfc","bfc的高度时，浮动子元素也参与计算，把外层盒子设置bfc","bfc，即使该元素没有包裹在一个多列容器中（标准变更，chrome","binarysearchtre","bind=&quot;$attrs&quot","bitmap","block","block和text","book","boolean","border","both","bottom","bottom:0","box","box2","box3","break","break,continue和return","break中断循环，不能使用return","break中断循环，可以使用return","bst","bu","bubblesort(array","bucket","bucket.length","bucket.push([key","bucket.splice(i","bucket[i","bug","build","build/webpack.config.j","build/webpack.config.js&quot","build/webpack.dev.j","build/webpack.prod.js&quot","build文件夹并新建webpack.config.j","build，可以看到dist下的js和css。发现main.css整合了src下面两个css","build，可以看到生成了dist文件夹并在index.html引入了j","bus&#39","bus.$emit(&quot;share&quot","bus.$off(&quot;share&quot","bus.$on(&quot;share&quot;,(data)=&gt","bus.j","b收到消息后，会给a发送一个回应：&#39;可以连接&#39","b的发送能力、a","c","c.id","c.name","cach","cache/memori","cache[key","cache[key].length","cache[key].push(fn","cache[key].splice(i","cache[key][i","cachedirectori","calc","calculate=compose(multiply4,add4","call","callback","caption，html","cart.refresh","cat","catch","catch(","catch(errcallback","catch方法其实就是没有成功回调的then方法，这个很好理解，因为一旦失败之后就会调用reject,最终都会走到then方法的失败回调中，只是简单的把then","cb","cb(node.key","cell","cell，html","center","ch","chain","chang","changebgcolor(&quot;green&quot","changebgcolor(&quot;white&quot","changebgcolor(&quot;yellow&quot","changebgcolor(color","changechildren","changemsg(data","changemsg=&quot;changemsg&quot;/&gt","charset=&quot;utf","cheney","child","childob","childob.dep.depend","children","childrenmsg","childrenvalue(nsg","chrome","chrome浏览器中打开了多个tab，然后打开mac","chunkfilenam","citi","class","class=&quot;box&quot;&gt;&lt;/div&gt","class=&quot;box2","class=&quot;box2&quot;&gt;&lt;/div&gt","class=&quot;box3","class=&quot;box3&quot;&gt;&lt;/div&gt","class=&quot;container&quot;&gt","class=&quot;content&quot;&gt","class=&quot;sun&quot;&gt","clean","clear","cli","click=&quot;changechildren&quot;&gt;点击改变子元素的值&lt;/button&gt","click=&quot;clickbtn&quot;&gt;点我改变父组件&lt;/button&gt","click=&quot;clickbtn&quot;&gt;点我改变父组件的值&lt;/button&gt","click=&quot;msgchange&quot;&gt;点击&lt;/button&gt","click=&quot;setval&quot;&gt;点击&lt;/button&gt","click=&quot;tovalue&quot;&gt;点击传值给爷组件&lt;/button&gt","clickbtn","client","clientlist","clientlist[key","clientlist[key].push(fn","client再次发送确认包(ack)，ack标志位为1，并且把server发来isn的序号字段+1","client发送syn标志位1的包到server，以及初始序号x（保存在包头的序列号seq字段，简称isn），和ack标志位为0，并进入syn_send状态，等待serv","client和server断开连接，tcp","client接收到来自server端的关闭请求之后，发送最后一个ack确认包，确认序号设置为收到序号加1。cli","client的最后一个ack","client端和server端关闭tcp","client端和server端建立稳定tcp","clinetlist","cloen函数进行改写：当遍历数组时，直接使用foreach进行遍历，当遍历对象时，使用object.keys取出所有的key进行遍历，然后在遍历时把foreach会调函数的value当作key","clone(target","clone(target[key","clone2(target[key","clonetarget","clonetarget[key","close_wait","collec","collect","color","column","common","compact","compact算法。mark","compil","complet","complex","compon","compos","compose(f,g","compose）和柯里化（curri","comput","computed与watch","config","configur","console.log","console.log(","console.log(&#39","console.log(&#39;catch错误&#39","console.log(&#39;squaremet","console.log(&#39;成功的结果1&#39","console.log(&#39;成功的结果2&#39","console.log(&quot","console.log(&quot;请为路由绑定处理方法&quot","console.log(1","console.log(2","console.log(3","console.log(4","console.log(5)执行，输出5","console.log(6","console.log(7","console.log(a","console.log(add","console.log(add(1","console.log(addcurry(1","console.log(addcurry(1)(2","console.log(addcurry(1)(2)(3","console.log(arr)//1,3,4","console.log(arr)//[1,3,4","console.log(arry[i","console.log(calculate(1","console.log(data","console.log(err","console.log(error","console.log(errorp","console.log(getnewarray([1","console.log(hashfn(&quot;123&quot","console.log(hashfn(&quot;abc&quot","console.log(i","console.log(i);//2,4,5","console.log(io","console.log(iofn","console.log(item","console.log(j","console.log(l","console.log(lenarray","console.log(multiply4(add4(1","console.log(nam","console.log(newarr)//[2,4,5","console.log(newarr)//undefin","console.log(p","console.log(r","console.log(text","console.log(tree.getroot","const","constant","constructor","constructor(executor","constructor(fn","constructor(valu","contain","container(valu","container.of(5","container.of(fn(this._valu","container的高度为0","content","content.style.backgroundcolor","content:cent","context","context提供了一个环境，html","continue跳过循环中的一个迭代（区别于for","control","cooki","cookie、sessionid","cookie、sessionstorage、localstorag","cookie数据大小不能超过4k；sessionstorage和localstorage的存储比cookie大得多，可以达到5m","cookie的数据会自动的传递到服务器；sessionstorage和localstorag","cookie设置的过期时间之前一直有效；localstorage永久存储，浏览器关闭后数据不丢失除非主动删除数据；sessionstorag","copyobj","core","corej","count","cpu","creat","createcurri","createcurry(func","createcurry(map","cross","csp","csrf","csrf（cross","css","css时也需要一些loader来解析我们的css","css规则树：生成css规则树（css","curri","currnod","currnode.el","currnode.next","currnode.next.el","currnode.next.previ","currnode.previ","currnode.previous.next","customsett","cycl","c不再引用a","c节点将指针指向b","d","data","dataobj","data是对象的话，对象属于引用类型，会影响到所有的实例。所以为了保证组件不同的实例之间data不冲突，data","date","date）,需要和last","debgfac","decor","decorators&#39","deep","default","definereact","dep","dep.depend","dep.notifi","dep.target","dep.target.adddep(thi","depend","dependarray(valu","dep对象比较简单，内部有一个唯一id，用于作为dep对象的唯一标识。还有一个保存watcher的数组sub","dep是订阅器，也是连接observer和watch","dequeu","destroy","detect","dev","dev,打包npm","develop","devserv","devtool","diff算法执行时更快的找到对应的节点，提高diff速度，更高效的更新虚拟dom","direct","disk","display","display:flex","display:t","display：inlin","dist","div","dns域名解析：浏览器向dns服务器发起请求，解析该url中的域名对应的ip","document.getelementbyid(&#39;div&#39","document.queryselector(&quot;body&quot","document.writ","dom","dom型和反射性都是通过诱导用户点击链接执行，并且都是临时型的，但是反射型属于服务端安全漏洞而dom","dom树：词法分析然后解析成dom树（dom","dom，则可能出现ui","d选择器(#myid","e","e.messag","each","each(offlinestack","each(stack","edgfbca","either：两者中的任何一个，类似if...els","element","en","enqueue(el","enqueue(element(","entri","enumer","env","env&#39","err","errcallback","error","errorp","error手动调用reject","es6增加，let和const","es6将其写进了语言标准。所谓promis","es6新增api","etag","etag放在request","etag：每个文件有一个，是一个字符串，其内容通常是数据的哈希值,改动文件了就变了，可以看似md5","evalu","eval可执行上下文：ev","even","event","event.cr","event.listen","event.listen(&#39;squaremeter88&#39","event.listen(key","event.one(key","event.remove(key","event.trigg","event.trigger(&#39;squaremeter88&#39","event.trigger.apply(thi","event[i","eventbu","eventloop","exclud","executor","executor(resolv","executor传入我们定义的成功和失败函数:把内部的resolve和reject传入executor中用户写的resolv","expir","exponenti","exporfn","export","express","extensions:[&#39;*&#39;,&#39;.js&#39;,&#39;.json&#39;,&#39;.vue&#39","extract","f(g(x","f(key)将一组关键字映射到一个有限且连续的地址区间上，并以关键字在地址区间中的“像”作为元素在表中的存储位置的一种数据结构。这个映射过程称为哈希造表或者散列，这个映射函数f(key","f(x","f(x)+f(i","factori","fals","field1","field2","field3","field4","fifo","filenam","filename:\"icons/[nam","filename:&quot;icons/[nam","fin","fin=1，ack=1，seq=w，ack=u+1","fin=1，seq=u","fin_wait_1","fin_wait_2","final","find","findminnode(nod","findminnode(node.right","findprev","findprevi","fin标志位置为1，当前序列号为u的包，表示需要关闭连接了。cli","fire","first","fix","flatten","flex","float","flow","fn","fn(arr[i","fn(result","fn(target","fn.appli","fn.apply(thi","fn.call(n","fn1","fns.length","fns.splice(l","fns[i","fns[l","fonts/[nam","foo","footer","foo中创建了函数bar，并返回了函数bar，并在函数foo作用域外执行了函数bar，当函数bar执行时，访问了foo作用域中的变量a","for(let","foreach","foreach(array","foreach(key","forgeri","format","for和v","fp","fp模块中的flowright将io函子中存储的value(函数)和map传入的fn","front","func","func.apply(thi","func.length","funclength","function","function(ari","function(b","function(cb","function(data","function(item","function(key","function(namespac","function(obj","function(path","function(pric","function(x","functions&#39","functor","g","gc(garbag","gener","get(key","getguangdongc","getitem","getnewarray","getnewarray(array","getprim","getprime(numb","getqueu","getter","getter.call(obj","getter。在这个getter中会调用相关data的gett","getter中，添加dep.depend方法，set中添加dep.notifi","gitbook","github博客地址：zhenyuyyk.github.io","global","gmt","googlemap","gpu","gpu加速，translate使用3d","green","grid","group、tabl","group（分别是html","growth","gt","gt;id","guangdongc","guangzhou","gui","gui线程和j","h","h(app","h1","h1,p","handleerror(","hash","hash:8].[ext","hash:8].[ext]&#39","hash:8].[ext]&quot","hashchange，hash值为&quot","hashcod","hashcode(key","hashfn(key","hashfn(str","hashmap","hashtabl","hashtable.length","hash。在浏览器中，可以通过location.hash","head","head.next","header","header.setavatar(data.avatar","header1、header2","header的if","heap","height","height:100vh","height:200px","hi","hidden隐藏一个dom","higher","histori","history.pushst","history.replacest","history.st","home","hot:tru","href=&quot;#&quot;&gt;white&lt;/a&gt;&lt;/li&gt","href=&quot;#green&quot;&gt;green&lt;/a&gt;&lt;/li&gt","href=&quot;#yellow&quot;&gt;yellow&lt;/a&gt;&lt;/li&gt","html","html&gt","html5","htmlwebpackplugin","html作为模版，在dist目录下会生成一个相同的html，之后将打包好的js注入到该html","html和css","html文件中手动引入打包好的js，这时候就需要使用html","http","http://www.xxx.com/list/complet","https://blog.csdn.net/yuyuking/article/details/88952654","https://github.com/lodash/lodash","https://juejin.im/post/6844904073133572104","https：是以安全为目标的http通道，简单讲是http的安全版，即http下加入ssl","http和http","http头部中的字段判断哪些资源需要缓存哪些可以直接使用那些需要重新请求。如果相同url的资源一旦被硬盘缓存，就不会再去请求数据。（http","http的header","http请求：浏览器发起读取文件的http请求，，该请求报文作为tcp","http：全称超文本传输协议，是一种详细规定客户端与web","id","id=&quot;app&quot;&gt","id=&quot;app&quot;&gt;&lt;/div&gt","id].css","ie","ie8","ie9","if((typeof","if(key","if(nod","if(node.left","if(node.right","ignor","imgs/[nam","import","index","index+1","index.html","index.j","index=3","index=4","info","inherit","init","inject","inlin","inordertraversenode(nod","inordertraversenode(node.left","inordertraversenode(node.right","inordertraversenode(root","insert","insertnod","insertnode(nod","insertnode(node.left","insertnode(node.right","insertnode(root","insertsort(array","instal","installev","installevent(salesoffic","instanceof","interfac","invokewitherrorhandling(this.cb","in在遍历时效率是非常低的，我们来对比下常见的三种循环for、while、for","in这种方式，实际上for","in遍历改变为whil","io","io(fp.flowright(fn","io(funct","io._valu","io.of(process).map(v","iofn","io函子中的_valu","io函子可以把不纯的动作存储到_valu","io的of函数时of函数会将我们传递进来值保存到一个函数中，在使用时再来获取process","io，但是此时我们使用的是io","ip（internet","isarray","isempti","isn","isobject(valu","isprim","isprime(numb","isrenderwatch","istanbul","isvalid","item","item.charcodeat","item.length","items.get(thi","items.set(thi","iterate","iteratee(array[index","i在每次迭代的时候，都产生一个私有的作用域，在这个私有的作用域中保存当前i","j","java","javascript","javascript中，数据类型分为基本数据类型和引用数据类型，基本数据类型包含：string、number、boolean、undefined、null、symbol、bigint","javascript是多线程的方式来操作这些ui","javascript是多线程的话，在多线程的交互下，处于ui中的dom节点就可能成为一个临界资源，假设存在两个线程同时操作一个dom","javascript的垃圾回收机制，必须要知道内存的概念。javascript","javascript脚本中，绝大多数对象的生存期很短，只有部分对象的生存期较长。所以，v8","job","js","json","json.stringifi","js引擎执行时gui线程会被挂起，gui更新则会被保存在一个队列中等到j","js引擎解析过程：调用js引擎执行j","js执行中最先进入全局环境，所以处于&quot;栈底的永远是全局环境的执行上下文&quot;。而处于&quot;栈顶的是当前正在执行函数的执行上下文&quot","js的单线程和它的用途有关，作为浏览器脚本语言，它主要是用来处理页面中用户的交互，以及操作dom树、css","js负责将新的api进行转化，例如promise、generator、set、maps、proxi","justifi","key","key，克隆对象作为valu","l","lang=&quot;en&quot;&gt","lang=&quot;ts&quot;&gt","laodfactor","last","last_ack","layout","layout、cont","left","left(valu","left.of","left.of(12).map(v","left:0","left:50","left:calc((100","left函子中map","legaci","len","lenarray","length","less","li","li:nth","lifo","limit","linear","listen","listen（监听）状态下，收到建立连接请求的syn报文后，把ack和syn放在一个报文里发送给客户端。而关闭连接时，当收到对方的fin报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方是否现在关闭发送数据通道，需要上层应用来决定，因此，己方ack和fin","llist","loader","loader&#39","loader/lib/plugin&#39","loader负责将es6/7/8等语法转换为es5","loadfactor","location.hash","location.hash.slice(1","lodash的clonedeep","logarithm","login.listen(&#39;loginsucc&#39","login.succ(function(data","login.trigg","log中得到的function就是分析3","log我们可以看到我们得到了一个io","loop","loos","lt","lt;!doctyp","lt;/body&gt","lt;/div&gt","lt;/head&gt","lt;/html&gt","lt;/script&gt","lt;/style&gt","lt;/template&gt","lt;/ul&gt","lt;body&gt","lt;button","lt;children","lt;div","lt;div&gt","lt;head&gt","lt;home&gt;&lt;/home&gt","lt;html","lt;li&gt;&lt;a","lt;meta","lt;p&gt;&lt;/p&gt","lt;parent","lt;promise&gt","lt;script","lt;script&gt","lt;style","lt;template&gt","lt;title&gt;title&lt;/title&gt","lt;ul&gt","m?j","macrotask1","macrotask1执行完(调用栈空)，再去执行微队列{console.log(3)}，输出3","macrotask1，扔进调用栈执行，此时宏队列{macrotask2","macrotask1，执行console.log(2","macrotask2","macrotask2，执行console.log(6)，输出6","main","main.j","map","map&#39","map(fn","map(func","map(v","map(x","map.get(target","map.set(target","map.show","mapcurri","mapcurry(function(item","mapforeach(arr","mapforeach(strarray","map方法中组合了fn和this._value,fn是我们传入的v","map方法返回了一个新的io函子，这个新的io函子中valu","map方法，map","map，object,array,set","margin","margin:auto.div","margin决定（即margin","margin负值.div","margin重叠了，距离只有10px","mark","mark），一个是清除阶段(sweep","match与自己服务器中的etag","match中，服务器比较if","math.ceil(math.random","math.ceil(math.random()*10","math.ceil(math.sqrt(numb","max","maxnode(nod","maxnode(root","mayb","maybe(valu","maybe.of(&#39;hello","maybe.of(fn(this._valu","maybe.of(nul","maybe函子中我们学习了如何处理函子内部值是空值的情况，此时我们可以控制传入值的异常。那如果我们在调用传入处理函数fn","media/[nam","memori","merg","merge&#39","merge(common","merge帮我们merg","message.refresh","method","method），把内部变量当作它的私有属性（priv","middl","mini","minicssextractplugin","minicssextractplugin.load","minnode(nod","minnode(root","mm","mode","modifi","modified:w","modified中的时间添加到if","modified这个header,将last","modified：文件的修改时间,服务器可以通过配置这个响应头，来向浏览器发送一个数据上次被修改的时间标签，例如：last","modul","module.export","mount(&#39;#app&#39","mp4|webm|ogg|mp3|wav|flac|aac","msg","msg2","msg:&#39;&#39","msg=&quot;msg&quot","msg=&quot;子组件改变父组件&quot","msg=&quot;父组件改变子组件&quot","msgchang","multiply4(x","mutat","mvc","mvvm","mvvm拆开来即为model","mvvm的架构下，view层和model层并没有直接联系，而是通过viewmodel层进行交互。viewmodel层通过双向数据绑定将view层和model层连接了起来，使得view层和model层的同步工作完全是自动的。因此开发者只需关注业务逻辑，无需手动操作dom，复杂的数据状态维护交给mvvm统一来管理。在vue.js中mvvm","myclass","mypromis","mypromise((resolv","m（m&gt;=0","n","n(n+1)/2","n,n的深度为从根到n的唯一路径长，根的深度为0","n,n的高度为从n到一片树叶的最长路径长，所有树叶的高度为0","name","name].[hash:8].css","name].[hash:8].j","namespac","namespacecach","namespacecache[namespac","nav","nav.setavatar(data.avatar","nestedlist","new","newarr","newarray","newarray.push","newel","newlimit","newnod","newnode.key","newnode.next","newnode.previ","newval","next","node","node(el","node(key","node.innerhtml","node.js。实际上，如今，javascript","node.key","node.left","node.right","node_modul","node中javascript","node版本：10.12.0","node环境，我们将nod","none","none隐藏一个dom","noop","notifi","npm","null","null/undefin","num","number","number，boolean，str","n（n&gt;0","o","o(1","o(1),插入的时间复杂度是o(n","o(1)，也称为常数阶。只有一重循环，则算法的基本操作的执行频度与问题规模n呈线性增大关系，记作o（n","o(2^n","o(log","o(n","o(n)，插入的时间复杂度是：o(1","o(n2","o(n^2","o(n^3","obj","obj.concat(objx","obj.then","obj[i","obj[key","object","object.assign","object.assign、contact","object.defineproperty()来劫持各个属性的setter，gett","object.defineproperty(obj","object.defineproperty(promis","object.getownpropertydescriptor(obj","object.keys(target","object.prototype.tostring.cal","object/array","object、array和null区分，都返回object","object和array","object）使用，把闭包当作它的公用方法（publ","obj的key值添加装饰器的地方。它会为每个值创建一个dep。之后通过object.defineproperti","obj，进行释放，然是target依然对obj","observe(newv","observe(v","observer，主要作用是劫持数据添加上setter，gett","of(valu","offlinestack","offlinestack.length","offlinestack.pop","offlinestack.push(fn","of方法返回的是io对象，这个io对象中的value存储了一个函数，这个函数返回当前传入的process","ok，基于以上所述我们写一个最基本的promis","old","oldaddress","oldaddressfn","oldstorag","oldvalu","on","on=&quot;$listeners&quot;/&gt","onfulfil","onfulfilled(this.valu","onhashchang","onreject","onrejected(this.reason","open&quot","option","order","os","othermap","othermap.display","othermapadapt","out","output","overflow","overflow:hidden","p","package.json","package.json中的script","pad","paint","painting）：即遍历render树，并使用ui","parent","parentmsg","pars","parsejson(&#39","parsejson(str","parsepath(exporfn","path","path.resolve(__dirnam","peek","pend","person","person[i","pink","plugin","plugin&#39","plugin创建html页面，并将打包后的js文件需要引入到html","plugin插件的作用,webpack5","pointer","pop","poptarget","port:3000","posit","position:absolut","position：absolute或fix","postcss","postcss.config.j","postordertraversenode(nod","postordertraversenode(node.left","postordertraversenode(node.right","power","preordertraversenode(nod","preordertraversenode(node.left","preordertraversenode(node.right","preordertraversenode(root","preset","prev","previou","prevnod","prevnode.next","prevnode.next.next","prev属性，所以我们需要把nod","price","prime","print","privat","private和publ","problem","process.env.node_env","process.nexttick、mutationobserver、promise.then","programming,fp)，fp","promis","promise((resolv","promise.resolve().then","promise.then","promise.then((r","promise2","promise2,为什么要取到promise2","promise2,既然返回的结果是一个promise那就继续解析尝试在它的then方法中拿到这个promise的结果，此时promise2的状态依然是pending，那么执行promise2.then方法只会添加订阅，而一直得不到resolv","promise2.then","promise2的reject","promise2的resolv","promise2的resolve和reject","promise2的状态就变为失败，在它的then","promise2的状态就变为成功了，就可以在它的then","promise内语句console.log(4)，输出4，后面的then扔进微队列，此时的微队列{console.log(5","promise可以then","promise实例上都要有一个then","promise实现，但是大家都必须遵循promis","promise对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled/resolved（已成功）、reject","promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为reject","promise必须是resolve之后才能走到它then方法，从而创建下一个的promis","promise有内部会提供两个方法，注意不是原型对象上的，这两个方法会传给用户,可以更改promis","promise的then方法执行的时候创建了promise2，这个时候promise2状态是pend","promise的实现可能有多个，但都要遵循promis","promise要有then","promise解析出来的结果可能还是一个promis","promise那就要有then","promise，则先正常执行promise里面语句，把后面的then","promise，如果是promise的话，需要让这个promis","promise，这里至于为什么要把promise2","prop","properti","properties&#39","property.configur","property.get","property.set","propos","props/$emit","protocol","provid","provide/inject","public","public/index.html","public文件夹，新建index.html文件，更改webpack.config.j","pure","push","push(el","push(element(","pushtarget(thi","put","put(key","put(key,valu","qq","queue","queue1","queuewatcher(thi","quot;!.......&quot","quot;${this.expression}&quot","quot;&quot","quot;()&quot","quot;./children&quot","quot;./parent&quot","quot;/&quot","quot;1&quot","quot;112233&quot","quot;2&quot","quot;3&quot","quot;4&quot","quot;@/views/assembly/children&quot","quot;[id].css&quot","quot;[name].[hash:8].css&quot","quot;build&quot","quot;children&quot","quot;default&quot","quot;dev&quot","quot;grandparent&quot","quot;hello","quot;lala&quot","quot;name&quot","quot;parent&quot","quot;rh&quot","quot;scripts&quot","quot;touch&quot","quot;webpack","quot;北京&quot","quot;后代组件&quot","quot;块级格式化上下文&quot","quot;子元素的值&quot","quot;孙组建的传值&quot","quot;小白&quot","quot;我是孙组件的值&quot","quot;我是爷组件的值&quot","quot;接收孙组件的值&quot","quot;改变后的值&quot","quot;父组件的值&quot","r","re","reactivegett","reactivesett","reason","red","ref=&quot;children&quot;/&gt","refresh，这种耦合性会使程序变得僵硬，head","ref与$parent/$children","regexp","reject","reject(","reject(new","reject(r","reject);//resolve和reject都是当前promis","rejected）返回失败的原因，如果不写原因返回undefin","reject传入executor中用户写的resolv","reject都是promise2","rel","relative，子元素margin","remov","remove(key","remove(this.sub","removenode(nod","removenode(node.left","removenode(node.right","removenode(root","removesub","remove方法里的for","render","rendermap","render树：web浏览器将dom和cssom结合，并构建出渲染树（rend","request","require(&#39;./webpack.config.js&#39","require(&#39;autoprefixer&#39","require(&#39;html","require(&#39;lodash/fp&#39","require(&#39;mini","require(&#39;path&#39","require(&#39;vu","require(&#39;webpack","require(&#39;webpack&#39","require('html","require('mini","require('path","reserv","resiz","resize(newlimit","resize(valu","resolv","resolve(&#39;hello&#39","resolve(&#39;xxx&#39","resolve(5","resolve(new","resolve(x","resolve,reject都取的到，因为resolve的执行是在这两个函数执行之后，这里递归是防止value也是一个promis","resolved（已定型）。如果改变已经发生了，你再对promis","resolved）返回成功的结果，如果不写结果返回undefin","resolvepromis","resolvepromise(promise2","resolvepromise第一个参数promise2到底有什么用？其实很简单就是为了符合promis","resolvepromise这么一个函数，用来递归处理then内部回调函数执行后的结果，它有4","resolve的也是promis","respons","result","ret","return","rh","right","right(valu","right.of(12).map(v","right.of(fn(this._valu","right.of(json.parse(str","right:0","right函子中map","root","root（bfc","router","router.prototype.init","router.prototype.refresh","router.prototype.rout","router.route(&quot;/&quot","router.route(&quot;/green&quot","router.route(&quot;/yellow&quot","row","rule","run","runtim","run中还会调用this.get()来获取修改之后的valu","s","s.charat(i","s.length","salesoffic","salesoffices.clientlist","salesoffices.listen","salesoffices.listen(&#39;squaremeter100&#39;,function(pric","salesoffices.listen(&#39;squaremeter110&#39;,function(pric","salesoffices.listen(&#39;squaremeter88&#39","salesoffices.listen(&#39;squaremeter88&#39;,function(pric","salesoffices.listen(function(pric","salesoffices.remov","salesoffices.remove(&#39;squaremeter88&#39","salesoffices.trigg","salesoffices.trigger(&#39;squaremeter100&#39","salesoffices.trigger(&#39;squaremeter110&#39","salesoffices.trigger(&#39;squaremeter88&#39","salesoffices.trigger(2000000","salesoffices.trigger(3000000","salesoffices2","same","saynam","sayname(nam","saynameend(nam","saynamestart(nam","scaceng","scaveng","scavenge算法中，但是在分代式垃圾回收的前提下，from空间中存活的对象在复制到to","schedul","scoped&gt","script","script（整体代码）、settimeout、setinterval、i/o、setimmedid","searchnode(ndo","searchnode(node.left","searchnode(node.right","searchnode(root","semi","semispace，每块内存大小8mb（32位）或16mb（64","seq","seq=i","seq=x","serv","server","server发回确认包(ack","server将剩余数据发送完之后，会发送一个自己的fin包，序列号为u+1。serv","server接收到这个确认包之后，关闭连接，进入closed状态。(client会等待2msl之后，没有收到server的ack","server收到client的fin包之后，会发送一个确认序号为收到的序列号u+1的包，表明自己接受到了client关闭连接的请求，但还未准备好关闭连接。serv","server进入closed状态，自己也关闭进入clos","session","set","setavatar","setinterval(funct","setinterval与settimeout","setmsg","setmsg(msg","setter","setter.call(obj","settimeout","settimeout(funct","settimeout、ajax","settimeout扔进宏队列，将这个记作macrotask1，此时宏队列为{macrotask1","settimeout扔进宏队列，记作macrotask2，此时的宏队列{macrotask1,macrotask2","settouxiang","setval","setval(msg","setval=&quot;setval&quot;/&gt","shallow","shenzhen","show","since中的时间与服务器中这个资源的最后修改时间对比，没变化就返回304，最后修改时间比if","since中的时间大，就说明有变化，返回200","since这个head","site","size","skyblu","slice","sourc","spa","space","spaces)：to","span","splice","splice和slic","sql注入、dns劫持、do","squar","squaremet","src/core/observ","src/core/observer/dep.j","src/core/observer/watcher.j","src/main.j","src/tools/ev","src下面新建一个index1.css文件和index2.less文件，并在main.j","src目录，并在下面新建一个main.j","ssl","ssl+http","stack","stack.length","stack.pop","stack.push(ch","start","static","statu","stepsiz","sticki","storag","store","string","style","sub","subs.length","subs[i].upd","subscrib","sweep","sweep和mark","sweep的基础上演进而来的，相比mark","sweep，mark","syn","syn=1","syn_rcvd","tab","tabl","table、row、tbody、thead、tfoot","table、t","target","target.push(item","target.set(obj,&#39;code秘密花园&#39","target.target","target属性，变为了一个circular","tcp","tcp(传输控制协议)是基于连接的。在正式收发数据之前，必须要与对方建立连接。这之间需要经过&#39;三次握手&#39","tcp/ip","tcp/ip协议分为五层，分别是应用层、传输层、网络层、数据链路层、物理层。每层都有对应的相关协议，其中tcp和udp","tcp和ucd","tcp和udp","tcp是可靠的，udp","tcp连接：解析出ip地址后，根据ip地址和默认80端口，和服务器建立tcp","tcp连接：通过四次挥手释放tcp","tcp（transmiss","tcp，而第二种对应udp。tcp是需要对方确认的，也就是传输之前需要进行三次握手（传输的两端需要经过三次握手，才开始通信）。udp","tcp：是全双工、面向连接、可靠的，而且精确控制的协议。主要用于实时性不强，但传输要求高的应用。比方说：网页浏览、文件下载(不是bt、电脑下载)、邮件的发送等场合，这些场景需要tcp","temp","templat","test","test:/\\.(png|jpe?g|gif","test:/\\.svg","test:/\\.vu","text","then((data","then(onfulfil","then.call(x","then中返回一个普通值或者一个成功的promis","then内部的回调函数执行结果依然是一个promise那就把这个promise的结果resolv","then方法报错就走到下一个then","then方法有可能是gett","then方法要访问到所以放到thi","then方法返回的必须是一个promis","then时有风险，所以要放在try...catch","this.$emit(&quot;changemsg&quot","this.$emit(&quot;setval&quot","this.$parent.childrenvalue(msg","this.$refs.children.setmsg(msg","this._valu","this.a","this.act","this.apply(_self","this.cb.call(this.vm","this.childrenmsg","this.cleanupdep","this.clientlist","this.clientlist.length","this.clientlist.push","this.clientlist[i","this.clientlist[key","this.clientlist[key].push(fn","this.count","this.creat","this.currenturl","this.data.msg}+${this.data.num}+${this.parentmsg","this.dataobj","this.deep","this.dirti","this.display","this.el","this.find","this.findprev","this.get","this.getitem","this.getitems().length","this.getitems().pop","this.getitems().push(el","this.getitems()[this.getitems.length","this.getqueue().length","this.getqueue().push(el","this.getqueue().shift","this.getqueue()[0","this.getroot","this.gett","this.getter.call(vm","this.head","this.id","this.inordertravers","this.insert","this.key","this.lazi","this.left","this.limit","this.listen(key","this.loadfactor","this.max","this.min","this.minloadfactor","this.msg","this.msg2","this.msg=nsg","this.next","this.onrejectedcallback","this.onrejectedcallbacks.foreach(fn","this.onrejectedcallbacks.push","this.onresolvedcallback","this.onresolvedcallbacks.foreach(fn","this.onresolvedcallbacks.push","this.onresolvedcallbacks.push(onfulfil","this.postordertravers","this.preordertravers","this.prev","this.put(b[0","this.reason","this.refresh.bind(thi","this.remov","this.resize(this.getprime(math.floor(this.limit","this.resize(this.getprime(this.limit","this.right","this.rout","this.routes[path","this.routes[this.currenturl","this.run","this.search","this.setmsg","this.statu","this.storag","this.storage[index","this.sub","this.subs.push(sub","this.subs.slic","this.sync","this.test","this.then(nul","this.us","this.valid","this.valu","this.vm","throw","time_wait","todo","token","top","top:0","top:50","top:calc((100","tovalu","to空间的使用应超过25","track","transform","transform，translatex可以移动本身元素的50","translat","traverse(valu","tree","tree.insert(10","tree.insert(19","tree.insert(20","treeviewcopyright","tree），是由dom元素及属性节点组成，树的根是docu","tri","trigger","true","true时是赋值法定义属性，false时是使用object.defineproperti","trun","tupl","tuple[0","tuple[1","txt","type","type:&#39;asset&#39","type:'asset","typeerror(&#39;[typeerror","typeof","udp","udp(用户数据报协议)是面向非连接的，不与对方建立连接，而直接把数据报=包发送出去。udp适用于一次传输少量的数据，对于可靠性要求不高的应用环境。日常生活中使用的ping命令测试主机是否通信正常，事实上&#39;ping&#39;命令的原理就是向对方主机发送udp","udp不可靠，就没有应用场景。据说qq发送数据就是靠udp发送的，尽管是不可靠的连接，可是还是用了非常多的校验算法保证了数据质量稳定，同也保证了效率。tcp尽管耗时，可是对于稳定性优先的场景，还是应该有限选用tcp，比方浏览器中访问网页用的就是tcp。此外在一些长连接系统里面，比方微信，连接通道应该也是用tcp","udp：这是一个不可靠的传输协议。由于它不排序所要发送的数据段，不负责这些数据段到达目标的顺序（说一它才不可靠）。它在网络的开销要比tcp小很多，因此udp适合用在那些实时性强、允许出错的场合。比如说：即时通讯(msn、qq","ui","uid","ul","undefin","updat","url","us","usag","usb","use:[&#39;vu","usebuiltin","usr/local/cellar/node/12.6.0/bin/nod","v","v.execpath","v.execpath,this._value是我们使用of得到创建的io对象中保存的函数(即返回valu","v8","v8在老生代中主要采用mark","v8最初是作为浏览器的javascript","v8的垃圾回收机制的限制。由于v8需要保证javascript应用逻辑与垃圾回收器所看到的不一样，v8在执行垃圾回收时会阻塞javascript应用逻辑，直到垃圾回收结束再重新执行javascript应用逻辑，这种行为被称为“全停顿”（stop","v8的堆内存为1.5gb，v8做一次小的垃圾回收需要50ms以上，做一次非增量式的垃圾回收甚至要1","val","val,另一个就是节点的指针next","valid","valu","value.then(resolv","value中的funct","var","vertic","view","viewmodel，有view，viewmodel，model三部分组成。view层代表的是视图、模版，负责将数据模型转化为ui展现出来。model层代表的是模型、数据，可以在model层中定义数据修改和操作的业务逻辑。viewmodel层连接model和view","visibl","vm","vm._watcher","vm._watchers.push(thi","vs","vue","vue.extend","vue.j","vueloaderplugin","vuex","vue的diff函数中，会根据新节点的key去对比旧节点数组中的key，从而找到相应旧节点。如果没找到就认为是一个新增节点。而如果没有key，那么就会采用遍历查找的方式去找到对应的旧节点。一种一个map映射，另一种是遍历查找。相比而言。map","vue的eventbu","vue的源码，我这里使用的v2.6.14","w","w&quot;&gt;&lt;/div&gt","w3c官方解释为：bfc它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，block","watch","watcher","watcher创建时，会调用的this.get()，里面会执行根据exporfn","watcher的update方法，进而调用run","weakmap","weakmap提代map","weakmap的话，target和obj存在的就是弱引用关系，当下一次垃圾回收机制执行时，这块内存就会被释放掉。设想一下，如果我们要拷贝的对象非常庞大时，使用map会对内存造成非常大的额外消耗，而且我们需要手动清除map的属性才能释放这块内存，而weakmap会帮我们巧妙化解这个问题。我也经常在某些代码中看到有人使用weakmap来解决循环引用问题，但是解释都是模棱两可的，当你不太了解weakmap的真正作用时。我建议你也不要在面试中写这样的代码，结果只能是给自己挖坑，即使是准备面试，你写的每一行代码也都是需要经过深思熟虑并且非常明白的。能考虑到循环引用的问题，你已经向面试官展示了你考虑问题的全面性，如果还能用weakmap","web","webpack","webpack.config.j","webpack.config.js也需要做出修改，我们只需要删除mode和devserv","webpack.config.js和入口main.j","webpack.config.js里配置postcss","webpack.dev.j","webpack.hotmodulereplacementplugin","webpack.prod.j","webpack5","webpackdemo目录，初始化npm","while(nod","while来实现一个通用的foreach遍历，iteratee是遍历的回掉函数，他可以接收每次遍历的value和index","while的效率是最好的，所以，我们可以想办法把for","width","width:200px","window","window.addeventlistener(&quot;domcontentloaded&quot","window.addeventlistener(&quot;hashchange&quot","window.rout","window.router.init","window、var","woff2?|eot|ttf|otf","world","world&#39","world&quot","wrapper","x","x+1^2^、x+2^2^、x+3^3","x+1、x+2、x+3","x.then","x.then(()=&gt","x.touppercas","x=add","xs","xs.slice(0,3","xs.splice(0,3","xss","xxx","xxx.com?login&#39","xxxb","x、i","x是一个promise那么在new的时候executor就立即执行了，就会执行他的resolve，那么数据就会传递到他的then","y","z","zhuhai","zxcvvv"],"pipeline":["trimmer","stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"前言","body":"阵雨的随笔记录\n我的github博客地址：zhenyuyyk.github.io\n主要记录一些经常用到的知识 \n本文使用gitbook进行编辑\nnode版本：10.12.0\nnpm install -g gitbook-cli //安装gitbook\ngitbook init  //初始化\ngitbook serve  //本地预览\ngitbook build  //打包\ngitbook build ./ ./book  //打包到book文件夹\n"},"js/":{"url":"js/","title":"js知识","body":"js知识\n"},"js/闭包.html":{"url":"js/闭包.html","title":"闭包","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n一.前置条件\n二.什么是闭包\n三.闭包的实际应用\n四.使用闭包的注意点\n\n\n\n\n一.前置条件\n想要理解闭包，你需要先知道变量的作用域\n\n全局作用域：在代码中任何地方都可以访问和修改，比如window、var a=&quot;xx&quot;\n局部作用域：在函数内部定义的变量，作用域限制在函数内\n块级作用域：ES6增加，let和const，先声明后访问\n\n二.什么是闭包\n什么是闭包，你可能会搜出很多答案....\n《JavaScript高级程序设计》这样描述：\n\n闭包是指有权访问另一个函数作用域中的变量的函数；\n\n《JavaScript权威指南》这样描述：\n\n从技术的角度讲，所有的JavaScript函数都是闭包：它们都是对象，它们都关联到作用域链。\n\n《你不知道的JavaScript》这样描述：\n\n当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数是在当前词法作用域之外执行。\n\n其实三种概念是相通的，我们看下面的例子：\nfunction foo() {\n  let a = 10;\n  function bar() {\n    console.log(a); // 10\n  }\n  return bar;\n}\nlet baz = foo();\nbaz();\n这样就产生了闭包，为啥产生了闭包？\n函数foo中创建了函数bar，并返回了函数bar，并在函数foo作用域外执行了函数bar，当函数bar执行时，访问了foo作用域中的变量a，这就产生了闭包。\n这样也符合上面的三种描述\n三.闭包的实际应用\n我们看一个很经典的for循环中使用定时器延迟打印的问题：\nfor (var i = 1; i &lt;= 10; i++) {\n    setTimeout(function () {\n        console.log(i);\n    }, 1000);\n}\n在这段代码中，我们对其的预期是输出1~10，但却输出10次11。这是因为setTimeout是一个宏任务，当setTimeout执行的时候for循环已经结束了，所以打印出十次11\n知道原因了，如何来解决呢?\n我们可以让i在每次迭代的时候，都产生一个私有的作用域，在这个私有的作用域中保存当前i的值。\nfor (var i = 1; i &lt;= 10; i++) {\n    (function (j) {\n        setTimeout(function () {\n            console.log(j);\n        }, 1000);\n    })(i);\n}\n四.使用闭包的注意点\n\n由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。\n闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。\n\n"},"js/原型和原型链.html":{"url":"js/原型和原型链.html","title":"原型和原型链","body":"原型和原型链\n老生常谈的问题了，先贴几篇博客，等有时间整理下自己的理解。其实说白了，原型链就是复杂点的链表。\nhttps://blog.csdn.net/yuyuking/article/details/88952654\nhttps://juejin.im/post/6844904073133572104\n"},"js/Promise.html":{"url":"js/Promise.html","title":"Promise","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n一、Promise的含义\n二、手写一个Promise\n\n让resolvePromise符合规范\nresolve的也是promise\ncatch方法\n\n三、完整代码\n\n\n\n\n一、Promise的含义\nPromise 是异步编程的一种解决方案，ES6将其写进了语言标准。所谓Promise就是一个容器，里面保存着未来才会结束的事件（通常是一个异步操作）的结果。\nPromise对象有以下两个特点：\n\n对象的状态不受外界影响。Promise对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled/resolved（已成功）、rejected（已失败）。只有异步操作的结果，可以决定当前是哪一种状态，任何其他操作都无法改变这个状态。\n一旦状态改变，就不会再改变，任何时候都可以得到这个结果。Promise对象的状态改变，只有两种可能：从pending变为fulfilled和从pending变为rejected。只要这两种情况发生，状态就凝固了，不会再变了，会一直保持这个结果，这时就称为 resolved（已定型）。如果改变已经发生了，你再对Promise对象添加回调函数，也会立即得到这个结果。\n\nPromise的优点：\n可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数，解决了回调地狱的问题。\n二、手写一个Promise\n智者见者，仁者见仁，不同的人就会有不同的Promise实现，但是大家都必须遵循promise a+ 规范\n那符合规范的一个Promise到底是长什么样的?\n\nPromise是一个类, 类中需要传入一个executor执行器， 默认会立即执行\npromise有内部会提供两个方法，注意不是原型对象上的，这两个方法会传给用户,可以更改promise的状态。\npromise有三个状态 \n等待（PENDING)\n成功（RESOLVED）返回成功的结果，如果不写结果返回undefined\n失败（REJECTED）返回失败的原因，如果不写原因返回undefined\n\n\npromise只会从等待变为成功或者从等待变为失败。\n每个promise实例上都要有一个then方法， 分别是成功和失败的回调。\npromise必须支持异步\n\nok，基于以上所述我们写一个最基本的promise\nconst PENDING = &#39;PENDING&#39;;\nconst RESOLVED = &#39;RESOLVED&#39;;\nconst REJECTED = &#39;REJECTED&#39;;\n\nclass myPromise {\n    constructor(executor) {\n        this.status = PENDING; // 宏变量, 默认是等待态\n        this.value = undefined; // then方法要访问到所以放到this上\n        this.reason = undefined; // then方法要访问到所以放到this上\n        this.onResolvedCallbacks = [];// 专门存放成功的回调函数\n        this.onRejectedCallbacks = [];// 专门存放成功的回调函数\n        let resolve = (value) =&gt; {\n            if (this.status === PENDING) {// 保证只有状态是等待态的时候才能更改状态\n                this.value = value;\n                this.status = RESOLVED;\n                // 需要让成功的方法依次执行\n                this.onResolvedCallbacks.forEach(fn =&gt; fn());\n            }\n        };\n        let reject = (reason) =&gt; {\n            if (this.status === PENDING) {\n                this.reason = reason;\n                this.status = REJECTED;\n                // 需要让失败的方法依次执行\n                this.onRejectedCallbacks.forEach(fn =&gt; fn());\n            }\n        };\n        // 执行executor传入我们定义的成功和失败函数:把内部的resolve和reject传入executor中用户写的resolve, reject\n        try {\n            executor(resolve, reject);\n        } catch(e) {\n            console.log(&#39;catch错误&#39;, e);\n            reject(e); //如果内部出错 直接将error手动调用reject向下传递\n        }\n    }\n    then(onfulfilled, onrejected) {\n        if (this.status === RESOLVED) {\n            onfulfilled(this.value);\n        }\n        if (this.status === REJECTED) {\n            onrejected(this.reason);\n        }\n        // 处理异步的情况\n        if (this.status === PENDING) {\n            // this.onResolvedCallbacks.push(onfulfilled); 这种写法可以换成下面的写法，多包了一层，这叫面向切片编程，可以加上自己的逻辑\n            this.onResolvedCallbacks.push(() =&gt; {\n                // TODO ... 自己的逻辑\n                onfulfilled(this.value);\n            });\n            this.onRejectedCallbacks.push(() =&gt; {\n                // TODO ... 自己的逻辑\n                onrejected(this.reason);\n            });\n        }\n    }\n}\n写点测试代码试试看吧\nlet promise = new myPromise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n        resolve(&#39;xxx&#39;);\n    }, 1000);\n});\n// 发布订阅模式应对异步 支持一个promise可以then多次\npromise.then((res) =&gt; { \n    console.log(&#39;成功的结果1&#39;, res);\n}, (error) =&gt; { \n    console.log(error);\n});\n\npromise.then((res) =&gt; { \n    console.log(&#39;成功的结果2&#39;, res);\n}, (error) =&gt; { \n    console.log(error);\n});\n结果\n成功的结果1 xxx\n成功的结果2 xxx\n到此，我们其实做了很少的工作但已经实现了promise最基本也是最核心的功能了。接下来我们加上链式调用，这里面可能比较绕，但只要我们记住下面几条就会很轻松掌握其中原理：\n\nthen方法返回的必须是一个promise，这样才能保证链式调用。\n如果then内部的回调函数执行结果依然是一个promise那就把这个promise的结果resolve出去。\n任何一个promise必须是resolve之后才能走到它then方法，从而创建下一个的promise。\n什么时候走成功回调？then中返回一个普通值或者一个成功的promise\n什么时候走失败回调？返回一个失败的promise，或者抛出异常\n\n接下来看看代码理解下吧\nconst PENDING = &#39;PENDING&#39;;\nconst RESOLVED = &#39;RESOLVED&#39;;\nconst REJECTED = &#39;REJECTED&#39;;\n\nfunction resolvePromise(promise2, x, resolve, reject) {\n    if((typeof x === &#39;object&#39; &amp;&amp; x != null) || typeof x === &#39;function&#39;) {\n        // 有可能是promise, 如果是promise那就要有then方法\n        let then = x.then;\n        if (typeof then === &#39;function&#39;) { // 到了这里就只能认为他是promise了\n            // 如果x是一个promise那么在new的时候executor就立即执行了，就会执行他的resolve，那么数据就会传递到他的then中\n            then.call(x, y =&gt; {// 当前promise解析出来的结果可能还是一个promise, 直到解析到他是一个普通值\n                resolvePromise(promise2, y, resolve, reject);// resolve, reject都是promise2的\n            }, r =&gt; {\n                reject(r);\n            });\n        } else {\n            // 出现像这种结果 {a: 1, then: 1} \n            resolve(x);\n        }\n    } else {\n        resolve(x);\n    }\n}\n\nclass myPromise {\n    constructor(executor) {\n        this.status = PENDING; // 宏变量, 默认是等待态\n        this.value = undefined; // then方法要访问到所以放到this上\n        this.reason = undefined; // then方法要访问到所以放到this上\n        // 专门存放成功的回调函数\n        this.onResolvedCallbacks = [];\n        // 专门存放成功的回调函数\n        this.onRejectedCallbacks = [];\n        let resolve = (value) =&gt; {\n            if (this.status === PENDING) { // 保证只有状态是等待态的时候才能更改状态\n                this.value = value;\n                this.status = RESOLVED;\n                // 需要让成功的方法一次执行\n                this.onResolvedCallbacks.forEach(fn =&gt; fn());\n            }\n        };\n        let reject = (reason) =&gt; {\n            if (this.status === PENDING) {\n                this.reason = reason;\n                this.status = REJECTED;\n                // 需要让失败的方法一次执行\n                this.onRejectedCallbacks.forEach(fn =&gt; fn());\n            }\n        };\n        // 执行executor 传入成功和失败:把内部的resolve和 reject传入executor中用户写的resolve, reject\n        try {\n            executor(resolve, reject); // 立即执行\n        } catch (e) {\n            console.log(&#39;catch错误&#39;, e);\n            reject(e); //如果内部出错 直接将error 手动调用reject向下传递\n        }\n    }\n    then(onfulfilled, onrejected) {\n        // 为了实现链式调用，创建一个新的promise\n        let promise2 = new myPromise((resolve, reject) =&gt; {\n            if (this.status === RESOLVED) {\n                // 执行then中的方法 可能返回的是一个普通值，也可能是一个promise，如果是promise的话，需要让这个promise执行\n                // 使用宏任务把代码放在一下次执行,这样就可以取到promise2,为什么要取到promise2? 这里在之后会介绍到\n                setTimeout(() =&gt; {\n                    try {\n                        let x = onfulfilled(this.value);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) { // 一旦执行then方法报错就走到下一个then的失败方法中\n                        console.log(e);\n                        reject(e);\n                    }\n                }, 0);\n            }\n            if (this.status === REJECTED) {\n                setTimeout(() =&gt; {\n                    try {\n                        let x = onrejected(this.reason);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) {\n                        reject(e);\n                    }\n                }, 0);\n            }\n            // 处理异步的情况\n            if (this.status === PENDING) {\n                // 这时候executor肯定是有异步逻辑\n                this.onResolvedCallbacks.push(() =&gt; {\n                    setTimeout(() =&gt; {\n                        try {\n                            let x = onfulfilled(this.value);\n                            // 注意这里传入的是promise2的resolve和reject\n                            resolvePromise(promise2, x, resolve, reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    }, 0);\n                });\n                this.onRejectedCallbacks.push(() =&gt; {\n                    setTimeout(() =&gt; {\n                        try {\n                            let x = onrejected(this.reason);\n                            resolvePromise(promise2, x, resolve, reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    }, 0);\n                });\n            }\n        });\n\n        return promise2;\n    }\n}\n主要就是多了resolvePromise这么一个函数，用来递归处理then内部回调函数执行后的结果，它有4个参数：\n\npromise2: 就是新生成的promise，这里至于为什么要把promise2传过来后面会介绍。\nx: 我们要处理的目标\nresolve: promise2的resolve, 执行之后promise2的状态就变为成功了，就可以在它的then方法的成功回调中拿到最终结果。\nreject: promise2的reject, 执行之后promise2的状态就变为失败，在它的then方法的失败回调中拿到失败原因。\n\n到了这里基本上完整的Promise已经实现了，接下来我们做一些完善工作。\n让resolvePromise符合规范\n上面曾问到resolvePromise第一个参数promise2到底有什么用？其实很简单就是为了符合promise a+ 规范。下面我们来完善resolvePromise\nfunction resolvePromise(promise2, x, resolve, reject) {\n    // 1)不能引用同一个对象 可能会造成死循环\n    if (promise2 === x) {\n        return reject(new TypeError(&#39;[TypeError: Chaining cycle detected for promise #&lt;Promise&gt;]----&#39;));\n    }\n    let called;// promise的实现可能有多个，但都要遵循promise a+规范，我们自己写的这个promise用不上called,但是为了遵循规范才加上这个控制的，因为别人写的promise可能会有多次调用的情况。\n    // 2)判断x的类型，如果x是对象或者函数，说明x有可能是一个promise，否则就不可能是promise\n    if((typeof x === &#39;object&#39; &amp;&amp; x != null) || typeof x === &#39;function&#39;) {\n        // 有可能是promise promise要有then方法\n        try {\n            // 因为then方法有可能是getter来定义的, 取then时有风险，所以要放在try...catch...中\n            // 别人写的promise可能是这样的\n            // Object.defineProperty(promise, &#39;then&#39;, {\n            //     get() {\n            //         throw new Error();\n            //     }\n            // })\n            let then = x.then; \n            if (typeof then === &#39;function&#39;) { // 只能认为他是promise了\n                // x.then(()=&gt;{}, ()=&gt;{}); 不要这么写，以防以下写法造成报错， 而且也可以防止多次取值\n                // let obj = {\n                //     a: 1,\n                //     get then() {\n                //         if (this.a++ == 2) {\n                //             throw new Error();\n                //         }\n                //         console.log(1);\n                //     }\n                // }\n                // obj.then;\n                // obj.then\n\n                // 如果x是一个promise那么在new的时候executor就立即执行了，就会执行他的resolve，那么数据就会传递到他的then中\n                then.call(x, y =&gt; {// 当前promise解析出来的结果可能还是一个promise, 直到解析到他是一个普通值\n                    if (called) return;\n                    called = true;\n                    resolvePromise(promise2, y, resolve, reject);// resolve, reject都是promise2的\n                }, r =&gt; {\n                    if (called) return;\n                    called = true;\n                    reject(r);\n                });\n            } else {\n                // {a: 1, then: 1} \n                resolve(x);\n            }\n        } catch(e) {// 取then出错了 有可能在错误中又调用了该promise的成功或则失败\n            if (called) return;\n            called = true;\n            reject(e);\n        }\n    } else {\n        resolve(x);\n    }\n}\n对于1）不能引用同一个对象 可能会造成死循环，我们举个例子：\nlet promise = new myPromise((resolve, reject) =&gt; {\n    resolve(&#39;hello&#39;);\n});\nlet promise2 = promise.then(() =&gt; {\n    return promise2;\n});\npromise2.then(() =&gt; {}, (err) =&gt; {\n    console.log(err);\n});\n这样就会报错，因为promise的then方法执行的时候创建了promise2，这个时候promise2状态是pending， 而成功回调里又返回promise2,既然返回的结果是一个promise那就继续解析尝试在它的then方法中拿到这个promise的结果，此时promise2的状态依然是pending，那么执行promise2.then方法只会添加订阅，而一直得不到resolve, 于是自己等待自己就死循环了。\nresolve的也是promise\n有这么一种情况比如\nnew Promise((resolve, reject) =&gt; {\n    resolve(new Promise((resolve, reject) =&gt; {\n        resolve(&#39;hello&#39;);\n    }));\n});\n我们上面实现的代码就无法完成这么一个操作了，修改很简单\nlet resolve = (value) =&gt; {\n    // 判断value的值\n    if (value instanceof Promise) {\n        value.then(resolve, reject);//resolve和reject都是当前promise的， 递归解析直到是普通值, 这里的resolve,reject都取的到，因为resolve的执行是在这两个函数执行之后，这里递归是防止value也是一个promise\n        return;\n    }\n    if (this.status === PENDING) { // 保证只有状态是等待态的时候才能更改状态\n        this.value = value;\n        this.status = RESOLVED;\n        // 需要让成功的方法一次执行\n        this.onResolvedCallbacks.forEach(fn =&gt; fn());\n    }\n};\ncatch方法\ncatch方法其实就是没有成功回调的then方法，这个很好理解，因为一旦失败之后就会调用reject,最终都会走到then方法的失败回调中，只是简单的把then方法换个名字而已。\ncatch(errCallback) {\n    return this.then(null, errCallback);\n}\n三、完整代码\n\nconst PENDING = &#39;PENDING&#39;;\nconst RESOLVED = &#39;RESOLVED&#39;;\nconst REJECTED = &#39;REJECTED&#39;;\n\nfunction resolvePromise(promise2, x, resolve, reject) {\n    if (promise2 === x) {\n        return reject(new TypeError(&#39;[TypeError: Chaining cycle detected for promise #&lt;Promise&gt;]----&#39;));\n    }\n    let called;\n    if((typeof x === &#39;object&#39; &amp;&amp; x != null) || typeof x === &#39;function&#39;) {\n        try {\n            let then = x.then; \n            if (typeof then === &#39;function&#39;) { \n                then.call(x, y =&gt; {\n                    if (called) return;\n                    called = true;\n                    resolvePromise(promise2, y, resolve, reject);\n                }, r =&gt; {\n                    if (called) return;\n                    called = true;\n                    reject(r);\n                });\n            } else {\n                resolve(x);\n            }\n        } catch(e) {\n            if (called) return;\n            called = true;\n            reject(e);\n        }\n    } else {\n        resolve(x);\n    }\n}\n\nclass myPromise {\n    constructor(executor) {\n        this.status = PENDING; \n        this.value = undefined; \n        this.reason = undefined; \n        this.onResolvedCallbacks = [];\n        this.onRejectedCallbacks = [];\n        let resolve = (value) =&gt; {\n            if (value instanceof Promise) {\n                value.then(resolve, reject);\n                return;\n            }\n            if (this.status === PENDING) { \n                this.value = value;\n                this.status = RESOLVED;\n                this.onResolvedCallbacks.forEach(fn =&gt; fn());\n            }\n        };\n        let reject = (reason) =&gt; {\n            if (this.status === PENDING) {\n                this.reason = reason;\n                this.status = REJECTED;\n                this.onRejectedCallbacks.forEach(fn =&gt; fn());\n            }\n        };\n        try {\n            executor(resolve, reject); \n        } catch (e) {\n            reject(e);\n        }\n    }\n    then(onfulfilled, onrejected) {\n        onfulfilled = typeof onfulfilled === &#39;function&#39; ? onfulfilled : v =&gt; v;\n        onrejected = typeof onrejected === &#39;function&#39; ? onrejected : error =&gt; { throw error };\n        let promise2 = new Promise((resolve, reject) =&gt; {\n            if (this.status === RESOLVED) {\n                setTimeout(() =&gt; {\n                    try {\n                        let x = onfulfilled(this.value);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) { \n                        console.log(e);\n                        reject(e);\n                    }\n                }, 0);\n            }\n            if (this.status === REJECTED) {\n                setTimeout(() =&gt; {\n                    try {\n                        let x = onrejected(this.reason);\n                        resolvePromise(promise2, x, resolve, reject);\n                    } catch (e) {\n                        reject(e);\n                    }\n                }, 0);\n            }\n            if (this.status === PENDING) {\n                this.onResolvedCallbacks.push(() =&gt; {\n                    setTimeout(() =&gt; {\n                        try {\n                            let x = onfulfilled(this.value);\n                            resolvePromise(promise2, x, resolve, reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    }, 0);\n                });\n                this.onRejectedCallbacks.push(() =&gt; {\n                    setTimeout(() =&gt; {\n                        try {\n                            let x = onrejected(this.reason);\n                            resolvePromise(promise2, x, resolve, reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    }, 0);\n                });\n            }\n        });\n\n        return promise2;\n    }\n    catch(errCallback) {\n        return this.then(null, errCallback);\n    }\n}\n"},"js/前端路由.html":{"url":"js/前端路由.html","title":"前端路由","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n一、单页面应用与前端路由\n二、前端路由的实现\n\n1、hash（哈希路由）\n2、history模式\n3、hash vs history\n\n\n\n\n\n一、单页面应用与前端路由\n在传统的 Web 开发中，浏览器根据地址栏的 URL 向服务器发送一个 HTTP 请求，服务器根据 URL 返回一个 HTML 页面。这种情况下，一个 URL 对应一个 HTML 页面，\n一个 Web 应用包含很多 HTML 页面，这样的应用就是多页面应用；在多页面应用中，页面路由的控制由服务器负责，这种路由方式称为后端路由。\n但这样做每次切换页面都要向服务器发送一遍请求，存在一定的浪费，同时随着前后端分离和 MVVM 概念的兴起及前端工程化的发展，出现了一种新的开发方式，SPA 单页应用。\n单页应用的意思是只有一个页面，是无刷新的，看到的页面之间的跳转其实只是组件的切换，同时 URL 也要相应的变化，为了实现这种单页应用，出现了前端路由。\n二、前端路由的实现\n路由就是 URL 到函数的映射。可以说当URL 发生变化的时候不向服务器发送请求，而是去执行一个控制 UI 组件的函数。主要实现方式有两种：\n\nhash\nhistory\n\n1、hash（哈希路由）\n在一个 URL 的组成中，#号包括#号后边的部分称为 hash。在浏览器中，可以通过location.hash获取到。#代表网页中的一个位置，其右边的字符，就是该位置的标识符。\n在hash中 #号是用来指导浏览器动作的，对服务器完全不起作用，HTTP 请求不会带上#号以及它后边的内容。单单改变#号后边的内容，浏览器只会滚动到指定的位置，不会重新加载网页。而且改变 hash 还会改变浏览器的历史记录。我们可以通过onhashchange监听到 hash 的改变来不刷新浏览器触发视图的更新。\n比如：\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;ul&gt;\n    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;white&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;#yellow&quot;&gt;yellow&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;#green&quot;&gt;green&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;script&gt;\n    function Router() {\n        this.routes = {};\n        this.currentUrl = &quot;&quot;;\n    }\n\n    Router.prototype.route = function(path, callback) {\n        this.routes[path] =\n            callback ||\n            function() {\n                console.log(&quot;请为路由绑定处理方法&quot;);\n            };\n    };\n\n    Router.prototype.refresh = function() {\n        console.log(&quot;触发一次 hashchange，hash值为&quot;, location.hash);\n        this.currentUrl = &quot;/&quot; + location.hash.slice(1);\n        // 执行当前路由绑定的方法\n        this.routes[this.currentUrl]();\n    };\n\n    Router.prototype.init = function() {\n        window.addEventListener(&quot;DOMContentLoaded&quot;, this.refresh.bind(this), false);\n        window.addEventListener(&quot;hashchange&quot;, this.refresh.bind(this), false);\n    };\n\n    window.Router = new Router();\n    window.Router.init();\n\n    var content = document.querySelector(&quot;body&quot;);\n    function changeBgColor(color) {\n        content.style.backgroundColor = color;\n    }\n\n    Router.route(&quot;/&quot;, function() {\n        changeBgColor(&quot;white&quot;);\n    });\n    Router.route(&quot;/yellow&quot;, function() {\n        changeBgColor(&quot;yellow&quot;);\n    });\n    Router.route(&quot;/green&quot;, function() {\n        changeBgColor(&quot;green&quot;);\n    });\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n2、history模式\n在 HTML5 规范中，history新增了一下几个 API：\nhistory.pushState();    // 添加新的状态到历史状态栈\nhistory.replaceState(); // 用新的状态代替当前状态\nhistory.state           // 返回当前状态对象\n通过上面两个操作状态的 API，也能够做到：改变 url 的同时，不刷新页面。所以 history 也具备实现路由控制的潜力。\n但是这种方式的 url 是一个完整的如http://www.xxx.com/list/complete ，他每一次改变都会向服务发送一次请求资源(其实我们是没有这个页面地址的)，所以需要服务器端增加一条配置，如果 URL 匹配不到任何静态资源，则应该返回同一个 index.html 页面，这个页面就是我们的主页面。\n3、hash vs history\nhash 模式下，每个 url 都会带有#号，看起来可能不太友好。但是，hash 模式兼容 IE8 及其以上的浏览器。history 模式使用了 HTML5 里边新的 API，看起来会比较友好。但是，仅仅有前端的参与还是不够的，需要后端进行配置，前端的路由要和后端的路由要匹配起来，在刷新浏览器的时候会给后端发送请求，这个时候后台需要对请求的 url，做一个捕捉，后端不存在的 url，统一返回请求根路径时的前端环境，交由前端路由模块处理。\n"},"js/垃圾回收机制.html":{"url":"js/垃圾回收机制.html","title":"垃圾回收机制","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n垃圾回收机制\n\n一、内存\n二、引用计数\n\n1.引用计数缺陷\n\n三、标记-清除算法\n\n1.标记-清楚算法缺陷\n2.常见的内存泄漏\n\n四、JavaScript V8引擎的垃圾回收机制\n\n1.分代回收机制\n2.V8内存限制\n3.V8为什么会有内存限制\n4.V8新生代算法（Scavenge）\n\n晋升\n\n5.V8老生代算法（Mark-Sweep，Mark-Compact）\n\nMark-Sweep(标记- 清除算法)\nMark-Compact(标记-整理算法)\n\n\n\n\n\n\n\n垃圾回收机制\n垃圾回收又称为 GC(Garbage Collecation)。编写 JavaScript 程序时，开发者不需要手工跟踪内存的使用情况，只要按照标准写 JavaScript 代码，JavaScript 程序运行所需内存的分配以及无用内存的回收完全是自动管理。JavaScript 中自动垃圾回收机制的原理为：\n\n找出那些不再使用的变量，然后释放其占用的内存。\n垃圾收集器会按照固定的时间间隔(或预定的收集时间)周期性地执行此操作。\n\n常用到的垃圾回收方式为：\n\n引用计数\n标记清除\n\n一、内存\n要想了解JavaScript的垃圾回收机制，必须要知道内存的概念。JavaScript中的内存分为栈内存与堆内存\n\n基本类型值在内存中占固定大小的空间，因此被保存在栈内存中\n引用类型值是对象，保存在堆内存中。包含引用类型值的变量实际包含并非对象本身，而是指向该对象的指针。一个变量从另一个变量复制引用类型的值时，复制的也是指向该对象的指针。\n\n二、引用计数\n这是最初级的垃圾收集算法，在IE9之前采用。此算法把“对象是否不再需要”简化定义为“对象有没有其他对象引用到它”。如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收。\nfunction test () {\n      var a = {} //  a的引用计数为 0,\n      var b = a // a 被 b 引用 a引用计数为 1\n      let c = a // a 被 c 引用 a引用计数为 2\n      b = null // b 不再引用a a的引用计数减为 1\n      c = null // c不再引用a a的引用计数减为 0 将被回收\n}\n1.引用计数缺陷\n该算法有个最大的缺陷：无法处理循环引用。比如：\nfunction problem(){\n    var a = new Object();\n    var b = new Object();\n    a.test = b;\n    b.test = a;\n}\n上面a,b互相引用,计数不会等于0,内存不会回收,重复调用,会占用大量内存。\n三、标记-清除算法\n此算法可以分为两个阶段，一个是标记阶段（mark），一个是清除阶段(sweep)。\n\n标记阶段，垃圾回收器会从根对象开始遍历。每一个可以从根对象访问到的对象都会被添加一个标识，于是这个对象就被标识为可到达对象。\n清除阶段，垃圾回收器会对堆内存从头到尾进行线性遍历，如果发现有对象没有被标识为可到达对象，那么就将此对象占用的内存回收，并且将原来标记为可到达对象的标识清除，以便进行下一次垃圾回收操作。\n\n简单来说就是：把所有活动对象做上标记,把没有标记（也就是非活动对象）销毁\n  \n1.标记-清楚算法缺陷\n\n那些无法从根对象查询到的对象都将被清除\n垃圾收集后有可能会造成大量的内存碎片，像上面的图片所示，垃圾收集后内存中存在三个内存碎片，假设一个方格代表1个单位的内存，如果有一个对象需要占用3个内存单位的话，那么就会导致Mutator一直处于暂停状态，而Collector一直在尝试进行垃圾收集，直到Out of Memory。\n\n2.常见的内存泄漏\nFoo 被调用时, this 指向全局变量(window),相当于与是全局变量,变量不会被回收\nfunction test() {\n    this.test = &quot;lala&quot;;\n}\nfoo();\n当节点被干掉,定时器还是会不停执行\nsetInterval(function() {\n    var node = document.getElementById(&#39;div&#39;);\n    if(node) {\n        node.innerHTML = &quot;!.......&quot;\n    }\n}, 5000);\n闭包\nvar add = (function () {\n    var num = 0;\n    return function () {\n        return ++num;\n    };\n  })();\nconsole.log(add());\nconsole.log(add());\nconsole.log(add());\n四、JavaScript V8引擎的垃圾回收机制\n在JavaScript脚本中，绝大多数对象的生存期很短，只有部分对象的生存期较长。所以，V8 中的垃圾回收主要使用的是 分代回收 (Generational collection)机制。\n1.分代回收机制\nV8 引擎将保存对象的 堆 (heap) 进行了分代:\n\n对象最初会被分在 新生区(New Space) (1~8M)，新生区的内存分配只需要保有一个指向内存区的指针，不断根据内存大小进行递增，当指针达到新生区的末尾，会有一次垃圾回收清理(小周期)，清理掉新生区中不再活跃的死对象。\n对于超过 2 个小周期的对象，则需要将其移动至 老生区(Old Space)。老生区在 标记-清除 或 标记-紧缩 的过程(大周期) 中进行回收。\n\n大周期进行的并不频繁。一次大周期通常是在移动足够多的对象至老生区后才会发生。\n2.V8内存限制\n在node中javascript能使用的内存是有限制的\n\n\n64位系统下约为1.4GB。\n32位系统下约为0.7GB。\n\n\n对应到分代内存中，默认情况下。\n\n\n2位系统新生代内存大小为16MB，老生代内存大小为700MB。 \n64位系统下，新生代内存大小为32MB，老生代内存大小为1.4GB。\n\n\n新生代平均分成两块相等的内存空间，叫做semispace，每块内存大小8MB（32位）或16MB（64位）。\n3.V8为什么会有内存限制\n表面上的原因是V8最初是作为浏览器的JavaScript引擎而设计，不太可能遇到大量内存的场景。\n而深层次的原因则是由于V8的垃圾回收机制的限制。由于V8需要保证JavaScript应用逻辑与垃圾回收器所看到的不一样，V8在执行垃圾回收时会阻塞JavaScript应用逻辑，直到垃圾回收结束再重新执行JavaScript应用逻辑，这种行为被称为“全停顿”（stop-the-world）。\n若V8的堆内存为1.5GB，V8做一次小的垃圾回收需要50ms以上，做一次非增量式的垃圾回收甚至要1秒以上。\n这样浏览器将在1s内失去对用户的响应，造成假死现象。如果有动画效果的话，动画的展现也将显著受到影响。\n4.V8新生代算法（Scavenge）\n由于垃圾清理发生的比较频繁，清理的过程必须很快。V8 中的清理过程使用的是 Scavenge 算法，按照 经典的 Cheney 算法 实现的。Scavenge 算法的主要过程是：\n\n新生区被分为两个等大小的子区(semi-spaces)：to-space 和 from-space；\n大多数的内存分配都是在 to-space 发生 (某些特定对象是在老生区)；\n当 to-space 耗尽时，交换 to-space 和 from-space, 此时所有的对象都在 from-space；\n然后将 from-space 中活跃的对象复制到 to-space 或者老生区中;\n这些对象被直接压到 to-space，提升了 Cache 的内存局部性，可使内存分配简洁快速。 \n\n  \nScavenge算法的缺点是只能使用堆内存中的一半，但由于它只复制存活的对象，对于生命周期短的场景存活对象只占少部分，所以在时间效率上有着优异的表现。\n晋升\n以上所说的是在纯Scavenge算法中，但是在分代式垃圾回收的前提下，From空间中存活的对象在复制到To空间之前需要进行检查，在一定条件下，需要将存活周期较长的对象移动到老生代中，这个过程称为对象晋升。\n对象晋升的条件有两个:\n\n一种是对象是否经历过Scacenge回收\n\n另外一种情况是当To空间的使用应超过25%时，则这个对象直接晋升到老生代空间中。\n\n\n5.V8老生代算法（Mark-Sweep，Mark-Compact）\n在老生代中的对象，由于存活对象占比较大，再采用Scavenge方式会有两个问题：\n\n一个是存活对象就较多，复制存活对象的效率将会降低；\nscavenge是牺牲空间来换取时间效率的算法，而老生代支持的容量较大，会出现空间资源浪费问题\n\n为此，V8在老生代中主要采用Mark-Sweep和Mark-Compact相结合的方式进行垃圾回收。\nMark-Sweep(标记- 清除算法)\n这个算法上文有提到过，这里再说一下。\n\n标记阶段：对老生代进行第一次扫描，标记活动对象\n清理阶段：对老生代进行第二次扫描，清除未被标记的对象，即清理非活动对象\n\n还遗留一个问题，被清除的对象遍布于各内存地址，产生很多内存碎片。所以在此基础上提出Mark-Compact算法。Mark-Compact(标记-整理算法)\n\n\n由于Mark-Sweep完成之后，老生代的内存中产生了很多内存碎片，若不清理这些内存碎片，如果出现需要分配一个大对象的时候，这时所有的碎片空间都完全无法完成分配，就会提前触发垃圾回收，而这次回收其实不是必要的。\n为了解决内存碎片问题，Mark-Compact被提出，它是在 Mark-Sweep的基础上演进而来的，相比Mark-Sweep，Mark-Compact添加了活动对象整理阶段，将所有的活动对象往一端移动，移动完成后，直接清理掉边界外的内存。\n\n"},"js/浅拷贝和深拷贝.html":{"url":"js/浅拷贝和深拷贝.html","title":"浅拷贝和深拷贝","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n一.浅拷贝\n二.深拷贝\n\n1.JSON.parse(JSON.stringify(obj))\n2.逐步实现一个深拷贝\n\n考虑数组\n循环引用\n性能优化\n其他数据类型\n\n\n\n\n\n\n一.浅拷贝\nObject.assign、contact和扩展运算符等\nObject.assign({}, obj)\nobj.concat(objx)\nvar arr2 = [...arr1]\n\n二.深拷贝\n先给出比较完美的解决方案：lodash的cloneDeep函数\nhttps://github.com/lodash/lodash/\n1.JSON.parse(JSON.stringify(obj))\n乞丐版，但是可以应对大部分的应用场景，缺点也很多，比如\n\n\n无法解决循环引用问题\n无法拷贝特殊的对象和函数，比如：RegExp, Date, Set, Map等在序列化的时候会丢失。\n无法拷贝copyObj对象原型链上的属性和方法\n当数据的层次很深，会栈溢出\n\n\n2.逐步实现一个深拷贝\n实现一个简单的拷贝，我们只需要考虑：\n\n如果是原始类型，无需继续拷贝，直接返回\n如果是引用类型，创建一个新的对象，遍历需要克隆的对象，将需要克隆对象的属性执行深拷贝后依次添加到新对象上。\n\nfunction clone(target) {\n    if (typeof target === &#39;object&#39;) {\n        let cloneTarget = {};\n        for (const key in target) {\n            cloneTarget[key] = clone(target[key]);\n        }\n        return cloneTarget;\n    } else {\n        return target;\n    }\n};\n这是一个最基础版本的深拷贝，但是显然，他还有非常多的缺陷，比如，还没有考虑数组。\n考虑数组\n在上面的版本中，我们的初始化结果只考虑了普通的object，下面我们只需要把初始化代码稍微一变，就可以兼容数组了：\nmodule.exports = function clone(target) {\n    if (typeof target === &#39;object&#39;) {\n        let cloneTarget = Array.isArray(target) ? [] : {};\n        for (const key in target) {\n            cloneTarget[key] = clone(target[key]);\n        }\n        return cloneTarget;\n    } else {\n        return target;\n    }\n};\n循环引用\n我们执行下面这样一个测试用例：\nconst target = {\n    field1: 1,\n    field2: undefined,\n    field3: {\n        child: &#39;child&#39;\n    },\n    field4: [2, 4, 8]\n};\ntarget.target = target;\n很明显，因为递归进入死循环导致栈内存溢出了。原因就是上面的对象存在循环引用的情况，即对象的属性间接或直接的引用了自身的情况：解决循环引用问题，我们可以额外开辟一个存储空间，来存储当前对象和拷贝对象的对应关系，当需要拷贝当前对象时，先去存储空间中找，有没有拷贝过这个对象，如果有的话直接返回，如果没有的话继续拷贝，这样就巧妙化解的循环引用的问题。这个存储空间，需要可以存储key-value 形式的数据，且key 可以是一个引用类型，我们可以选择Map这种数据结构：  \n\n检查map中有无克隆过的对象\n有 - 直接返回\n没有 - 将当前对象作为key，克隆对象作为value进行存储\n继续克隆\n\nfunction clone(target, map = new Map()) {\n    if (typeof target === &#39;object&#39;) {\n        let cloneTarget = Array.isArray(target) ? [] : {};\n        if (map.get(target)) {\n            return map.get(target);\n        }\n        map.set(target, cloneTarget);\n        for (const key in target) {\n            cloneTarget[key] = clone(target[key], map);\n        }\n        return cloneTarget;\n    } else {\n        return target;\n    }\n};\n再来执行上面的测试用例：\n可以看到，执行没有报错，且target属性，变为了一个Circular类型，即循环应用的意思。\n接下来，我们可以使用，WeakMap提代Map来使代码达到画龙点睛的作用。  \nfunction clone(target, map = new WeakMap()) {\n    // ...\n};\n为什么要这样做呢？，先来看看WeakMap的作用：\n\nWeakMap 对象是一组键/值对的集合，其中的键是弱引用的。其键必须是对象，而值可以是任意的。\n\n什么是弱引用呢？\n\n在计算机程序设计中，弱引用与强引用相对，是指不能确保其引用的对象不会被垃圾回收器回收的引用。 一个对象若只被弱引用所引用，则被认为是不可访问（或弱可访问）的，并因此可能在任何时刻被回收。\n\n我们默认创建一个对象：const obj = {}，就默认创建了一个强引用的对象，我们只有手动将obj = null，它才会被垃圾回收机制进行回收，如果是弱引用对象，垃圾回收机制会自动帮我们回收。\n举个例子：  \n如果我们使用Map的话，那么对象间是存在强引用关系的：\nlet obj = { name : &#39;ConardLi&#39;}\nconst target = new Map();\ntarget.set(obj,&#39;code秘密花园&#39;);\nobj = null;\n虽然我们手动将obj，进行释放，然是target依然对obj存在强引用关系，所以这部分内存依然无法被释放。\n再来看WeakMap：\nlet obj = { name : &#39;ConardLi&#39;}\nconst target = new WeakMap();\ntarget.set(obj,&#39;code秘密花园&#39;);\nobj = null;\n如果是WeakMap的话，target和obj存在的就是弱引用关系，当下一次垃圾回收机制执行时，这块内存就会被释放掉。设想一下，如果我们要拷贝的对象非常庞大时，使用Map会对内存造成非常大的额外消耗，而且我们需要手动清除Map的属性才能释放这块内存，而WeakMap会帮我们巧妙化解这个问题。我也经常在某些代码中看到有人使用WeakMap来解决循环引用问题，但是解释都是模棱两可的，当你不太了解WeakMap的真正作用时。我建议你也不要在面试中写这样的代码，结果只能是给自己挖坑，即使是准备面试，你写的每一行代码也都是需要经过深思熟虑并且非常明白的。能考虑到循环引用的问题，你已经向面试官展示了你考虑问题的全面性，如果还能用WeakMap解决问题，并很明确的向面试官解释这样做的目的，那么你的代码在面试官眼里应该算是合格了。  \n性能优化\n在上面的代码中，我们遍历数组和对象都使用了for in这种方式，实际上for in在遍历时效率是非常低的，我们来对比下常见的三种循环for、while、for in的执行效率：\nwhile的效率是最好的，所以，我们可以想办法把for in遍历改变为while遍历。\n我们先使用while来实现一个通用的forEach遍历，iteratee是遍历的回掉函数，他可以接收每次遍历的value和index两个参数：\nfunction forEach(array, iteratee) {\n    let index = -1;\n    const length = array.length;\n    while (++index &lt; length) {\n        iteratee(array[index], index);\n    }\n    return array;\n}\n下面对我们的cloen函数进行改写：当遍历数组时，直接使用forEach进行遍历，当遍历对象时，使用Object.keys取出所有的key进行遍历，然后在遍历时把forEach会调函数的value当作key使用：\nfunction clone(target, map = new WeakMap()) {\n    if (typeof target === &#39;object&#39;) {\n        const isArray = Array.isArray(target);\n        let cloneTarget = isArray ? [] : {};\n\n        if (map.get(target)) {\n            return map.get(target);\n        }\n        map.set(target, cloneTarget);\n\n        const keys = isArray ? undefined : Object.keys(target);\n        forEach(keys || target, (value, key) =&gt; {\n            if (keys) {\n                key = value;\n            }\n            cloneTarget[key] = clone2(target[key], map);\n        });\n\n        return cloneTarget;\n    } else {\n        return target;\n    }\n}\n其他数据类型\n在上面的代码中，我们其实只考虑了普通的object和array两种数据类型，实际上所有的引用类型远远不止这两个，还有很多，下面我们先尝试获取对象准确的类型。\n合理的判断引用类型\n"},"js/函数式编程.html":{"url":"js/函数式编程.html","title":"函数式编程","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n纯函数（Pure Functions）\n\n1、纯函数相同的输入，永远会得到相同的输出\n2、纯函数不会受到外部环境的影响\n\n函数合成（compose）\n函数柯里化（Currying）\n高阶函数 (Higher order function)\n函子（Functor）\n\n为什么需要函子？\n什么是函子？\n常用的几个函子\n\nMaybe函子\nEither函子\nIO函子\n\n\n\n\n\n什么是函数式编程\n函数式编程(Functional Programming,FP)，FP是编程的一种范式，我们常见的编程范式还有面向对象、面向过程。\n\n面向对象编程：就是把现实世界中的事物抽象成编程世界中的类和对象，通过封装、集成和多态来演示事物事件中间的联系\n函数式编程：就是把现实世界中的事物和事物之间的联系抽象到程序世界(对运算过程进行抽象)。这里的“函数”不是指计算机中的函数，而是指数学中的函数，即自变量的映射。\n\n数学函数：\n\n一般的，在一个变化过程中，假设有两个变量 x、y，如果对于任意一个 x 都有唯一确定的一个y和它对应，那么就称 x 是自变量，y 是 x 的函数。x 的取值范围叫做这个函数的定义域，相应 y 的取值范围叫做函数的值域。\n\n换句话说，函数只是两种数值之间的关系：输入和输出。\n尽管每个输入都只会有一个输出，但不同的输入却可以有相同的输出。下图展示了一个合法的从 x 到 y 的函数关系；\n\n与之相反，下面这张图表展示的就不是一种函数关系，因为输入值 5 指向了多个输出：\n  \n纯函数（Pure Functions）\n\n纯函数是这样一种函数，对于相同的输入，永远会得到相同的输出，而且没有任何可观察的副作用。\n\n1、纯函数相同的输入，永远会得到相同的输出\n用splice和slice来解释一下:\nvar xs = [1,2,3,4,5];\n\n// 纯的\nxs.slice(0,3);\n//=&gt; [1,2,3]\n\nxs.slice(0,3);\n//=&gt; [1,2,3]\n\nxs.slice(0,3);\n//=&gt; [1,2,3]\n\n\n// 不纯的\nxs.splice(0,3);\n//=&gt; [1,2,3]\n\nxs.splice(0,3);\n//=&gt; [4,5]\n\nxs.splice(0,3);\n//=&gt; []\nslice收到同样的参数，每次返回相同的值，所以是纯函数\nsplice收到同样的参数，每次返回不同的值，所以不是纯函数\n2、纯函数不会受到外部环境的影响\nconst z = 10;\nadd(x, y) {\n    return x + y;\n}\nadd函数就是一个纯函数，它读取x和y两个参数的值，返回它们的和，并且不会受到全局的z变量的影响\n把这个函数改一下\nconst z = 10;\nadd(x, y) {\n    return x + y + z;\n}\n这个函数就变成了不纯的函数了，因为它返回的值会受到全局的z的影响\n函数式编程具有两个最基本的运算：合成（compose）和柯里化（Currying）。\n函数合成（compose）\n函数合成指的是将代表各个动作的多个函数合并成一个函数。\n打个比方：我要计算一个数 加上 4 再乘以 4 的值，可以这样做\nfunction add4(x) {\n    return x + 4\n}\nfunction multiply4(x) {\n    return x * 4\n}\n\nconsole.log(multiply4(add4(1)))  // 20\n根据函数合成的定义，我们将合成的动作抽象为一个函数 compose，函数 compose 的代码如下\nfunction compose(f,g) {\n    return function(x) {\n        return f(g(x));\n    };\n}\n所以我们可以通过如下的方式得到合成函数\nvar calculate=compose(multiply4,add4);  //执行动作的顺序是从右往左\n\nconsole.log(calculate(1))  // 20\n可以看到，只要往 compose 函数中传入代表各个动作的函数，我们便能得到最终的合成函数。但上述 compose 函数的局限性是只能够合成两个函数，如果需要合成的函数不止两个呢，所以我们需要一个通用的 compose 函数。\n这里我直接给出通用 compose 函数的代码\nfunction compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function () {\n    var i = start - 1;\n    var result = args[start].apply(this, arguments);\n    while (i &gt;= 0){\n      result = args[i].call(this, result);\n      i--;\n    }\n    return result;\n  };\n}\n函数柯里化（Currying）\n在维基百科中对柯里化的定义是：在计算机科学中，柯里化，又译为卡瑞化或加里化，是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数，并且返回接受余下的参数而且返回结果的新函数的技术。\n柯里化函数则是将函数柯里化之后得到的一个新函数。由上述定义可知，柯里化函数有如下两个特性：\n\n接受一个单一参数\n返回接受余下的参数而且返回结果的新函数\n\n比如，我们将以下函数柯里化：\nfunction add(a, b) {\n    return a + b;\n}\n\nconsole.log(add(1, 2)) // 3\n假设函数 add 的柯里化函数是 addCurry，那么从上述定义可知，addCurry(1)(2) 应该实现与上述代码相同的效果，输出 3 。这里我们可以比较容易的知道，addCurry 的代码如下\n// addCurry 是 add 的柯里化函数\nfunction addCurry(a) {\n    return function(b) {\n        return a + b;\n    }\n}\n\nconsole.log(addCurry(1)(2));  // 3\n上面的柯里化函数只能处理add函数，加入有一个共用的 createCurry 能够实现柯里化，那么我们便可以通过下述的方式来得出相同的结果\n// createCurry 返回一个柯里化函数\nvar addCurry=createCurry(add);\n\nconsole.log(addCurry(1)(2));  // 3\n那么，怎么得到实现柯里化的函数 createCurry 呢？这里我直接给出 createCurry 的代码\n// 参数只能从左到右传递\nfunction createCurry(func, arrArgs) {\n    var args=arguments;\n    var funcLength = func.length;\n    var arrArgs = arrArgs || [];\n\n    return function() {\n        var _arrArgs = Array.prototype.slice.call(arguments);\n        var allArrArgs=arrArgs.concat(_arrArgs)\n\n        // 如果参数个数小于最初的func.length，则递归调用，继续收集参数\n        if (allArrArgs.length &lt; funcLength) {\n            return args.callee.call(this, func, allArrArgs);\n        }\n\n        // 参数收集完毕，则执行func\n        return func.apply(this, allArrArgs);\n    }\n}\n我们可以这样使用：\n// createCurry 返回一个柯里化函数\nvar addCurry=createCurry(function(a, b, c) {\n    return a + b + c;\n});\n\nconsole.log(addCurry(1)(2)(3));  // 6\nconsole.log(addCurry(1, 2, 3));  // 6\nconsole.log(addCurry(1, 2)(3));  // 6\nconsole.log(addCurry(1)(2, 3));  // 6\n那么，柯里化有什么用途呢？举个例子～\n现在我们需要实现一个功能，将一个全是数字的数组中的数字转换成百分数的形式。按照正常的逻辑，我们可以按如下代码实现\nfunction getNewArray(array) {\n    return array.map(function(item) {\n        return item * 100 + &#39;%&#39;\n    })\n}\n\nconsole.log(getNewArray([1, 0.2, 3, 0.4]));   // [&#39;100%&#39;, &#39;20%&#39;, &#39;300%&#39;, &#39;40%&#39;]\n而如果通过柯里化的方式来实现\nfunction map(func, array) {\n    return array.map(func);\n}\nvar mapCurry = createCurry(map);\nvar getNewArray = mapCurry(function(item) {\n    return item * 100 + &#39;%&#39;\n})\n\nconsole.log(getNewArray([1, 0.2, 3, 0.4]));   // [&#39;100%&#39;, &#39;20%&#39;, &#39;300%&#39;, &#39;40%&#39;]\n高阶函数 (Higher order function)\n如果一个函数接受函数作为参数，或者返回值为函数，那么该函数就是高阶函数。\n一个简单的高阶函数：\n//一个简单的高阶函数\nfunction add(x,y,f){\n    return f(x)+f(y);\n}\nvar x=add(-5,6,Math.abs);  //-&gt; 11\n数组中常用到的高阶函数\n Array.prototype.map()\n Array.prototype.reduce()\n Array.prototype.filter()\n Array.prototype.sort()\n Array.prototype.find()\n试着创建一个高阶函数：\n假设有一个字符串数组，希望将此数组转换为整数数组，其中每个元素表示原始数组中字符串的长度。\nfunction mapForEach(arr, fn) {\n  const newArray = [];\n  for(let i = 0; i &lt; arr.length; i++) {\n    newArray.push(\n      fn(arr[i])\n    );\n  }\n  return newArray;\n}\nconst lenArray = mapForEach(strArray, function(item) {\n  return item.length;\n});\n// prints [ 10, 6, 3, 4, 1 ]\nconsole.log(lenArray);\n函子（Functor）\n为什么需要函子？\n函数式编程的函数指的就是纯函数，纯函数是没有可观察的副作用。但是副作用是不可避免的，我们只能将副作用控制在可控范围内。函子就是用来控制副作用的容器，除了这些以外，我们还可以通过函子来控制异常和异步操作。\n什么是函子？\n\n是一个对象\n遵守一些特定规则的容器类型，通过一个普通的对象实现，该对象具有map方法，map方法可以运行一个函数对值进行处理(变形关系)\n\n// 函数式编程一般约定，函子有一个of方法，用来生成新的容器\nclass Container {\n    // 此处我们使用static来创建一个静态方法\n    static of(value) {\n        return new Container(value)\n    }\n\n    constructor(value) {\n        this._value = value\n    }\n\n    map(fn) {\n        // 那此处我们也可以直接使用of\n        return Container.of(fn(this._value))\n    }\n}\n// 使用示例\nconst r = Container.of(5)\n            .map(v =&gt; v + 2)\n            .map(v =&gt; v * v)\nconsole.log(r) // =&gt; Container { _value: 49 }\n// 通过以上方式我们实现了更函数式编程的函子\n// 上面我们得到了一个r函子对象，而不是一个值，那我们怎么拿出这个值呢？\n// 其实我们永远不去拿出这个值，它是一直存储在函子对象中的\n总结：\n\n函数式编程的运算不直接操作值，而是由函子完成\n函子就是一个实现了map契约(方法)的对象\n我们可以吧函子想象成一个函子，这个盒子里封装了一个值\n想要处理盒子中的值，我们需要给盒子的map方法传递一个处理函数(纯函数)，由这个函数来对值进行处理\n最终map方法返回一个包含新值的盒子(函子)\n\n常用的几个函子\nMaybe函子\n函子接受各种函数来处理内部容器的值，那么我们就会遇到这样一个问题：容器内部的值可能是一个空值(null/undefined)，而外部函数可能未做空值的处理，这时候就可能报错。\n使用Maybe函子处理空值情况\n    class Maybe {\n        static of(value) {\n            return new Maybe(value)\n        }\n\n        constructor(value) {\n            this._value = value\n        }\n\n        map(fn) {\n            // 使用传递的函数处理内部值时判断下\n            return this.valid() ? Maybe.of(fn(this._value)) : Maybe.of(null)\n        }\n\n        // 创建辅助函数来判断空值\n        valid() {\n            return this._value != null || this._value != undefined\n        }\n    }\n\n    // 测试：不是空值时\n    const r = Maybe.of(&#39;Hello World&#39;)\n        .map(x =&gt; x.toUpperCase())\n        console.log(r) // =&gt; Maybe { _value: &#39;HELLO WORLD&#39; }\n\n    // 测试：是空值时\n    const r = Maybe.of(null)\n        .map(x =&gt; x.toUpperCase())\n        console.log(r) // =&gt; Maybe { _value: null }\nEither函子\n在Maybe函子中我们学习了如何处理函子内部值是空值的情况，此时我们可以控制传入值的异常。那如果我们在调用传入处理函数fn时返回空值时也会出现异常，那我们应该如何处理呢。\nEither函子\n\nEither：两者中的任何一个，类似if...else...的处理\n异常会让函数变得不纯，Either函子可以用来处理异常\n  // Either函子：二选一\n  // 因为是二选一，我们来定义两个函子\n  class Left {\n      static of(value) {\n          return new Left(value)\n      }\n\n      constructor(value) {\n          this._value = value\n      }\n\n      map(fn) {\n          // 此处有所不同\n          // 直接返回当前对象\n          return this\n      }\n  }\n\n  class Right {\n      static of(value) {\n          return new Right(value)\n      }\n\n      constructor(value) {\n          this._value = value\n      }\n\n      map(fn) {\n          return Right.of(fn(this._value))\n      }\n  }\n\n  //创建两个函子看一下不同之处\n  const l = Left.of(12).map(v =&gt; v + 2)\n  const r = Right.of(12).map(v =&gt; v + 2)\n  console.log(l) // =&gt; Left { _value: 12 }\n  console.log(r) // =&gt; Right { _value: 14 }\n\n  // 分析：两处结果不同的原因\n  // Right函子中map我们是做了正常函子做的事情，得到的结果是预期的\n  // Left函子中map我们是直接将当前对象返回，并没有做任何处理，其内部值不会改变\n\n  // Left函子有什么作用？\n  // 对于纯函数来说，相同的输入要有相同的输出，当发生异常时函子也应该给出相同的输出\n  // 因此我们可以使用Left函子来处理异常\n\n  // 使用示例：将字符串转成json，在转换时可能发生异常\n  function parseJSON(str) {\n      try {\n          // 当没有异常时正常处理\n          return Right.of(JSON.parse(str))\n      } catch(e) {\n          // 当出现异常时，我们使用Left函子来保存异常\n          return Left.of({ error: e.message })\n      }\n  }\n  // 使用\n  // 出现异常的\n  const errorP = parseJSON(&#39;{ name: rh }&#39;)\n  console.log(errorP) // =&gt; Left { _value: { error: &#39;Unexpected token n in JSON at position 2&#39; } }\n  const p = parseJSON(&#39;{ &quot;name&quot;: &quot;rh&quot; }&#39;)\n  console.log(p) // =&gt; Right { _value: { name: &#39;rh&#39; } }\n  // 通过输出我们可以看到当出现异常时我们能通过Left函子来处理并存储异常\n  // 当没有异常时Right函子可以正常执行\nIO函子\n\nIO函子中的_value是一个函数，这里是把函数作为值来处理\nIO函子可以把不纯的动作存储到_value中，延迟这个不纯的操作(惰性执行)，包装当前的操作\n把不纯的操作交给调用者来处理\n```\n  const fp = require(&#39;lodash/fp&#39;)\n  class IO {\n  // of函数传入的还是一个值\n  static of(value) {\n      // 此时我们使用IO函子的构造函数\n      return new IO(function() {\n          // 此时我们通过函数将传递进来的值返回\n          return value\n      })\n  }\n  // 此时构造函数里边传入的是一个函数\n  constructor(fn) {\n      this._value = fn\n  }\n\n  map(fn) {\n      // 返回IO，但是此时我们使用的是IO的构造函数\n      // 此时我们使用fp模块中的flowRight将IO函子中存储的value(函数)和map传入的fn进行组合\n      return new IO(fp.flowRight(fn, this._value))\n  }\n  }\n  // 使用\n  // 当前我们使用的是node环境，我们将node中的对象传递进来\n  // 当调用IO的of函数时of函数会将我们传递进来值保存到一个函数中，在使用时再来获取process\n  // 然后使用map来获取属性\n  const io = IO.of(process).map(v =&gt; v.execPath)\n  console.log(io) // =&gt; IO { _value: [Function] }\n  // 通过log我们可以看到我们得到了一个io函子，函子中保存的是一个函数\n  // value中的function是谁呢？我们来看一下合成过程\n  // 1. of方法返回的是io对象，这个io对象中的value存储了一个函数，这个函数返回当前传入的process\n  // 2. map方法返回了一个新的io函子，这个新的io函子中value保存的是经过组合的函数\n  // 3. map方法中组合了fn和this._value,fn是我们传入的v =&gt; v.execPath,this._value是我们使用of得到创建的IO对象中保存的函数(即返回value那个)\n  // 4. 那么我们log中得到的function就是分析3中那俩函数的组合\n  // 获取io对象中的函数\n  const ioFn = io._value\n  console.log(ioFn()) // =&gt; /usr/local/Cellar/node/12.6.0/bin/node (node的执行路径)\n\n\n```\n"},"js/网络安全.html":{"url":"js/网络安全.html","title":"网络安全","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n网络安全\n一、XSS攻击(跨站脚本攻击)\n\n1.存储型攻击\n2.反射型攻击\n3.DOM型攻击\n造成的危害及如何防止\n\n二、CSRF攻击（跨站请求伪造）\n\n1.主动型攻击\n2.被动型攻击\n造成的危害及如何防止\n\n三、服务器端攻击\n\n\n\n网络安全\n前端常见的网络攻击有两种\n一、XSS攻击(跨站脚本攻击)\n\nCross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。\n\n根据攻击的来源，XSS 攻击可分为存储型、反射型和 DOM 型三种\n1.存储型攻击\n存储型攻击常发生在微博论坛等用户发帖、提交文章评论等地方\n其攻击的方式：\n\n将恶意代码提交到数据库\n数据库将其保存\n他用户查看帖子或者评论\n服务端返回恶意代码并被拼接到客户端页面\n恶意代码可能通过自执行或者用户点击执行来弹出广告或者获取用户的cookie等个人隐私并上报到攻击者数据库\n\n2.反射型攻击\n反射型攻击主要发生在一些带有诱导性的链接的按钮邮件等\n其攻击的方式：\n\n攻击者在一些链接的参数中加入恶意代码并诱导用户点击\n用户通过点击将请求参数传入服务端\n服务端获取参数并拼接返回给客户端\n客户端执行恶意代码冒充用户进行权限操作或者盗取用户的cookie等个人隐私并上报攻击者数据库\n\n3.DOM型攻击\nDOM型和反射性都是通过诱导用户点击链接执行，并且都是临时型的，但是反射型属于服务端安全漏洞而DOM型属于客户端安全漏洞\n其攻击的方式：\n\n攻击者构造出特殊的 URL，其中包含恶意代码。\n用户打开带有恶意代码的 URL。\n用户浏览器接收到响应后解析执行，前端 JavaScript 取出 URL 中的恶意代码并执行。\n恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。\n\n造成的危害及如何防止\n造成的危害有：盗取各类用户帐号、控制企业数据、非法转账、强制发送电子邮件\n如何防止：\n\n对用户的输入进行过滤／转码、\n使用 CSP （内容安全策略）让服务器决定浏览器可以加载哪些资源，执行哪些脚本\nHTTP-only Cookie\n验证码：防止脚本冒充用户提交危险操作\n尽量避免三方跨域提交内容到服务端\n\n二、CSRF攻击（跨站请求伪造）\n\nCSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。\n\nCSRF主要是冒用受害者登录凭证发起恶意的增删改并不会窃取受害者隐私信息，\n攻击又分为主动型攻击和被动型攻击\n1.主动型攻击\n攻击方式是：\n\n受害者访问a.com并在自己浏览器留下a.com的登录态\n攻击者诱导受害者访问三方网站b.com\n三方网站b.com植有访问a.com接口的恶意代码（删除/增加/修改等）\n受害者点击b.com时候，b.com带着a.com的登陆凭证冒充受害用户执行对a.com的恶意操作2.被动型攻击\n攻击方式是：\n攻击者在a.com发布带有恶意链接的帖子或者评论（提交对a.com带有增删改的诱导型img/form/a标签）\n当其他拥有登录态的受害者点击该评论的恶意链接冒用受害者登录凭证发起攻击造成的危害及如何防止\n造成的危害有：盗取用户信息、非法转账\n\n如何防止：\n\n从第三方站点发送请求时，禁止发送 Cookie\n验证请求的来源站点\nToken验证\n\n三、服务器端攻击\n服务端的攻击形式有：SQL注入、DNS劫持、DOS攻击\n"},"js/常见知识点整理.html":{"url":"js/常见知识点整理.html","title":"常见知识点整理","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n什么是MVVM？\nCookie、sessionStorage、localStorage\n从输入URL到页面加载的全过程\n数据检测方式\n\n \n\ntypeof\ninstanceof\nObject.prototype.toString.call()\n\n\ncomputed与watch区别\ndata为什么是一个函数\nv-for和v-if不建议用在一起\nkey 的作用\n\n\n\n\n什么是MVVM？\nMVVM拆开来即为Model-View-ViewModel，有View，ViewModel，Model三部分组成。View层代表的是视图、模版，负责将数据模型转化为UI展现出来。Model层代表的是模型、数据，可以在Model层中定义数据修改和操作的业务逻辑。ViewModel层连接Model和View。\n在MVVM的架构下，View层和Model层并没有直接联系，而是通过ViewModel层进行交互。ViewModel层通过双向数据绑定将View层和Model层连接了起来，使得View层和Model层的同步工作完全是自动的。因此开发者只需关注业务逻辑，无需手动操作DOM，复杂的数据状态维护交给MVVM统一来管理。在Vue.js中MVVM的体现：\n\nCookie、sessionStorage、localStorage\n相同点：\n\n存储在客户端\n\n不同点：\n\ncookie数据大小不能超过4k；sessionStorage和localStorage的存储比cookie大得多，可以达到5M+\ncookie设置的过期时间之前一直有效；localStorage永久存储，浏览器关闭后数据不丢失除非主动删除数据；sessionStorage数据在当前浏览器窗口关闭后自动删除\ncookie的数据会自动的传递到服务器；sessionStorage和localStorage数据保存在本地\n\n从输入URL到页面加载的全过程\n\n在浏览器中输入URL\n查找缓存，浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，如果有则显示页面内容。如果没有则进行下一步。\nDNS域名解析：浏览器向DNS服务器发起请求，解析该URL中的域名对应的IP地址。\n建立TCP连接：解析出IP地址后，根据IP地址和默认80端口，和服务器建立TCP连接\n发起HTTP请求：浏览器发起读取文件的HTTP请求，，该请求报文作为TCP三次握手的第三次数据发送给服务器\n服务器响应请求并返回结果：服务器对浏览器请求做出响应，并把对应的html文件发送给浏览器\n关闭TCP连接：通过四次挥手释放TCP连接\n浏览器渲染：客户端（浏览器）解析HTML内容并渲染出来\n构建DOM树：词法分析然后解析成DOM树（dom tree），是由dom元素及属性节点组成，树的根是document对象\n构建CSS规则树：生成CSS规则树（CSS Rule Tree）\n构建render树：Web浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）\n布局（Layout）：计算出每个节点在屏幕中的位置\n绘制（Painting）：即遍历render树，并使用UI后端层绘制每个节点。\n\n\nJS引擎解析过程：调用JS引擎执行JS代码。\n\n数据检测方式\ntypeof\n\n优点：能够快速区分基本数据类型\n缺点：不能将Object、Array和Null区分，都返回object\n\ninstanceof\n\n优点：能够区分Array、Object和Function，适合用于判断自定义的类实例对象\n缺点：Number，Boolean，String基本数据类型不能判断\n\nObject.prototype.toString.call()\n\n优点：精准判断数据类型\n缺点：写法繁琐不容易记，推荐进行封装后使用\n\ncomputed与watch区别\n\ncomputed：计算属性，计算的结果会被缓存，当依赖改变时才会改变。\nwatch：监听属性，监听某个属性的变换，执行一些操作\n\n使用场景：\n\ncomputed：当一个属性受多个属性影响的时候使用，例：购物车商品结算功能 \nwatch：当一条数据影响多条数据的时候使用，例：搜索数据\n\ndata为什么是一个函数\n\n一个组件被复用多次的话，也就会创建多个实例。本质上，这些实例用的都是同一个构造函数。\n如果data是对象的话，对象属于引用类型，会影响到所有的实例。所以为了保证组件不同的实例之间data不冲突，data必须是一个函数。\n\nv-for和v-if不建议用在一起\n-for 的优先级比 v-if 更高，如果要遍历的数组很大，而真正要展示的数据很少时，这将造成很大的性能浪费。\n注意：3.x 版本中 v-if 总是优先于 v-for 生效。\nkey 的作用\n\n为了在diff算法执行时更快的找到对应的节点，提高diff速度，更高效的更新虚拟DOM;\n\n在vue的diff函数中，会根据新节点的key去对比旧节点数组中的key，从而找到相应旧节点。如果没找到就认为是一个新增节点。而如果没有key，那么就会采用遍历查找的方式去找到对应的旧节点。一种一个map映射，另一种是遍历查找。相比而言。map映射的速度更快。\n\n为了在数据变化时强制更新组件，以避免“就地复用”带来的副作用。\n\n当 Vue.js 用 v-for 更新已渲染过的元素列表时，它默认用“就地复用”策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序，而是简单复用此处每个元素，并且确保它在特定索引下显示已被渲染过的每个元素。重复的key会造成渲染错误。\n"},"js/js循环总结.html":{"url":"js/js循环总结.html","title":"js循环总结","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\nmap\nforEach\nfor in\nfor of\n\n\n\nmap\n特性：\n\nmap不改变原数组，会返回新数组\n可以使用break中断循环，可以使用return返回到外层函数\n\n实例：\nlet arr = [1, 3, 4]\nlet newarr = arr.map(i =&gt; {\n    return i += 1;\n    console.log(i);\n})\nconsole.log(arr)//1,3,4---不会改变原数组\nconsole.log(newarr)//[2,4,5]---返回新数组\n\nforEach\n特性：\n\n代码简洁，效率高，不用关心集合下标的问题\n没有返回值\n不能使用break中断循环，不能使用return返回到外层函数\n对于空数组是不会执行回调函数的\n不能使用continue跳过循环中的一个迭代（区别于for循环）,需要用 return 跳过循环中的一个迭代\n\n实例：\nlet arr = [1, 3, 4]\nlet newarr = arr.forEach(i =&gt; {\n    i += 1;\n    console.log(i);//2,4,5\n})\nconsole.log(arr)//[1,3,4]\nconsole.log(newarr)//undefined\n\nfor in\n特性：\n\n可以遍历数组的键名，遍历对象简洁\n\n实例：\nlet person = {name: &quot;小白&quot;, age: 28, city: &quot;北京&quot;}\nlet text = &quot;&quot;\nfor (let i in person) {\n    text += person[i]\n}\nconsole.log(text)\n// 输出结果为：小白28北京\n//其次在尝试一些数组\nlet arry = [1, 2, 3, 4, 5]\nfor (let i in arry) {\n    console.log(arry[i])\n}\n//能输出出来，证明也是可以的，但是不推荐\n\nfor of\n特性：\n\n可遍历map，object,array,set string等,不能遍历对象\n可以使用break,continue和return，不仅支持数组的遍历，还可以遍历类似数组的对象\n\n实例：\nlet arr = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;];\nfor (let item of arr) {\n    console.log(item)\n}//结果为1 2 3 4\n\n``\n"},"htmlcss/":{"url":"htmlcss/","title":"HTML和CSS","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\nHTML和CSS\n\n\n\nHTML和CSS\n"},"htmlcss/常见知识点汇总.html":{"url":"htmlcss/常见知识点汇总.html","title":"常见知识点汇总","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n回流和重绘\n\n \n\n会触发回流/重绘的动作\n如何避免回流/重绘\n\n\nCSS 选择器\nposition 属性的值\n前端盒模型：box-sizing属性\n水平居中\n\n \n\n确定宽度的块级元素\n宽度未知的块级元素\n\n\n垂直居中\n\n \n\n确定宽高的元素\n未知宽高的元素\n\n\n\n\n\n\n回流和重绘\n\n回流：又叫重排，当DOM的变化影响了元素的几何信息，浏览器需要重新计算元素的几何属性，将其安放在界面中的正确位置，这个过程叫做回流。表现为重新生成布局，重新排列元素。\n重绘：当一个元素的外观发生改变，但没有改变布局,重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变\n\n\n『重绘』不一定会出现『回流』，『回流』必然会出现『重绘』。\n\n会触发回流/重绘的动作\n\n添加、删除、更新DOM节点\n通过display: none隐藏一个DOM节点-触发回流和重绘\n通过visibility: hidden隐藏一个DOM节点-只触发重绘，因为没有几何变化\n移动或者给页面中的DOM节点添加动画\n添加一个样式表，调整样式属性\n用户行为，例如调整窗口大小，改变字号，或者滚动。\n\n如何避免回流/重绘\n\n集中改变样式，不要一条一条地修改 DOM 的样式。\n不要把 DOM 结点的属性值放在循环里当成循环里的变量。\n为动画的 HTML 元件使用 fixed 或 absoult 的 position，那么修改他们的 CSS 是不会 回流 的。\n不使用 table 布局。因为可能很小的一个小改动会造成整个 table 的重新布局。\n尽量只修改position：absolute或fixed元素，对其他元素影响不大\n动画开始GPU加速，translate使用3D变化\n提升为合成层,使用 CSS 的 will-change 属性\n\nCSS 选择器\n选择器种类：\n\nd选择器(#myid)\n类选择器(.myclass)\n属性选择器(a[rel=&quot;external&quot;])\n伪类选择器(a:hover, li:nth-child)\n标签选择器(div, h1,p)\n相邻选择器（h1 + p）\n子选择器(ul &gt; li)\n后代选择器(li a)\n通配符选择器(*)\n\n优先级：\n!important &gt; 行内样式&gt;ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性\nposition 属性的值\n\n固定定位 fixed： 元素的位置相对于浏览器窗口是固定位置，即使窗口是滚动的它也不会移动。Fixed 定 位使元素的位置与文档流无关，因此不占据空间。 Fixed 定位的元素和其他元素重叠。\n相对定位 relative： 如果对一个元素进行相对定位，它将出现在它所在的位置上。然后，可以通过设置垂直 或水平位置，让这个元素“相对于”它的起点进行移动。 在使用相对定位时，无论是 否进行移动，元素仍然占据原来的空间。因此，移动元素会导致它覆盖其它框。\n绝对定位 absolute： 绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那 么它的位置相对于。absolute 定位使元素的位置与文档流无关，因此不占据空间。 absolute 定位的元素和其他元素重叠。\n粘性定位 sticky： 元素先按照普通文档流定位，然后相对于该元素在流中的 flow root（BFC）和 containing block（最近的块级祖先元素）定位。而后，元素定位表现为在跨越特定阈值前为相对定 位，之后为固定定位。\n默认定位 Static： 默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声 明）。 inherit: 规定应该从父元素继承 position 属性的值。\n\n前端盒模型：box-sizing属性\n\n【标准盒子模型】 content-box：元素的宽度 = width + padding + border + margin （高度同理）\n【IE 盒子模型】 border-box：元素的宽度 = width + margin （高度同理）。\ninherit：继承父元素的 box-sizing 值。\n\n水平居中\n确定宽度的块级元素\n\nmargin: 0 auto;\n父元素position: relative，子元素margin-left: (父width - 子width）\n\n宽度未知的块级元素\n\ndisplay:table + margin: 0 auto\ndisplay：inline-block和text-align:center\n绝对定位+transform，translateX可以移动本身元素的50%。\ndisplay:flex + justify-content:center\n\n垂直居中\n确定宽高的元素\n\n绝对性定位 + calc 计算偏移量.calc{\nposition: absolute;\nwidth: 200px;\nheight: 200px;\nleft:calc((100% - 200px)/2);\ntop:calc((100% - 200px)/2);\n}\n\n2.绝对定位 + margin:auto.div {\n width:200px;\n height:200px;\n position:absolute;\n top:0;\n right:0;\n bottom:0;\n left:0;\n margin: auto;\n background: skyblue;\n}\n\n\n绝对定位 + margin负值.div {\n position:absolute;\n top:50%;\n left:50%;\n width:200px;\n height: 200px;\n margin-top: -100px;\n margin-left: -100px;\n background:red;\n}\n\n\n绝对定位 + transform 属性\n.div {\n position: absolute; /* 相对定位或绝对定位均可 */\n width:200px;\n height:200px;\n top: 50%;\n left: 50%;\n transform: translate(-50%,-50%);\n background-color: pink;\n}\n\n未知宽高的元素\n\nFlex布局\n.container {\n display: flex;\n align-items: center;/* 垂直居中 */\n justify-content: center; /* 水平居中 */\n height:100vh; /* 父元素高度需设置 */\n}\n\n\ntable-cell 布局\n\n.table-cell {\n    display: table-cell;\n    vertical-align: middle;\n    text-align: center;\n    width: 500px;\n    height: 500px;\n}\n\n"},"htmlcss/BFC.html":{"url":"htmlcss/BFC.html","title":"BFC","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n什么是BFC\n创建BFC的方法\nBFC的规则\nBFC解决了什么问题\n\n\n\n\n什么是BFC\nBFC 全称：Block Formatting Context， 名为 &quot;块级格式化上下文&quot;。\nW3C官方解释为：BFC它决定了元素如何对其内容进行定位，以及与其它元素的关系和相互作用，当涉及到可视化布局时，Block Formatting Context提供了一个环境，HTML在这个环境中按照一定的规则进行布局。\n我们用大白话翻译一下：BFC是一个完全独立的空间，空间里的元素不会影响到外面的布局。\n创建BFC的方法\n\n根元素（）\n浮动元素（元素的 float 不是 none）\n绝对定位元素（元素的 position 为 absolute 或 fixed）\n行内块元素（元素的 display 为 inline-block）\n表格单元格（元素的 display 为 table-cell，HTML表格单元格默认为该值）\n表格标题（元素的 display 为 table-caption，HTML表格标题默认为该值）\n匿名表格单元格元素（元素的 display 为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）\noverflow 计算值(Computed)不为 visible 的块元素\ndisplay 值为 flow-root 的元素\ncontain 值为 layout、content 或 paint 的元素\n弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）\n网格元素（display 为 grid 或 inline-grid 元素的直接子元素）\n多列容器（元素的 column-count 或 column-width (en-US) 不为 auto，包括 column-count 为 1）\ncolumn-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。\n\nBFC的规则\n\n内部的盒子在垂直方向上一个接一个放置，距离由margin决定（即margin不重叠）\n每个元素的左外边距与包含块的左边界相接触（从左向右），即使浮动元素也是如此\nBFC的区域不会与float的元素区域重叠\n计算BFC的高度时，浮动子元素也参与计算\n\nBFC解决了什么问题\n\nmargin重叠问题\n\n假如我想要两个盒子之间距离20px，我这么写：\n&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;\n&lt;div class=&quot;box3&quot;&gt;&lt;/div&gt;\n\n.box2 {\n    margin-bottom: 10px;\n    width: 100px;\n    height: 100px;\n    background-color: red;\n}\n\n.box3 {\n    margin-top: 10px;\n    width: 100px;\n    height: 100px;\n    background-color: red;\n}\n\n结果发现，并没有达到预期，两个盒子的margin重叠了，距离只有10px。\n怎么解决呢？根据上面的第一条，两个不同BFC环境的盒子，他们两的margin才不会重叠，那么我们只需触发box3的BFC就行\n.box3 {\n    margin-bottom: 10px;\n    width: 100px;\n    height: 100px;\n    background-color: red;\n    float: left;\n}\n\n这样就实现了两个盒子之间距离20px\n\nFloat高度塌陷问题\n\n当我们设置浮动的时候，会这么写：\n.box {\n    margin: 100px;\n    width: 100px;\n    height: 100px;\n    background: red;\n    float: left;\n}\n.container {\n    background: #000;\n}\n&lt;div class=&quot;container&quot;&gt;\n    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n会发现container的高度为0，没有撑起来。\n这时候我们根据上面的第四条，计算BFC的高度时，浮动子元素也参与计算，把外层盒子设置BFC即可：\n.container {\n    background: #000;\n    display: inline-block;\n}\n\n\n浮动元素与BFC盒子不重叠\n\n还是看例子：\n&lt;div class=&quot;box2 w&quot;&gt;&lt;/div&gt;\n&lt;div class=&quot;box3 w&quot;&gt;&lt;/div&gt;\n\n.w {\n    width: 100px;\n    height: 100px;\n}\n\n.box2 {\n    float: left; // 触发BFC\n    background: red;\n}\n\n.box3 {\n    background: green;\n}\n\n结果是，因为红色盒子浮动脱离文档流，导致绿色盒子向前推进，导致红色盒子盖住了绿色盒子:\n  \n怎么解决呢？根据上面的第三条，BFC的区域不会与float的元素区域重叠，把绿色盒子设置为BFC盒子就行\n.box3 {\n    background: green;\n    overflow:hidden // 触发BFC\n}\n\n结果：\n  \n"},"frame/":{"url":"frame/","title":"框架","body":"框架\n"},"frame/vue组件传值方式整理.html":{"url":"frame/vue组件传值方式整理.html","title":"vue组件传值方式整理","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\nvue组件传值方式整理\n父子组件传值\n\nprops/$emit\nref与$parent/$children\n\n隔代组件传值（爷孙组件参数互传）\n\n$attrs/$listeners\nprovide/inject\n\n全局传值\n\nEventBus\nVUEX\n\n\n\n\n\nvue组件传值方式整理\n父子组件传值\nprops/$emit\n\n父组件\n\n&lt;template&gt;\n  &lt;div&gt;\n\n    &lt;Children :msg=&quot;msg&quot; @changeMsg=&quot;changeMsg&quot;/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Children from &quot;@/views/assembly/children&quot;;\n\nexport default {\n  components: {\n    Children\n  },\n  name: &quot;parent&quot;,\n  data() {\n    return {\n      msg: &quot;父组件的值&quot;\n    }\n  },\n  methods: {\n    changeMsg(data) {\n      this.msg = data\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n\n子组件\n\n&lt;template&gt;\n  &lt;div&gt;\n\n    &lt;button @click=&quot;clickbtn&quot;&gt;点我改变父组件&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: &quot;children&quot;,\n  props: {\n    msg: {\n      type: String,\n      default: &quot;default&quot;\n    }\n  },\n  data() {\n    return {}\n  },\n  methods: {\n    clickbtn() {\n      let msg = &quot;改变后的值&quot; + Math.ceil(Math.random()*10)\n      this.$emit(&quot;changeMsg&quot;, msg)\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\nref与$parent/$children\n\n父组件\n\n&lt;template&gt;\n  &lt;div&gt;\n\n    &lt;button @click=&quot;changeChildren&quot;&gt;点击改变子元素的值&lt;/button&gt;\n    &lt;Children ref=&quot;children&quot;/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Children from &quot;@/views/assembly/children&quot;;\n\nexport default {\n  components: {\n    Children\n  },\n  name: &quot;parent&quot;,\n  data() {\n    return {\n      msg: &quot;父组件的值&quot;\n    }\n  },\n  methods: {\n    changeChildren() {\n      let msg=&quot;父组件改变子组件&quot;\n      this.$refs.children.setMsg(msg);\n    },\n    childrenValue(nsg){\n      this.msg=nsg\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n\n子组件\n\n&lt;template&gt;\n  &lt;div&gt;\n\n    &lt;button @click=&quot;clickbtn&quot;&gt;点我改变父组件的值&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: &quot;children&quot;,\n  data() {\n    return {\n      childrenMsg: &quot;子元素的值&quot;\n    }\n  },\n  methods: {\n    setMsg(msg) {\n      this.childrenMsg = msg\n    },\n    clickbtn() {\n      let msg=&quot;子组件改变父组件&quot;\n      this.$parent.childrenValue(msg);\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n隔代组件传值（爷孙组件参数互传）\n$attrs/$listeners\n\n爷组件\n\n&lt;template&gt;\n  &lt;div&gt;\n\n\n    &lt;Parent :msg=&quot;msg&quot; @setVal=&quot;setVal&quot;/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Parent from &quot;./parent&quot;\n\nexport default {\n  components: {\n    Parent\n  },\n  name: &quot;grandparent&quot;,\n  data() {\n    return {\n      msg: &quot;我是爷组件的值&quot;,\n      msg2: &quot;接收孙组件的值&quot;\n    }\n  },\n  methods: {\n    setVal(msg) {\n      this.msg2 = msg\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n\n父组件\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;Children v-bind=&quot;$attrs&quot; v-on=&quot;$listeners&quot;/&gt;\n    &lt;!-- $attrs爷传孙，$listeners孙传爷 --&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Children from &quot;./children&quot;;\n\nexport default {\n  components: {\n    Children\n  },\n  name: &quot;parent&quot;,\n  data() {\n    return {}\n  },\n  methods: {}\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n\n孙组件\n\n&lt;template&gt;\n  &lt;div&gt;\n\n\n    &lt;button @click=&quot;toValue&quot;&gt;点击传值给爷组件&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: &quot;children&quot;,\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      msg2: &quot;我是孙组件的值&quot;\n    }\n  },\n  methods: {\n    toValue() {\n      let msg = &quot;孙组建的传值&quot; + Math.ceil(Math.random() * 10)\n      this.$emit(&quot;setVal&quot;, msg)\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\nprovide/inject\n\n提示：provide 和 inject 绑定并不是可响应的。这是刻意为之的。然而，如果你传入了一个可监听的对象，那么其对象的 property 还是可响应的。如果传入的值是字符串，数字，布尔值等基本类型则会无响应！！！\n\n\n祖先组件（所有后代组件都能拿到该值，但传动态值必须是个对象！！！）\n\n&lt;template&gt;\n  &lt;div&gt;\n\n    &lt;Parent /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Parent from &quot;./parent&quot;\n\nexport default {\n  components: {\n    Parent\n  },\n  name: &quot;grandparent&quot;,\n  provide() {\n    return {\n      data: this.dataObj\n    }\n  },\n  data() {\n    return {\n      dataObj: {\n        msg: &#39;这是爷组件的值&#39;,\n        num: 10\n      }\n    }\n  },\n  methods: {}\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n\n后代组件（任意一个后代元素通过该写法都能拿到值）\n\n&lt;template&gt;\n  &lt;div&gt;\n\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  name: &quot;parent&quot;,\n  inject: [&#39;data&#39;],\n  computed: {\n    txt() {\n      return `${this.data.msg}+${this.data.num}+${this.parentMsg}`;\n    }\n  },\n  data() {\n    return {\n      parentMsg: &quot;后代组件&quot;\n    }\n  },\n  methods: {}\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n全局传值\nEventBus\n\n调用完之后必须销毁，否则会出现bug！！\n\n\nsrc/tools/event-bus.js(新建文件)\n\nimport Vue from &#39;vue&#39;\nexport const Bus = new Vue()\n\n事件总线\n\n&lt;template&gt;\n  &lt;div id=&quot;app&quot;&gt;\n    &lt;button @click=&quot;setVal&quot;&gt;点击&lt;/button&gt;\n    &lt;Home&gt;&lt;/Home&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script lang=&quot;ts&quot;&gt;\nimport Vue from &#39;vue&#39;;\nimport {Bus} from &#39;@/tools/event-bus&#39;\nimport Home from &#39;@/views/Home&#39;;\n\nexport default Vue.extend({\n  name: &#39;App&#39;,\n  components: {\n    Home\n  },\n  data() {\n    return {\n      msg: 0\n    }\n  },\n  methods: {\n    setVal() {\n      this.msg++;\n      Bus.$emit(&quot;share&quot;, this.msg);\n    }\n  }\n});\n&lt;/script&gt;\n\n事件接收\n\n&lt;template&gt;\n  &lt;div class=&quot;sun&quot;&gt;\n    &lt;p&gt;&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { Bus } from &#39;@/tools/event-bus&#39;\nexport default {\n  name: &#39;Sun&#39;,\n  data(){\n    return {\n      msg:&#39;&#39;\n    }\n  },\n  methods:{\n    setMsg(){\n      Bus.$on(&quot;share&quot;,(data)=&gt;{\n        this.msg = data;\n      })\n    }\n  },\n  created() {\n    this.setMsg();\n  },\n  destroyed(){\n    Bus.$off(&quot;share&quot;);\n  }\n}\n&lt;/script&gt;\nVUEX\n不在这展开说了，具体使用方法很多博客，官网也有示例\n"},"frame/webpack5工程化示例.html":{"url":"frame/webpack5工程化示例.html","title":"webpack5工程化示例","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n一、初始化项目\n\n1. 新建webpackdemo目录，初始化npm\n2. 安装webpack包\n3. 创建配置webpack.config.js和入口main.js\n4. 安装插件html-webpack-plugin\n5.引用css\n6.为css添加浏览器前缀\n7.把css样式从js文件中提取到单独的css文件中\n\n7. babel转义js文件\n\n8. 图片、音频、字体文件处理\n9.完整配置代码\n\n二、搭建Vue开发环境\n\n1.安装必要依赖\n2.热更新配置\n3.创建一个vue文件\n\n三、区分开发环境和生产环境\n\n\n\n\n一、初始化项目\n1. 新建webpackdemo目录，初始化npm\nnpm init\n2. 安装webpack包\nnpm i -D webpack webpack-cli webpack-dev-server\n3. 创建配置webpack.config.js和入口main.js\n首先新建src目录，并在下面新建一个main.js\n之后新建build文件夹并新建webpack.config.js添加如下配置：\nconst path = require(&#39;path&#39;);\nmodule.exports = {\n    mode: &#39;development&#39;, // 开发模式\n    entry: path.resolve(__dirname, &#39;../src/main.js&#39;), // 入口文件\n    output: {\n        filename: &#39;[name].[hash:8].js&#39;, // [name] 指entry属性名字, 默认为main\n        path: path.resolve(__dirname, &#39;../dist&#39;), // 打包后的目录\n        clean: true, // 打包前清空输出目录，相当于clean-webpack-plugin插件的作用,webpack5新增。\n    }\n}\n\n4. 安装插件html-webpack-plugin\n文件打包好之后,我们不可能每次在html文件中手动引入打包好的js，这时候就需要使用html-webpack-plugin创建html页面，并将打包后的js文件需要引入到html中\nnpm i -D html-webpack-plugin\n我们来测试一下，新建public文件夹，新建index.html文件，更改webpack.config.js配置：\nconst HtmlWebpackPlugin = require(&#39;html-webpack-plugin&#39;)\n\nmodule.exports = {\n    plugins: [\n        new HtmlWebpackPlugin({\n            // 选取一个html作为模版，在dist目录下会生成一个相同的html，之后将打包好的js注入到该html文件\n            template: path.resolve(__dirname, &#39;../public/index.html&#39;)\n        })\n    ]\n}\n\n同时在package.json中添加一行打包命令：\n&quot;build&quot;: &quot;webpack --config build/webpack.config.js&quot;\n运行npm run build，可以看到生成了dist文件夹并在index.html引入了js\n\n5.引用css\n在引入css时也需要一些loader来解析我们的css：\nnpm i -D style-loader css-loader less less-loader\n配置文件如下：\n// webpack.config.js\n\nmodule.exports = {\n    //...省略其他配置\n    module: {\n        rules: [\n            {\n                // 用正则去匹配要用该 loader 转换的 CSS 文件\n                test: /\\.css$/,\n                exclude: path.resolve(__dirname, &#39;node_modules&#39;),\n                use: [&#39;style-loader&#39;, &#39;css-loader&#39;] // 切记从右向左解析原则\n            },\n            {\n                test: /.less$/,\n                exclude: path.resolve(__dirname, &#39;node_modules&#39;),\n                use: [&#39;style-loader&#39;, &#39;css-loader&#39;, &#39;less-loader&#39;] // 从右向左解析原则   \n            }\n        ]\n    }\n}\n\n6.为css添加浏览器前缀\n安装插件：\nnpm i -D postcss-loader autoprefixer\n引入autoprefixer有两种方式：\n(1) 在项目根目录下创建一个postcss.config.js文件，配置如下：\nmodule.exports = {\n    plugins: [require(&#39;autoprefixer&#39;)]  // 引用该插件即可了\n}\n\n(2) 直接在webpack.config.js里配置:\n// webpack.config.js\nmodule.exports = {\n    //...省略其他配置\n    module: {\n        rules: [{\n            test: /\\.less$/,\n            use: [&#39;style-loader&#39;, &#39;css-loader&#39;, {\n                loader: &#39;postcss-loader&#39;,\n                options: {\n                    plugins: [require(&#39;autoprefixer&#39;)]\n                }\n            }, &#39;less-loader&#39;] // 从右向左解析原则\n        }]\n    }\n}\n\n这里我们使用第一种方式，之后在webpack.config.js里配置postcss-loader：\n// webpack.config.js\n\nmodule.exports = {\n//...省略其他配置\n    module: {\n        rules: [\n            {\n                // 用正则去匹配要用该 loader 转换的 CSS 文件\n                test: /\\.css$/,\n                exclude: path.resolve(__dirname, &#39;node_modules&#39;),\n                use: [&#39;style-loader&#39;, &#39;css-loader&#39;, &#39;postcss-loader&#39;] // 切记从右向左解析原则\n            },\n            {\n                test: /.less$/,\n                exclude: path.resolve(__dirname, &#39;node_modules&#39;),\n                use: [&#39;style-loader&#39;, &#39;css-loader&#39;, &#39;postcss-loader&#39;, &#39;less-loader&#39;] // 从右向左解析原则   \n            }\n        ]\n    }\n}\n\n7.把css样式从js文件中提取到单独的css文件中\n安装插件：\nnpm i -D mini-css-extract-plugin\n配置：\nconst MiniCssExtractPlugin = require(&#39;mini-css-extract-plugin&#39;)\nmodule.exports = {\n    //...省略其他配置\n    module: {\n        rules: [\n            {\n                // 用正则去匹配要用该 loader 转换的 CSS 文件\n                test: /\\.css$/,\n                exclude: path.resolve(__dirname, &#39;node_modules&#39;),\n                use: [MiniCssExtractPlugin.loader, &#39;css-loader&#39;, &#39;postcss-loader&#39;] // 切记从右向左解析原则\n            },\n            {\n                test: /.less$/,\n                exclude: path.resolve(__dirname, &#39;node_modules&#39;),\n                use: [MiniCssExtractPlugin.loader, &#39;css-loader&#39;, &#39;postcss-loader&#39;, &#39;less-loader&#39;],\n            }\n        ]\n    },\n    plugins: [\n        new MiniCssExtractPlugin({\n            filename: &quot;[name].[hash:8].css&quot;,\n            chunkFilename: &quot;[id].css&quot;,\n        })\n    ]\n}\n\n测试一下，在src下面新建一个index1.css文件和index2.less文件，并在main.js引入。\n之后运行下`npm run build，可以看到dist下的js和css。发现main.css整合了src下面两个css\n\n7. babel转义js文件\n安装插件：\nnpm i -D babel-loader @babel/preset-env @babel/core @babel/plugin-proposal-decorators\n\nnpm i -D @babel/plugin-transform-arrow-functions @babel/plugin-transform-runtime\nbabel-loader负责将ES6/7/8等语法转换为ES5语法 core-js负责将新的api进行转化，例如promise、Generator、Set、Maps、Proxy等\nwebpack.config.js配置：\nrules: [\n    {\n        test: /\\.m?js$/,\n        exclude: /node_modules/,\n        use: {\n            loader: &#39;babel-loader&#39;,\n            options: {\n                // 缓存，加快babel-loader编译速度\n                cacheDirectory: true,\n                // 一系列插件的集合，包括处理箭头函数等\n                // useBuiltIns corejs 解决es6新增api无法编译问题（只能编译语法，例如箭头函数）\n                presets: [\n                    [&#39;@babel/preset-env&#39;, {useBuiltIns: &#39;usage&#39;, corejs: 3, targets: &#39;defaults&#39;}]\n                ],\n                plugins: [\n                    // 编译箭头函数\n                    &#39;@babel/plugin-transform-arrow-functions&#39;,\n                    // 编译装饰器\n                    [&#39;@babel/plugin-proposal-decorators&#39;, {legacy: true}],\n                    // 编译类，loose true时是赋值法定义属性，false时是使用Object.defineProperty定义属性，后者是默认\n                    [&#39;@babel/plugin-proposal-class-properties&#39;, {loose: false}]\n                ]\n            }\n        }\n    }\n]\n\n8. 图片、音频、字体文件处理\n和css类似，只用添加配置：\n            {\n                test:/\\.svg$/,\n                type:&#39;asset&#39;,\n                generator:{\n                    filename:&quot;icons/[name]--[hash:8].[ext]&quot;\n                }\n            },\n            {\n                test:/\\.(png|jpe?g|gif)(\\?.*)?$/,\n                type:&#39;asset&#39;,\n                generator: {\n                    filename: &#39;imgs/[name]--[hash:8].[ext]&#39;\n                }\n            },\n            {\n                test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n                type: &#39;asset&#39;,\n                generator: {\n                    filename: &#39;media/[name]--[hash:8].[ext]&#39;\n                }\n            },\n            {\n                test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n                type: &#39;asset&#39;,\n                generator: {\n                    filename: &#39;fonts/[name]--[hash:8].[ext]&#39;\n                }\n            }\n\n9.完整配置代码\n\n  **完整代码**\n\n```javascript\nconst path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n    mode: 'development', // 开发模式\n    entry: path.resolve(__dirname, '../src/main.js'), // 入口文件\n    output: {\n        filename: '[name].[hash:8].js', // [name] 指entry属性名字, 默认为main\n        path: path.resolve(__dirname, '../dist'), // 打包后的目录\n        clean: true, // 打包前清空输出目录，相当于clean-webpack-plugin插件的作用,webpack5新增。\n    },\n    plugins: [\n        new HtmlWebpackPlugin({\n            // 选取一个html作为模版，在dist目录下会生成一个相同的html，之后将打包好的js注入到该html文件\n            template: path.resolve(__dirname, '../public/index.html')\n        }),\n        new MiniCssExtractPlugin({\n            filename: \"[name].[hash:8].css\",\n            chunkFilename: \"[id].css\",\n        })\n    ],\n    module: {\n        rules: [\n            {\n                // 用正则去匹配要用该 loader 转换的 CSS 文件\n                test: /\\.css$/,\n                exclude: path.resolve(__dirname, 'node_modules'),\n                use: [MiniCssExtractPlugin.loader, 'css-loader', 'postcss-loader'] // 切记从右向左解析原则\n            },\n            {\n                test: /.less$/,\n                exclude: path.resolve(__dirname, 'node_modules'),\n                use: [MiniCssExtractPlugin.loader, 'css-loader', 'postcss-loader', 'less-loader'],\n            },\n            {\n                test:/\\.svg$/,\n                type:'asset',\n                generator:{\n                    filename:\"icons/[name]--[hash:8].[ext]\"\n                }\n            },\n            {\n                test:/\\.(png|jpe?g|gif)(\\?.*)?$/,\n                type:'asset',\n                generator: {\n                    filename: 'imgs/[name]--[hash:8].[ext]'\n                }\n            },\n            {\n                test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n                type: 'asset',\n                generator: {\n                    filename: 'media/[name]--[hash:8].[ext]'\n                }\n            },\n            {\n                test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n                type: 'asset',\n                generator: {\n                    filename: 'fonts/[name]--[hash:8].[ext]'\n                }\n            },\n            {\n                test: /\\.m?js$/,\n                exclude: /node_modules/,\n                use: {\n                    loader: 'babel-loader',\n                    options: {\n                        // 缓存，加快babel-loader编译速度\n                        cacheDirectory: true,\n                        // 一系列插件的集合，包括处理箭头函数等，配置后是否需要配置plugins? 后面再看\n                        // 2021/5/12 结论：不需要配置其他plugins\n                        // useBuiltIns corejs 解决es6新增api无法编译问题（只能编译语法，例如箭头函数）\n                        presets: [\n                            // ['@babel/preset-env', { targets: 'defaults' }]\n                            ['@babel/preset-env', {useBuiltIns: 'usage', corejs: 3, targets: 'defaults'}]\n                        ],\n                        plugins: [\n                            // 编译箭头函数\n                            '@babel/plugin-transform-arrow-functions',\n                            // 编译装饰器\n                            ['@babel/plugin-proposal-decorators', {legacy: true}],\n                            // 编译类，loose true时是赋值法定义属性，false时是使用Object.defineProperty定义属性，后者是默认\n                            ['@babel/plugin-proposal-class-properties', {loose: false}]\n                        ]\n                    }\n                }\n            }\n        ]\n    }\n};\n```\n\n\n\n二、搭建Vue开发环境\n1.安装必要依赖\nnpm i -D vue-loader vue-template-compiler vue-style-loader\nnpm i -S vue\n\n\nvue-loader 用于解析.vue文件\nvue-template-compiler 用于编译模板\nvue-style-loader 解析样式\n\n\n配置webpack.config.js：\nconst vueLoaderPlugin = require(&#39;vue-loader/lib/plugin&#39;)\nmodule.exports = {\n  // ...\n  module:{\n    rules:[\n      // 这一个loader必须放在最前面\n      {\n        test:/\\.vue$/,\n        use:[&#39;vue-loader&#39;]\n      }\n      // ...\n    ]\n  },\n  resolve:{\n    // 设置路径别名\n    alias:{\n      &#39;vue$&#39;:&#39;vue/dist/vue.runtime.esm.js&#39;,\n      &#39;@&#39;:path.resolve(__dirname,&#39;../src&#39;)\n    },\n    // 尝试按顺序解析这些后缀名。\n    // 如果有多个文件有相同的名字，但后缀名不同，webpack 会解析列在数组首位的后缀的文件 并跳过其余的后缀。\n    extensions:[&#39;*&#39;,&#39;.js&#39;,&#39;.json&#39;,&#39;.vue&#39;]\n  },\n  plugins:[\n    new vueLoaderPlugin()\n  ]\n}\n\n2.热更新配置\n安装 webpack-dev-server 启动一个本地服务并且配置热更新：\nnpm i -D webpack-dev-server\n配置如下：\nconst Webpack = require(&#39;webpack&#39;)\nmodule.exports = {\n  // ...\n  devServer:{\n    port:3000,\n    hot:true\n  },\n  plugins:[\n    new Webpack.HotModuleReplacementPlugin()\n  ]\n}\n\n之后去配置打包命令：\n&quot;dev&quot;: &quot;webpack-dev-server --config build/webpack.config.js --open&quot;\n3.创建一个vue文件\n修改原来的main.js：\n// main.js\nimport Vue from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\n\nnew Vue({\n  render: h =&gt; h(App)\n}).$mount(&#39;#app&#39;)\n\n新建一个App.vue文件:\n&lt;template&gt;\n  &lt;div class=&quot;content&quot;&gt;\n\n    &lt;button @click=&quot;msgChange&quot;&gt;点击&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      msg: &quot;hello world&quot;\n    };\n  },\n  methods: {\n    msgChange() {\n      this.msg = &quot;112233&quot;;\n    }\n  }\n};\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.content {\n  color: aquamarine;\n  display: flex;\n}\n&lt;/style&gt;\n\n修改原来的index.html:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n最后运行npm run dev,查看效果：\n\n三、区分开发环境和生产环境\n实际运用到项目时，需要区分开发环境与生产环境的关系。\n新建两个文件夹\n\nwebpack.dev.js 开发环境使用\nwebpack.prod.js 生产环境使用\nwebpack.config.js 公用配置\n\n使用webpack-merge帮我们merge代码：\nnpm i -D webpack-merge\n// webpack.dev.js\nconst { merge } = require(&#39;webpack-merge&#39;);\nconst common = require(&#39;./webpack.config.js&#39;)\n\nmodule.exports = merge(common, {\n  mode: &#39;development&#39;,\n  devtool: &#39;inline-source-map&#39;,\n  devServer:{\n    port:3000,\n    hot:true\n  }\n});\n\n// webpack.prod.js\nconst { merge } = require(&#39;webpack-merge&#39;);\nconst common = require(&#39;./webpack.config.js&#39;);\n\nmodule.exports = merge(common, {\n  mode: &#39;production&#39;,\n});\n\n原先的webpack.config.js也需要做出修改，我们只需要删除mode和devserver字段就行了\n最后修改package.json中的scripts命令\n&quot;scripts&quot;: {\n    &quot;build&quot;: &quot;webpack --config build/webpack.prod.js&quot;,\n    &quot;dev&quot;: &quot;webpack-dev-server --config build/webpack.dev.js --open&quot;\n  },\n开发环境运行npm run dev,打包npm run build\n"},"design/":{"url":"design/","title":"设计模式","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n设计模式\n\n\n\n设计模式\n"},"design/发布-订阅模式.html":{"url":"design/发布-订阅模式.html","title":"发布-订阅模式","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n发布-订阅模式\n\n现实中的发布－订阅模式\n代码实现\n继续优化\n先发布后订阅和全局事件的命名冲突\n实例\n\n实例一：网站登录\n实例二：vue中的发布订阅模式\n\n优缺点\n发布订阅模式和观察者模式\n\n\n\n\n发布-订阅模式\n发布—订阅模式它定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知。在 JavaScript 开发中，我们一般用事件模型来替代传统的发布—订阅模式。\n现实中的发布－订阅模式\n不论是在程序世界里还是现实生活中，发布—订阅模式的应用都非常之广泛。我们先看一个 现实中的例子。\n小明最近看上了一套房子，到了售楼处之后才被告知，该楼盘的房子早已售罄。好在售楼 MM 告诉小明，不久后还有一些尾盘推出，开发商正在办理相关手续，手续办好后便可以购买。 但到底是什么时候，目前还没有人能够知道。\n小明离开之前，把电话号码留在了售楼处。售楼 MM 答应他，新楼盘一推出就马上发信息通知小明。小红、小强和小龙也是一 样，他们的电话号码都被记在售楼处的花名册上，新楼盘推出的时候，售楼 MM 会翻开花名册，\n遍历上面的电话号码，依次发送一条短信来通知他们。\n在刚刚的例子中，发送短信通知就是一个典型的发布—订阅模式，小明、小红等购买者都是 订阅者，他们订阅了房子开售的消息。售楼处作为发布者，会在合适的时候遍历花名册上的电话 号码，依次给购房者发布消息。\n代码实现\n我们用代码来实现上面的案例\nvar salesOffices = {}; // 定义售楼处\nsalesOffices.clientList = []; // 缓存列表，存放订阅者的回调函数\nsalesOffices.listen = function( fn ){ // 增加订阅者\n this.clientList.push( fn ); // 订阅的消息添加进缓存列表\n}; \nsalesOffices.trigger = function(){ // 发布消息\n for( var i = 0, fn; fn = this.clientList[ i++ ]; ){ \n     fn.apply( this, arguments ); // (2) // arguments 是发布消息时带上的参数\n     // fn( ...arguments )\n }\n};\n\n\n上面的for循环等同于\nfor( var i = 0; i &lt; this.clientList.length; i++ ){\n    let fn = this.clientList[i]\n    fn.apply( this, arguments );\n}\n\narguments 是一个对应于传递给函数的参数的类数组对象 文档\n\n至此，我们已经实现了一个最简单的发布—订阅模式。\n下面我们来进行一些简单的测试：\nsalesOffices.listen(function(price, squareMeter) { // 小明订阅消息\n    console.log(&#39;价格= &#39; + price);\n    console.log(&#39;squareMeter= &#39; + squareMeter);\n});\nsalesOffices.listen(function(price, squareMeter) { // 小红订阅消息\n    console.log(&#39;价格= &#39; + price);\n    console.log(&#39;squareMeter= &#39; + squareMeter);\n});\nsalesOffices.trigger(2000000, 88); // 输出：200 万，88 平方米\nsalesOffices.trigger(3000000, 110); // 输出：300 万，110 平方米\n\n但这里还存在一些问题，比如：\n\n我们看到订阅者接收到了发布者发布的每个消息，虽然小明只想买 88 平方米的房子，但是发布者把 110 平 方米的信息也推送给了小明，这对小明来说是不必要的困扰。\n有时候，我们也许需要取消订阅事件的功能，比如小明突然不想买房子了，为了避免继续接 收到售楼处推送过来的短信，小明需要取消之前订阅的事件。\n\n针对以上问题，我们可以这么解决\n\n增加一个标示 key，让订阅者只订阅自己感兴趣的消息。\n增加取消订阅的事件\n\n直接来看代码：\nvar salesOffices = {}; // 定义售楼处\nsalesOffices.clientList = {}; // 缓存列表，存放订阅者的回调函数\nsalesOffices.listen = function(key, fn) {\n    if (!this.clientList[key]) { // 如果还没有订阅过此类消息，给该类消息创建一个缓存列表\n        this.clientList[key] = [];\n    }\n    this.clientList[key].push(fn); // 订阅的消息添加进消息缓存列表\n};\nsalesOffices.remove = function(key, fn) {\n    var fns = this.clientList[key];\n    if (!fns) { // 如果 key 对应的消息没有被人订阅，则直接返回\n        return false;\n    }\n    if (!fn) { // 如果没有传入具体的回调函数，表示需要取消 key 对应消息的所有订阅\n        fns &amp;&amp; (fns.length = 0);\n    } else {\n        for (var l = fns.length - 1; l &gt;= 0; l--) { // 反向遍历订阅的回调函数列表\n            var _fn = fns[l];\n            if (_fn === fn) {\n                fns.splice(l, 1); // 删除订阅者的回调函数\n            }\n        }\n    }\n};\nsalesOffices.trigger = function() { // 发布消息\n    var key = Array.prototype.shift.call(arguments),\n    // 取出消息类型\n    fns = this.clientList[key]; // 取出该消息对应的回调函数集合\n    if (!fns || fns.length === 0) { // 如果没有订阅该消息，则返回\n        return false;\n    }\n    for (var i = 0, fn; fn = fns[i++];) {\n        fn.apply(this, arguments); // (2) // arguments 是发布消息时附送的参数\n    }\n};\n\nsalesOffices.listen(&#39;squareMeter88&#39;, fn1 = function(price) { // 小明订阅 88 平方米房子的消息\n    console.log(&#39;价格= &#39; + price); // 输出： 2000000 \n});\nsalesOffices.listen(&#39;squareMeter110&#39;,function(price) { // 小红订阅 110 平方米房子的消息\n    console.log(&#39;价格= &#39; + price); // 输出： 3000000 \n});\nsalesOffices.trigger(&#39;squareMeter88&#39;, 2000000); // 发布 88 平方米房子的价格\nsalesOffices.trigger(&#39;squareMeter110&#39;, 3000000); // 发布 110 平方米房子的价格\nsalesOffices.remove(&#39;squareMeter88&#39;, fn1); // 删除小明的订阅\nsalesOffices.trigger(&#39;squareMeter88&#39;, 2000000); // 发布 88 平方米房子的价格，小明不会收到价格提醒\n\n\nArray.prototype.shift.call()作用是方法从数组中删除第一个元素，并返回该元素的值\nremove方法里的for循环不是必须反向遍历，正向也是可以的:\nfor (var l = 0; l &lt; fns.length; l++) { // 反向遍历订阅的回调函数列表\n    var _fn = fns[l];\n    if (_fn === fn) {\n        fns.splice(l, 1); // 删除订阅者的回调函数\n    }\n}\n\n\n继续优化\n现在我们已经看到了如何让售楼处拥有接受订阅和发布事件的功能。假设现在小明又去另一个售楼处买房子，那么这段代码是否必须在另一个售楼处对象上重写一次呢，有没有办法可以让 所有对象都拥有发布—订阅功能呢？ 答案显然是有的，JavaScript\n作为一门解释执行的语言，给对象动态添加职责是理所当然的 事情。 所以我们把发布—订阅的功能提取出来，放在一个单独的对象内：\nvar event = {\n    clientList: [],\n    listen: function(key, fn) {\n        if (!this.clientList[key]) {\n            this.clientList[key] = [];\n        }\n        this.clientList[key].push(fn); // 订阅的消息添加进缓存列表\n    },\n    trigger: function() {\n        var key = Array.prototype.shift.call(arguments),\n        // (1); \n        fns = this.clientList[key];\n        if (!fns || fns.length === 0) { // 如果没有绑定对应的消息\n            return false;\n        }\n        for (var i = 0,\n        fn; fn = fns[i++];) {\n            fn.apply(this, arguments); // (2) // arguments 是 trigger 时带上的参数\n        }\n    },\n    remove: function(key, fn) {\n        var fns = this.clientList[key];\n        if (!fns) { // 如果 key 对应的消息没有被人订阅，则直接返回\n            return false;\n        }\n        if (!fn) { // 如果没有传入具体的回调函数，表示需要取消 key 对应消息的所有订阅\n            fns &amp;&amp; (fns.length = 0);\n        } else {\n            for (var l = fns.length - 1; l &gt;= 0; l--) { // 反向遍历订阅的回调函数列表\n                var _fn = fns[l];\n                if (_fn === fn) {\n                    fns.splice(l, 1); // 删除订阅者的回调函数\n                }\n            }\n        }\n    }\n};\n\n// 定义一个 installEvent 函数，这个函数可以给所有的对象都动态安装发布—订阅功能\nvar installEvent = function(obj) {\n    for (var i in event) {\n        obj[i] = event[i];\n    }\n};\n\n// 我们给售楼处对象 salesOffices 动态增加发布—订阅功能\nvar salesOffices = {};\ninstallEvent(salesOffices);\n\n//测试一下\nsalesOffices.listen(&#39;squareMeter88&#39;,function(price) { // 小明订阅消息\n    console.log(&#39;价格= &#39; + price);\n});\nsalesOffices.listen(&#39;squareMeter100&#39;,function(price) { // 小红订阅消息\n    console.log(&#39;价格= &#39; + price);\n});\nsalesOffices.trigger(&#39;squareMeter88&#39;, 2000000); // 输出：2000000 \nsalesOffices.trigger(&#39;squareMeter100&#39;, 3000000); // 输出：3000000\n\n我们虽然给售楼处对象和登录对象都添加了订阅和发布的功 能，这里还存在两个小问题。\n\n我们给每个发布者对象都添加了 listen 和 trigger 方法，以及一个缓存列表 clientList， 这其实是一种资源浪费。\n小明跟售楼处对象还是存在一定的耦合性，小明至少要知道售楼处对象的名字是 salesOffices，才能顺利的订阅到事件。如果小明还关心 300 平方米的房子，而这套房子的卖家是 salesOffices2，这意味着小明要开 始订阅\nsalesOffices2 对象\n\n其实在现实中，买房子未必要亲自去售楼处，我们只要把订阅的请求交给中介公司，而各大\n房产公司也只需要通过中介公司来发布房子信息。这样一来，我们不用关心消息是来自哪个房产\n公司，我们在意的是能否顺利收到消息。当然，为了保证订阅者和发布者能顺利通信，订阅者和\n发布者都必须知道这个中介公司。\n同样在程序中，发布—订阅模式可以用一个全局的 Event 对象来实现，订阅者不需要了解消\n息来自哪个发布者，发布者也不知道消息会推送给哪些订阅者，Event 作为一个类似“中介者”\n的角色，把订阅者和发布者联系起来。见如下代码：\nvar Event = (function() {\n    var clientList = {},\n    listen, trigger, remove;\n    listen = function(key, fn) {\n        if (!clientList[key]) {\n            clientList[key] = [];\n        }\n        clientList[key].push(fn);\n    };\n    trigger = function() {\n        var key = Array.prototype.shift.call(arguments),\n        fns = clientList[key];\n        if (!fns || fns.length === 0) {\n            return false;\n        }\n        for (var i = 0, fn; fn = fns[i++];) {\n            fn.apply(this, arguments);\n        }\n    };\n    remove = function(key, fn) {\n        var fns = clientList[key];\n        if (!fns) {\n            return false;\n        }\n        if (!fn) {\n            fns &amp;&amp; (fns.length = 0);\n        } else {\n            for (var l = fns.length - 1; l &gt;= 0; l--) {\n                var _fn = fns[l];\n                if (_fn === fn) {\n                    fns.splice(l, 1);\n                }\n            }\n        }\n    };\n    return {\n        listen: listen,\n        trigger: trigger,\n        remove: remove\n    }\n})();\nEvent.listen(&#39;squareMeter88&#39;, function(price) { // 小红订阅消息\n    console.log(&#39;价格= &#39; + price); // 输出：&#39;价格=2000000&#39; \n});\nEvent.trigger(&#39;squareMeter88&#39;, 2000000); // 售楼处发布消息\n\n先发布后订阅和全局事件的命名冲突\n我们所了解到的发布—订阅模式，都是订阅者必须先订阅一个消息，随后才能接收到发布者\n发布的消息。如果把顺序反过来，发布者先发布一条消息，而在此之前并没有对象来订阅它，这\n条消息无疑将消失在宇宙中。\n在某些情况下，我们需要先将这条消息保存下来，等到有对象来订阅它的时候，再重新把消\n息发布给订阅者。就如同 QQ 中的离线消息一样，离线消息被保存在服务器中，接收人下次登录\n上线之后，可以重新收到这条消息。\n为了满足这个需求，我们要建立一个存放离线事件的堆栈，当事件发布的时候，如果此时还\n没有订阅者来订阅这个事件，我们暂时把发布事件的动作包裹在一个函数里，这些包装函数将被\n存入堆栈中，等到终于有对象来订阅此事件的时候，我们将遍历堆栈并且依次执行这些包装函数，\n也就是重新发布里面的事件。当然离线事件的生命周期只有一次，就像 QQ 的未读消息只会被重\n新阅读一次，所以刚才的操作我们只能进行一次。\n全局的发布—订阅对象里只有一个 clinetList 来存放消息名和回调函数，大家都通过它来订\n阅和发布各种消息，久而久之，难免会出现事件名冲突的情况，所以我们还可以给 Event 对象提\n供创建命名空间的功能。具体实现代码如下：\nvar Event = (function() {\n    var global = this,\n    Event, _default = &#39;default&#39;;\n    Event = function() {\n        var _listen, _trigger, _remove, _slice = Array.prototype.slice,\n        _shift = Array.prototype.shift,\n        _unshift = Array.prototype.unshift,\n        namespaceCache = {},\n        _create, find, each = function(ary, fn) {\n            var ret;\n            for (var i = 0,\n            l = ary.length; i &lt; l; i++) {\n                var n = ary[i];\n                ret = fn.call(n, i, n);\n            }\n            return ret;\n        };\n        _listen = function(key, fn, cache) {\n            if (!cache[key]) {\n                cache[key] = [];\n            }\n            cache[key].push(fn);\n        };\n        _remove = function(key, cache, fn) {\n            if (cache[key]) {\n                if (fn) {\n                    for (var i = cache[key].length; i &gt;= 0; i--) {\n                        if (cache[key][i] === fn) {\n                            cache[key].splice(i, 1);\n                        }\n                    }\n                } else {\n                    cache[key] = [];\n                }\n            }\n        };\n        _trigger = function() {\n            var cache = _shift.call(arguments),\n            key = _shift.call(arguments),\n            args = arguments,\n            _self = this,\n            ret,\n            stack = cache[key];\n            if (!stack || !stack.length) {\n                return;\n            }\n            return each(stack,\n            function() {\n                return this.apply(_self, args);\n            });\n        };\n        _create = function(namespace) {\n            var namespace = namespace || _default;\n            var cache = {},\n            offlineStack = [],\n            // 离线事件 \n            ret = {\n                listen: function(key, fn, last) {\n                    _listen(key, fn, cache);\n                    if (offlineStack === null) {\n                        return;\n                    }\n                    if (last === &#39;last&#39;) {\n                        offlineStack.length &amp;&amp; offlineStack.pop()();\n                    } else {\n                        each(offlineStack,\n                        function() {\n                            this();\n                        });\n                    }\n                    offlineStack = null;\n                },\n                one: function(key, fn, last) {\n                    _remove(key, cache);\n                    this.listen(key, fn, last);\n                },\n                remove: function(key, fn) {\n                    _remove(key, cache, fn);\n                },\n                trigger: function() {\n                    var fn, args, _self = this;\n                    _unshift.call(arguments, cache);\n                    args = arguments;\n                    fn = function() {\n                        return _trigger.apply(_self, args);\n                    };\n                    if (offlineStack) {\n                        return offlineStack.push(fn);\n                    }\n                    return fn();\n                }\n            };\n            return namespace ? (namespaceCache[namespace] ? namespaceCache[namespace] : namespaceCache[namespace] = ret) : ret;\n        };\n        return {\n            create: _create,\n            one: function(key, fn, last) {\n                var event = this.create();\n                event.one(key, fn, last);\n            },\n            remove: function(key, fn) {\n                var event = this.create();\n                event.remove(key, fn);\n            },\n            listen: function(key, fn, last) {\n                var event = this.create();\n                event.listen(key, fn, last);\n            },\n            trigger: function() {\n                var event = this.create();\n                event.trigger.apply(this, arguments);\n            }\n        };\n    } ();\n    return Event;\n})();\n\n/************** 先发布后订阅 ********************/\nEvent.trigger( &#39;click&#39;, 1 );\nEvent.listen( &#39;click&#39;, function( a ){\n    console.log( a ); // 输出：1 \n});\n/************** 使用命名空间 ********************/\nEvent.create( &#39;namespace1&#39; ).listen( &#39;click&#39;, function( a ){\n    console.log( a ); // 输出：1 \n});\nEvent.create( &#39;namespace1&#39; ).trigger( &#39;click&#39;, 1 );\nEvent.create( &#39;namespace2&#39; ).listen( &#39;click&#39;, function( a ){\n    console.log( a ); // 输出：2 \n});\nEvent.create( &#39;namespace2&#39; ).trigger( &#39;click&#39;, 2 );\n\n实例\n实例一：网站登录\n假如我们正在开发一个商城网站，网站里有 header 头部、nav 导航、消息列表、购物车等模块。这几个模块的渲染有一个共同的前提条件，就是必须先用 ajax 异步请求获取用户的登录信息。\n这是很正常的，比如用户的名字和头像要显示在 header 模块里，而这两个字段都来自用户登录后\n返回的信息。\n至于 ajax 请求什么时候能成功返回用户信息，这点我们没有办法确定。现在的情节看起来像\n极了售楼处的例子，小明不知道什么时候开发商的售楼手续能够成功办下来。\n但现在还不足以说服我们在此使用发布—订阅模式，因为异步的问题通常也可以用回调函数\n来解决。更重要的一点是，我们不知道除了 header 头部、nav 导航、消息列表、购物车之外，将\n来还有哪些模块需要使用这些用户信息。如果它们和用户信息模块产生了强耦合，比如下面这样\n的形式：\nlogin.succ(function(data) {\n    header.setAvatar(data.avatar); // 设置 header 模块的头像\n    nav.setAvatar(data.avatar); // 设置导航模块的头像\n    message.refresh(); // 刷新消息列表\n    cart.refresh(); // 刷新购物车列表\n});\n\n现在登录模块是我们负责编写的，但我们还必须了解 header 模块里设置头像的方法叫\nsetAvatar、购物车模块里刷新的方法叫 refresh，这种耦合性会使程序变得僵硬，header 模块不\n能随意再改变 setAvatar 的方法名，它自身的名字也不能被改为 header1、header2。 这是针对具\n体实现编程的典型例子，针对具体实现编程是不被赞同的。\n等到有一天，项目中又新增了一个收货地址管理的模块，这个模块本来是另一个同事所写的，\n而此时你正在马来西亚度假，但是他却不得不给你打电话：“Hi，登录之后麻烦刷新一下收货地\n址列表。”于是你又翻开你 3 个月前写的登录模块，在最后部分加上这行代码：\nlogin.succ(function(data) {\n    header.setAvatar(data.avatar);\n    nav.setAvatar(data.avatar);\n    message.refresh();\n    cart.refresh();\n    address.refresh(); // 增加这行代码\n});\n\n我们就会越来越疲于应付这些突如其来的业务要求。\n用发布—订阅模式重写之后，对用户信息感兴趣的业务模块将自行订阅登录成功的消息事件。\n当登录成功时，登录模块只需要发布登录成功的消息，而业务方接受到消息之后，就会开始进行\n各自的业务处理，登录模块并不关心业务方究竟要做什么，也不想去了解它们的内部细节。改善\n后的代码如下：\n$.ajax( &#39;http:// xxx.com?login&#39;, function(data){ // 登录成功\n login.trigger( &#39;loginSucc&#39;, data); // 发布登录成功的消息\n});\n\n各模块监听登录成功的消息：\nvar header = (function() { // header 模块\n    login.listen(&#39;loginSucc&#39;,\n    function(data) {\n        header.setAvatar(data.avatar);\n    });\n    return {\n        setAvatar: function(data) {\n            console.log(&#39;设置 header 模块的头像&#39;);\n        }\n    }\n})();\n\n如上所述，我们随时可以把 setAvatar 的方法名改成 setTouxiang。如果有一天在登录完成之\n后，又增加一个刷新收货地址列表的行为，那么只要在收货地址模块里加上监听消息的方法即可，\n而这可以让开发该模块的同事自己完成，你作为登录模块的开发者，永远不用再关心这些行为了。\n实例二：vue中的发布订阅模式\n我们都知道vue是采用数据劫持结合和发布者-订阅者模式的方式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发响应的监听回调。\n我们来看一下vue源码中是如何使用发布订阅模式的\n首先下载vue的源码，我这里使用的v2.6.14版本。\n然后看到 src/core/observer/ 文件夹，vue双向数据绑定的源码就在这里面了。\n首先打开 index.js, 这里是实现数据劫持的方法observer，主要作用是劫持数据添加上setter，getter。\n我们来看一下 defineReactive 这个函数\nexport function defineReactive (\n  obj: Object,\n  key: string,\n  val: any,\n  customSetter?: ?Function,\n  shallow?: boolean\n) {\n  const dep = new Dep()\n\n  const property = Object.getOwnPropertyDescriptor(obj, key)\n  if (property &amp;&amp; property.configurable === false) {\n    return\n  }\n\n  const getter = property &amp;&amp; property.get\n  const setter = property &amp;&amp; property.set\n  if ((!getter || setter) &amp;&amp; arguments.length === 2) {\n    val = obj[key]\n  }\n\n  let childOb = !shallow &amp;&amp; observe(val)\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      const value = getter ? getter.call(obj) : val\n      if (Dep.target) {\n        dep.depend()\n        if (childOb) {\n          childOb.dep.depend()\n          if (Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      const value = getter ? getter.call(obj) : val\n      if (newVal === value || (newVal !== newVal &amp;&amp; value !== value)) {\n        return\n      }\n      if (process.env.NODE_ENV !== &#39;production&#39; &amp;&amp; customSetter) {\n        customSetter()\n      }\n      if (getter &amp;&amp; !setter) return\n      if (setter) {\n        setter.call(obj, newVal)\n      } else {\n        val = newVal\n      }\n      childOb = !shallow &amp;&amp; observe(newVal)\n      dep.notify()\n    }\n  })\n}\n\n这个方法， 是具体为obj的key值添加装饰器的地方。它会为每个值创建一个dep。之后通过Object.defineProperty，重新添加装饰器。\n在getter中，添加dep.depend方法，set中添加dep.notify方法。\n然后我们再看下dep方法的实现。\n打开 src/core/observer/dep.js\nDep是订阅器，也是连接Observer和Watcher的桥梁：\nlet uid = 0\n\nexport default class Dep {\n  static target: ?Watcher;\n  id: number;\n  subs: Array&lt;Watcher&gt;;\n\n  constructor () {\n    this.id = uid++\n    this.subs = []\n  }\n\n  addSub (sub: Watcher) {\n    this.subs.push(sub)\n  }\n\n  removeSub (sub: Watcher) {\n    remove(this.subs, sub)\n  }\n\n  depend () {\n    if (Dep.target) {\n      Dep.target.addDep(this)\n    }\n  }\n\n  notify () {\n    const subs = this.subs.slice()\n    for (let i = 0, l = subs.length; i &lt; l; i++) {\n      subs[i].update()\n    }\n  }\n}\n\nDep对象比较简单，内部有一个唯一id，用于作为Dep对象的唯一标识。还有一个保存watcher的数组subs，\naddSub添加订阅方法，removeSub取消订阅，notify是通知更新方法，depend是调用了watcher的addDep。\n然后再看Watcher方法\n打开 src/core/observer/watcher.js\nwatcher是观察者，当监听的数据值修改时，执行响应的回调函数：\nlet uid = 0\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nexport default class Watcher {\n  ...\n\n  constructor (\n    vm: Component,\n    expOrFn: string | Function,\n    cb: Function,\n    options?: ?Object,\n    isRenderWatcher?: boolean\n  ) {\n    this.vm = vm\n    if (isRenderWatcher) {\n      vm._watcher = this\n    }\n    vm._watchers.push(this)\n\n    ...\n\n    // parse expression for getter\n    if (typeof expOrFn === &#39;function&#39;) {\n      this.getter = expOrFn\n    } else {\n      this.getter = parsePath(expOrFn)\n      if (!this.getter) {\n        this.getter = noop\n      }\n    }\n    this.value = this.lazy\n      ? undefined\n      : this.get()\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n  get () {\n    pushTarget(this)\n    let value\n    const vm = this.vm\n    try {\n      value = this.getter.call(vm, vm)\n    } catch (e) {\n      if (this.user) {\n        handleError(e, vm, `getter for watcher &quot;${this.expression}&quot;`)\n      } else {\n        throw e\n      }\n    } finally {\n      // &quot;touch&quot; every property so they are all tracked as\n      // dependencies for deep watching\n      if (this.deep) {\n        traverse(value)\n      }\n      popTarget()\n      this.cleanupDeps()\n    }\n    return value\n  }\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   */\n  update () {\n    /* istanbul ignore else */\n    if (this.lazy) {\n      this.dirty = true\n    } else if (this.sync) {\n      this.run()\n    } else {\n      queueWatcher(this)\n    }\n  }\n\n  /**\n   * Scheduler job interface.\n   * Will be called by the scheduler.\n   */\n  run () {\n    if (this.active) {\n      const value = this.get()\n      if (\n        value !== this.value ||\n        // Deep watchers and watchers on Object/Arrays should fire even\n        // when the value is the same, because the value may\n        // have mutated.\n        isObject(value) ||\n        this.deep\n      ) {\n        // set new value\n        const oldValue = this.value\n        this.value = value\n        if (this.user) {\n          const info = `callback for watcher &quot;${this.expression}&quot;`\n          invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info)\n        } else {\n          this.cb.call(this.vm, value, oldValue)\n        }\n      }\n    }\n  }\n  ...\n}\n\n可以看到在Watcher创建时，会调用的this.get()，里面会执行根据expOrFn\n解析出来的getter。在这个getter中会调用相关data的getter，\n来建立数据的双向绑定。同时会调用dep.depend()，添加订阅。\n当相关的数据改变时，会调用watcher的update方法，进而调用run方法。\n我们看到，run中还会调用this.get()来获取修改之后的value值.\n以上就是vue中发布订阅模式的实现。\n除此之外，还有很多场景用到了发布订阅模式，比如vue的eventbus、前端埋点等等。\n优缺点\n优点：\n\n一为时间上的解耦，二为对象之间的解耦。它的应用非常\n广泛，既可以用在异步编程中，也可以帮助我们完成更松耦合的代码编写。发布—订阅模式还可\n以用来帮助实现一些别的设计模式，比如中介者模式。从架构上来看，无论是 MVC 还是 MVVM，\n都少不了发布—订阅模式的参与，而且 JavaScript 本身也是一门基于事件驱动的语言。\n\n缺点：\n\n创建订阅者本身要消耗一定的时间和内存，而 且当你订阅一个消息后，也许此消息最后都未发生，但这个订阅者会始终存在于内存中。\n 另外， 发布—订阅模式虽然可以弱化对象之间的联系，但如果过度使用的话，对象和对象之间的必要联 系也将被深埋在背后，会导致程序难以跟踪维护和理解。特别是有多个发布者和订阅者嵌套到一 起的时候，要跟踪一个 bug 不是件轻松的事情。\n\n发布订阅模式和观察者模式\n上文讲解了发布订阅模式，有很多同学认为发布订阅模式等同于观察者模式，虽然他们本质上都有发布订阅的思想，但是又有一定的区别，所以我们不能将二者完全等同起来。\n观察者模式一般有观察者和被观察者。举个例子：大家在学校上自习的时候，等老师走了有些人会玩手机、吃零食、交头接耳，但是被老师发现可就不好了，所以大家想了一个招，让坐在最后排的同学帮忙“放风”，老师一来就给大家一个手势通知大家，大家就继续装好好学生。\n\n这其实就是一个典型的观察者模式，“放风”的同学是被观察者，玩手机、吃零食的同学是观察者，大家都在观察“放风”同学的手势，一旦老师来了，被观察者就会通知大家。\n\n发布订阅模式里有三种角色：发布者、订阅者、调度器（第三者）。\n观察者模式里只有两个角色：观察者和被观察者。\n\n往更深层次讲：\n\n观察者和被观察者是松耦合的关系。\n发布者和订阅者则完全不存在耦合。\n\n综上：观察者模式和发布订阅模式有一定的区别，并不是完全相等。\n"},"design/适配器模式.html":{"url":"design/适配器模式.html","title":"适配器模式","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n适配器模式\n\n现实中的适配器\n适配器模式的应用\n\n实例一：渲染地图\n实例二：地图城市数据\n\n小结\n\n优点\n缺点\n\n\n\n\n\n适配器模式\n适配器模式的作用是解决两个软件实体间的接口不兼容的问题。使用适配器模式之后，原本\n由于接口不兼容而不能工作的两个软件实体可以一起工作。\n适配器的别名是包装器（wrapper），这是一个相对简单的模式。在程序开发中有许多这样的\n场景：当我们试图调用模块或者对象的某个接口时，却发现这个接口的格式并不符合目前的需求。\n这时候有两种解决办法，第一种是修改原来的接口实现，但如果原来的模块很复杂，或者我们拿\n到的模块是一段别人编写的经过压缩的代码，修改原接口就显得不太现实了。第二种办法是创建\n一个适配器，将原接口转换为客户希望的另一个接口，客户只需要和适配器打交道。\n现实中的适配器\n适配器在现实生活的应用非常广泛，接下来我们来看几个现实生活中的适配器模式。\n\n插头转换器\n电源适配器\nUSB 转接口\n安卓和苹果耳机转换线\n\n......\n适配器模式的应用\n如果现有的接口已经能够正常工作，那我们就永远不会用上适配器模式。适配器模式是一种\n“亡羊补牢”的模式，没有人会在程序的设计之初就使用它。因为没有人可以完全预料到未来的\n事情，也许现在好好工作的接口，未来的某天却不再适用于新系统，那么我们可以用适配器模式\n把旧接口包装成一个新的接口，使它继续保持生命力。\n实例一：渲染地图\n当我们向 googleMap 和 baiduMap 都发出“显示”请求时，googleMap\n和 baiduMap 分别以各自的方式在页面中展现了地图：\nvar googleMap = { \n show: function(){ \n console.log( &#39;开始渲染谷歌地图&#39; ); \n } \n}; \nvar baiduMap = { \n show: function(){ \n console.log( &#39;开始渲染百度地图&#39; ); \n } \n}; \nvar renderMap = function( map ){ \n if ( map.show instanceof Function ){ \n map.show(); \n } \n}; \nrenderMap( googleMap ); // 输出：开始渲染谷歌地图 \nrenderMap( baiduMap ); // 输出：开始渲染百度地图\n\n这段程序得以顺利运行的关键是 googleMap 和 baiduMap 提供了一致的 show 方法，但第三方的\n接口方法并不在我们自己的控制范围之内，假如 第三方(otherMap) 提供的显示地图的方法不叫 show 而叫\ndisplay 呢？\n此时我们可以通过增加 otherMapAdapter 来解决问题\nvar googleMap = { \n show: function(){ \n console.log( &#39;开始渲染谷歌地图&#39; ); \n } \n}; \nvar baiduMap = { \n show: function(){ \n console.log( &#39;开始渲染百度地图&#39; ); \n } \n};\nvar otherMap = {\n    display: function(){\n        console.log( &#39;开始渲染第三方地图&#39; );\n    }\n};\nvar otherMapAdapter = {\n    show: function(){\n        return otherMap.display();\n    }\n};\nvar renderMap = function( map ){ \n if ( map.show instanceof Function ){ \n map.show(); \n } \n}; \nrenderMap( googleMap ); // 输出：开始渲染谷歌地图 \nrenderMap( baiduMap ); // 输出：开始渲染百度地图\nrenderMap( otherMapAdapter ); // 输出：开始渲染第三方地图\n\n实例二：地图城市数据\n。假设我们正在编写一个渲染广东省地图的页面。目前从第三方资源\n里获得了广东省的所有城市以及它们所对应的 ID，并且成功地渲染到页面中：\nvar getGuangdongCity = function(){ \n var guangdongCity = [ \n { \n name: &#39;shenzhen&#39;, \n id: 11, \n }, { \n name: &#39;guangzhou&#39;, \n id: 12, \n } \n ]; \n return guangdongCity; \n}; \nvar render = function( fn ){ \n console.log( &#39;开始渲染广东省地图&#39; ); \n document.write( JSON.stringify( fn() ) ); \n}; \nrender( getGuangdongCity );\n\n利用这些数据，我们编写完成了整个页面，并且在线上稳定地运行了一段时间。但后来发现\n这些数据不太可靠，里面还缺少很多城市。于是我们又在网上找到了另外一些数据资源，这次的\n数据更加全面，但遗憾的是，数据结构和正运行在项目中的并不一致。新的数据结构如下：\nvar guangdongCity = { \n shenzhen: 11, \n guangzhou: 12, \n zhuhai: 13 \n};\n\n除了大动干戈地改写渲染页面的前端代码之外，另外一种更轻便的解决方式就是新增一个数\n据格式转换的适配器：\nvar getGuangdongCity = function(){ \n var guangdongCity = [ \n { \n name: &#39;shenzhen&#39;, \n id: 11, \n }, { \n name: &#39;guangzhou&#39;, \n id: 12, \n } ];\n    return guangdongCity;\n};\nvar render = function( fn ){\n    console.log( &#39;开始渲染广东省地图&#39; );\n    document.write( JSON.stringify( fn() ) );\n};\nvar addressAdapter = function( oldAddressfn ){\n    var address = {},\n        oldAddress = oldAddressfn();\n    for ( var i = 0, c; c = oldAddress[ i++ ]; ){\n        address[ c.name ] = c.id;\n    }\n    return function(){\n        return address;\n    }\n};\nrender( addressAdapter( getGuangdongCity ) );\n\n小结\n优点\n通过使用适配器模式，我们可以最大程度的复用已有的了类和代码。他主要有以下有点：\n\n将目标类和适配者类解耦，通过引入一个适配器类来重用现有的适配者类，而无须修改原有代码\n增加了类的透明性和复用性，将具体的实现封装在适配者类中，对于客户端类来说是透明的，而且提高了适配者的复用性。\n灵活性和扩展性都非常好，通过使用配置文件，可以很方便地更换适配器，也可以在不修改原有代码的基础上增加新的适配器类，完全符合“开闭原则”。\n\n缺点\n当然，适配器模式并不是完美的，过度使用还是会带来一些问题的。缺点如下：\n\n过多地使用适配器，会让系统非常零乱，不易整体进行把握。比如，明明看到调用的是 A 接口，其实内部被适配成了 B 接口的实现，一个系统如果太多出现这种情况，无异于一场灾难。因此如果不是很有必要，可以不使用适配器，而是直接对系统进行重构。\n\n"},"browser/":{"url":"browser/","title":"浏览器","body":"浏览器\n"},"browser/浏览器缓存.html":{"url":"browser/浏览器缓存.html","title":"浏览器缓存","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n一. 为什么缓存\n二. 缓存的位置\n\n1. Memory Cache\n2. Disk Cache\n3. Push Cache\n\n三. 缓存过程\n四. 强缓存\n五. 协商缓存\n\n协商缓存的规则:\n协商缓存步骤\n\n六. 缓存命中状态码\n\n\n\n\n一. 为什么缓存\n缓存是一种性能优化，可以缩短网络请求的时间，提高文件的重复利用率。\n二. 缓存的位置\n1. Memory Cache\n将资源缓存到内存中，等待下次访问时不需要重新下载资源，而是直接从内存获取。\n特点：读取高效，但是容量小，缓存持续性短，一旦关闭页面，内存重得缓存就会被释放。\n2. Disk Cache\n将资源存在磁盘中。\n特点：可以容量大，但读取速度慢，最大的有点时存储的时效性（长时间不过期）。\n相比于内存缓存，硬盘缓存会根据HTTP头部中的字段判断哪些资源需要缓存哪些可以直接使用那些需要重新请求。如果相同URL的资源一旦被硬盘缓存，就不会再去请求数据。（HTTP头部缓存信息在下一部分）\n3. Push Cache\n只在Session中存在，一旦会话结束就被释放\n特点：缓存时间很短暂（chrome 5min），同时也不会严格执行HTTP头中的缓存指令\n优先级： Memory Cache &gt;  Disk Cache &gt; Push Cache\n示例：\n\n三. 缓存过程\n\n上面所说的 缓存规则，就是声明所请求的这个资源，要采取哪种缓存策略？缓存多长时间？等等。。。而这个规则，是在http的header中的返回来的。\n根据是否需要向服务器重新发起HTTP请求，缓存的过程可以分为强缓存和协议缓存\n四. 强缓存\n简单粗暴，如果资源没过期，就取缓存，如果过期了，则请求服务器。\n如何判断资源是否过期呢，主要是看 response headers 中的 Cache-Control 的值。\n而和 Cache-Control 并列的，还有一个 Expires ，已经基本淘汰了。\nCache-Control 的几个取值含义：\n\nprivate： 仅浏览器可以缓存\npublic： 浏览器和代理服务器都可以缓存（对于private和public，前端可以认为一样，不用深究）\nmax-age=xxx：过期时间（常用）\nno-cache：不进行强缓存（常用）\nno-store：不强缓存，也不协商缓存 \n\nExpires\n\nExpires = max-age + 请求时间（Date）,需要和Last-Modified结合使用\n\n规则可以同时多个\n强缓存流程：\n\n\n五. 协商缓存\n触发条件：\n\nCache-Control 的值为 no-cache （不强缓存）\n或者 max-age 过期了 （强缓存，但总有过期的时候）\n\n协商缓存的规则:\n\nETag：每个文件有一个，是一个字符串，其内容通常是数据的哈希值,改动文件了就变了，可以看似md5                      \n\n\n浏览器在下一次请求资源时，会把上一次返回的Etag放在request Header的If-None-Match中，服务器比较If-None-Match与自己服务器中的Etag就知道要不要重新返回资源了。\n\n\nLast-Modified：文件的修改时间,服务器可以通过配置这个响应头，来向浏览器发送一个数据上次被修改的时间标签，例如：Last-Modified:Wed, 24 Apr 2019 02:54:16 GMT\n\n\n浏览器下一次请求这个资源的时候，浏览器检测到有Last-Modified这个Header,将Last-Modified中的时间添加到If-Modified-Since这个Header中发出\n此时服务器接收到这个资源请求，会拿If-Modified-Since中的时间与服务器中这个资源的最后修改时间对比，没变化就返回304，最后修改时间比If-Modified-Since中的时间大，就说明有变化，返回200和新的资源文件\n\n协商缓存步骤\n\n\n总结\n\n请求资源时，把用户本地该资源的 ETag 同时带到服务端，服务端和最新资源做对比。\n如果资源没更改，返回304，浏览器读取本地缓存。\n如果资源有更改，返回200，返回最新的资源。\n\n六. 缓存命中状态码\n\n\n\n\nStatus\nSize\n\n\n\n\n从服务器获取新的资源\n200\n真实大小\n\n\n强缓存\n200\ndist cache/memory cache\n\n\n协商缓存\n304\nxxxB\n\n\n\n"},"browser/浏览器的多进程和js的单线程.html":{"url":"browser/浏览器的多进程和js的单线程.html","title":"浏览器的多进程和js的单线程","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n浏览器是多进程的\n浏览器包含了哪些进程\n渲染进程\njs的单线程\nJs的单线程是如何工作的\n\n宏任务和微任务\n浏览器Event Loop执行方式\n\n\n\n\n进程、线程之间的关系\n\n进程是cpu资源分配的最小单位（是能拥有资源和独立运行的最小单位）\n线程是cpu调度的最小单位（线程是建立在进程的基础上的一次程序运行单位，一个进程中可以有多个线程）\n单线程与多线程，都是指在一个进程内的单和多\n\n浏览器是多进程的\n我在Chrome浏览器中打开了多个tab，然后打开mac中的活动监视器：\n\n如上图，我们可以看到一个Chrome浏览器启动了好多个进程。\n\n浏览器是多进程的\n每一个Tab页，都是一个独立的进程\n\n浏览器包含了哪些进程\n\n主进程\n协调控制其他子进程（创建，销毁）\n浏览器界面显示，用户交互，前进、后退、收藏\n将渲染进程得到的内存中的Bitmap，绘制到用户界面上\n处理不可见操作，网络请求，文件访问等\n\n\n第三方插件进程\n每种类型的插件对应一个进程，仅当使用该插件时才创建\n\n\nGPU进程\n用于3D绘制等\n\n\n渲染进程，就是我们说的浏览器内核\n负责页面渲染，脚本执行，事件处理等\n每个tab页一个渲染进程\n\n\n\n对于前端来说，最主要的是 渲染进程，也就是我们常说的浏览器内核\n渲染进程\n从前文我们得知，进程和线程是一对多的关系，也就是说一个进程包含了多条线程。\n而对于渲染进程来说，它当然也是多线程的了，接下来我们来看一下渲染进程包含哪些线程。\n\nGUI渲染线程\n负责渲染页面，布局和绘制\n页面需要重绘和回流时，该线程就会执行\n与js引擎线程互斥，防止渲染结果不可预期\n\n\nJS引擎线程\n负责处理解析和执行javascript脚本程序\n只有一个JS引擎线程（单线程）\n与GUI渲染线程互斥，防止渲染结果不可预期\n\n\n事件触发线程\n用来控制事件循环（鼠标点击、setTimeout、ajax等）\n当事件满足触发条件时，将事件放入到JS引擎所在的执行队列中\n\n\n定时触发器线程\nsetInterval与setTimeout所在的线程\n定时任务并不是由JS引擎计时的，是由定时触发线程来计时的\n计时完毕后，通知事件触发线程\n\n\n异步http请求线程\n浏览器有一个单独的线程用于处理AJAX请求\n当请求完成时，若有回调函数，通知事件触发线程\n\n\n\njs的单线程\njs的单线程和它的用途有关，作为浏览器脚本语言，它主要是用来处理页面中用户的交互，以及操作DOM树、CSS样式树来给用户呈现一份动态而丰富的交互体验和服务器逻辑的交互处理。\n如果JavaScript是多线程的方式来操作这些UI DOM，则可能出现UI操作的冲突；\n如果Javascript是多线程的话，在多线程的交互下，处于UI中的DOM节点就可能成为一个临界资源，假设存在两个线程同时操作一个DOM，一个负责修改一个负责删除，那么这个时候就需要浏览器来裁决如何生效哪个线程的执行结果。\n当然我们可以通过锁来解决上面的问题。但为了避免因为引入了锁而带来更大的复杂性，Javascript在最初就选择了单线程执行。\n这也解释了为什么GUI线程和JS引擎是互斥的。\n当JS引擎执行时GUI线程会被挂起，GUI更新则会被保存在一个队列中等到JS引擎线程空闲时立即被执行。\nJs的单线程是如何工作的\nJS 引擎不是单独运行的 —— 它运行在一个宿主环境中，对于大多数开发者来说就是典型的浏览器和 Node.js。实际上，如今，JavaScript 被应用到了从机器人到灯泡的各种设备上。每个设备都代表了一种不同类型的 JS 引擎的宿主环境。\n所有的环境都有一个共同点，就是都拥有一个事件循环(EventLoop)内置机制，它随着时间的推移每次都去调用 JS 引擎去处理程序中多个块的执行。\n想要理解JS 引擎的机制，首先要理解三个定义：\n\n栈(Stack)\n\n是一种遵循后进先出(last in first out LIFO)原则的有序集合；在栈里，新元素都靠近栈顶，旧元素都靠近栈底(现实中栈的例子:一摞书或者堆放在一起的盘子)\n\n\n队列(Queue)\n\n是一种遵循先进先出(first in first out FIFO)原则的一组有序的项；在队列中，最新添加的元素必须排在队列的末尾(现实中队列的例子：排队过安检)\n\n\n堆(Heap)\n\n 主要用于存放引用类型诸如object这类，存储的对象类型数据对于大小在这方面都是未知的。堆内存是动态分配内存，内存大小不一，也不会自动释放。\n\n\n\n宏任务和微任务\n\n常见的宏任务：script（整体代码）、setTimeout、setInterval、I/O、setImmedidate\n常见的微任务：process.nextTick、MutationObserver、Promise.then catch finally\n\n每次执行栈为空的时候，系统会优先处理微任务队列，处理完微任务队列里的所有任务，再去处理宏任务。\n浏览器Event Loop执行方式\n\n顺序执行全局Script代码，遇到同步语句则执行，遇到异步语句则把它丢到宏队列或微队列。\n如遇到console.log则正常执行;\n遇到setTimeout则把他扔进宏队列;\n遇到promise，则先正常执行promise里面语句，把后面的then回调函数扔进微队列\n\n\n全局Script代码执行完后，调用栈为空\n再从微队列取出位于队首代码或回调函数，放入调用栈中执行，此过程中如果产生新的微队列或宏队列函数则照常扔到队列末尾\n如执行promise.then()\n\n\n重复取出微队列函数，直到微队列为空\n再从宏队列取出一个函数放入调用栈执行\n重复1~5直到宏队列为空\n\n来看个例子：\nconsole.log(1);\n\nsetTimeout(() =&gt; {\n  console.log(2);\n  Promise.resolve().then(() =&gt; {\n    console.log(3)\n  });\n});//macrotask1\n\nnew Promise((resolve, reject) =&gt; {\n  console.log(4)\n  resolve(5)\n}).then((data) =&gt; {\n  console.log(data);\n})\n\nsetTimeout(() =&gt; {\n  console.log(6);\n})//macrotask2\n\nconsole.log(7);\n\n执行console.log(1)  输出1\nsetTimeout扔进宏队列，将这个记作macrotask1，此时宏队列为{macrotask1}\n同步执行promise内语句console.log(4)，输出4，后面的then扔进微队列，此时的微队列{console.log(5)}\n下一个setTimeout扔进宏队列，记作macrotask2，此时的宏队列{macrotask1,macrotask2}\n执行console.log(7) 输出7\n从微队列取出队首console.log(5)执行，输出5，此时微队列为{}\n由于微队列为空，于是从宏队列取出队首函数macrotask1，扔进调用栈执行，此时宏队列{macrotask2}\n执行macrotask1，执行console.log(2) 输出2，后面的Promise.resolve().then()扔进微队列，此时微队列{console.log(3)}\nmacrotask1执行完(调用栈空)，再去执行微队列{console.log(3)}，输出3，此时微队列{}\n微队列空，再从宏队列取出函数macrotask2，执行console.log(6)，输出6\n宏队列空，代码执行完毕\n\n最终输出为1475236\n如果上面的题目你还不清楚EventLoop的执行顺序，那就\n来45道Promise面试题一次爽到底 \n"},"network/":{"url":"network/","title":"网络协议","body":"网络协议\n"},"network/http和https.html":{"url":"network/http和https.html","title":"http和https","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n概念\n区别\nhttps的工作原理\n\n\n\n\n概念\n\nhttp：全称超文本传输协议，是一种详细规定客户端与web服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议。\nhttps：是以安全为目标的HTTP通道，简单讲是HTTP的安全版，即HTTP下加入SSL层。\n\n区别\n\n\n\n\nhttp\nhttps\n\n\n\n\n传输协议\n明文传输\nssl 加密传输协议\n\n\n默认端口\n80\n443\n\n\n连接\n连接简单；无状态\nSSL+HTTP加密传输\n\n\n加载时间\n\n页面加载时间延长 50%，增加 10%~20%的耗电\n\n\n\nhttps的工作原理\n\n客户端发起HTTPS请求\n服务端的配置，采用HTTPS协议的服务器必须要有一套数字证书，这套证书其实就是一对公钥和私钥，\n传送证书，web 服务器接收到客户端的请求之后，会将网站的证书（证书中包含了公钥），传输给客户端。\n客户端解析证书，首先会验证公钥是否有效，如果证书没有问题，那么就生成一个随机值，然后用证书对该随机值进行加密。\n传送加密信息，传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。\n服务段解密信息，服务端用私钥解密后，得到了客户端传过来的随机值(私钥)，然后把内容通过该值进行对称加密，所谓对称加密就是，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。\n传输加密后的信息，是服务段用私钥加密后的信息，可以在客户端被还原。\n客户端解密信息，客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容，整个过程第三方即使监听到了数据，也束手无策。\n\n"},"network/传输层协议TCP和UDP.html":{"url":"network/传输层协议TCP和UDP.html","title":"传输层协议TCP和UDP","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n传输层协议TCP和UDP\n\n理解TCP和UDP\nTCP(传输控制协议)\nUDP(用户数据报协议)\n适用场景\n\n\n\n\n\n传输层协议TCP和UDP\nTCP/IP协议， 你一定常常听到，其中TCP（Transmission Control Protocol）称为 传输控制协议，IP（Internet Protocol） 称为网际协议。\n事实上TCP/IP协议，是一个协议族，是一个协议的集合。\nTCP/IP协议，定义了一整套规则。它定义整个互联网如何连接，如何通信，如何协商的最基础规则。\nTCP/IP协议分为五层，分别是应用层、传输层、网络层、数据链路层、物理层。每层都有对应的相关协议，其中TCP和UDP是传输层的两个协议。\n\n理解TCP和UDP\n\n\n\n特点\nTCP\nUDP\n\n\n\n\n是否连接\n面向连接\n无连接\n\n\n传输是否可靠\n可靠\n不可靠\n\n\n应用场景\n传输大量数据\n少量数据\n\n\n顺序\n有序\n无序\n\n\n速度\n慢\n快\n\n\n\n既然他们是传输层的协议，那么他们的作用当然就是用来负责传输数据了。\n我们想象一个场景，网络中随意的两端要通信，会采取什么传输方式呢？\n可以先想象一下人类之间的通信。\n第一种是打电话。我拨通电话你的电话，直到你回答“你好”，我听到声音之后，我们之间才继续进行交谈。\n另一个是发短信。我给你的手机号发送一条短信，无法知道你是否收到，然后我就只能等待你的回复了。\n其中第一种方式对应TCP，而第二种对应UDP。TCP是需要对方确认的，也就是传输之前需要进行三次握手（传输的两端需要经过三次握手，才开始通信）。UDP着比较粗暴，不论对方什么情况，直接发送，不需要确认过程。\n而上图中的看到的，TCP是可靠的，UDP是不可靠的，就是这个意思。\n可靠的连接带来的是效率的下降。比如一次网络请求，很大一部分时间其实都是浪费在互相确认的过程当中，资源消耗比较多，保证了数据传输是可靠的，而且传输数据是有序的。不可靠的连接带来的是效率的提升，但可能服务质量有下降。\n要摆脱一种人为的误区，不要以为UDP不可靠，就没有应用场景。据说QQ发送数据就是靠UDP发送的，尽管是不可靠的连接，可是还是用了非常多的校验算法保证了数据质量稳定，同也保证了效率。TCP尽管耗时，可是对于稳定性优先的场景，还是应该有限选用TCP，比方浏览器中访问网页用的就是TCP。此外在一些长连接系统里面，比方微信，连接通道应该也是用TCP建立的，由于要维持一条稳定的信息传输通道。\n协议是怎么控制，数据包是怎么传输，怎么校验数据的正确性，还有重传特性。这些都是协议中重要的控制过程，在这里不做详解，因为对于实际的产品并没有太大的用。至于如何选定传输数据方式，应该依据场景而定。\n安全的东西往往不快，反之亦然。而TCP和UCD之间也是这样\nTCP(传输控制协议)\nTCP(传输控制协议)是基于连接的。在正式收发数据之前，必须要与对方建立连接。这之间需要经过&#39;三次握手&#39;:\n第一步. 首先A主机需要和B主机之间建立数据收发，A需要发送一个请求询问B：&#39;我要建立连接&#39;；\n\n第二步. B收到消息后，会给A发送一个回应：&#39;可以连接&#39;；\n\n第三步. A收到B的回应后，A向B再次回应：&#39;我要开始发送了&#39;，他们之间就可以建立连接了；\n第一次握手的结论是：A的发送能力、B的接收能力正常。\n\n第二次握手的结论是：B的发送能力、A的接收能力正常。\n\n第三次握手的结论是：A的接收、发送能力，B的接收、发送能力都是正常的。\n&#39;3次握手&#39;的作用就是 双方都能明确自己和对方的收、发能力是正常的.\nUDP(用户数据报协议)\nUDP(用户数据报协议)是面向非连接的，不与对方建立连接，而直接把数据报=包发送出去。UDP适用于一次传输少量的数据，对于可靠性要求不高的应用环境。日常生活中使用的ping命令测试主机是否通信正常，事实上&#39;ping&#39;命令的原理就是向对方主机发送UDP数据包，然后对方主机确认收到数据包，假设数据包是否到达的消息及时反馈回来了，那么网络传输就是正常的。\n适用场景\n\nTCP：是全双工、面向连接、可靠的，而且精确控制的协议。主要用于实时性不强，但传输要求高的应用。比方说：网页浏览、文件下载(不是BT、电脑下载)、邮件的发送等场合，这些场景需要TCP协议进行传输。当然，它在网络方面的开销是昂贵的。\nUDP：这是一个不可靠的传输协议。由于它不排序所要发送的数据段，不负责这些数据段到达目标的顺序（说一它才不可靠）。它在网络的开销要比TCP小很多，因此UDP适合用在那些实时性强、允许出错的场合。比如说：即时通讯(MSN、QQ)，视频、语言等方面。\n\n"},"network/TCP三次握手和四次挥手.html":{"url":"network/TCP三次握手和四次挥手.html","title":"TCP三次握手和四次挥手","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\nTCP三次握手和四次挥手\n\n一、TCP的三次握手\n\n为什么要三次握手？\n\n二、TCP四次挥手\n为什么建立连接是三次握手，而关闭连接却是四次挥手呢？\n\n\n\n\n\nTCP三次握手和四次挥手\n备注：(下文中提到的专业术语)\nack —— 确认号码\nseq —— 顺序号码\nISN —— 初始序列号\nACK —— 确认，使得确认号有效（握手使用）\nSYN —— 用于初始化一个连接的序列号，建立联机\nFIN —— 该报文的发送方已经结束向对方发送数据\n一、TCP的三次握手\n三次握手 实际就是Client端和Server端建立稳定TCP连接的发送三个包的过程。\n\n\n第一次握手：(SYN=1, ACK=0, seq=x):\nClient发送SYN标志位1的包到Server，以及初始序号x（保存在包头的序列号seq字段，简称ISN），和ACK标志位为0，并进入SYN_SEND状态，等待Server确认。\n\n\n第二次握手：(SYN=1, ACK=1, seq=y, ack=x+1):\nServer发回确认包(ACK)应答。即 SYN 标志位和 ACK 标志位均为1。Server确认ISN序列号，放到seq域里，同时将确认序号(ack)设置为Client的ISN加1，即x+1。 发送完毕后，Server进入 SYN_RCVD 状态。\n\n\n第三次握手：(ACK=1，seq=x+1，ack=y+1)    \nClient再次发送确认包(ACK)，ACK标志位为1，并且把Server发来ISN的序号字段+1，放在确定字段中发送给对方。                                                     \n\n\n\n为什么要三次握手？\n为什么要三次握手，我握两次不行吗？我觉得我说发，你说好，不就完了吗，非要矫情一下，握第三次手的意义是什么？\n首先我们先来理解一下为什么需要握手？\n客户端和服务器端通信前需要连接，而”握手“作用就是为了证明，客户端的发送能力和服务器端的接受能力都是正常的，这是”握手“来达到的目的。\n\n第一次握手:客户端发送网络包，服务器端收到了，这样服务器端就能证明：客户端的发送能力、以及服务器端的接收能力都是正常的。           \n第二次握手:服务端发包，客户端收到了。这样客户端就能得出结论：服务端的接收、发送能力，客户端的接收、发送能力是正常的。 从客户端的视角来看，我接到了服务端发送过来的响应数据包，说明服务端接收到了我在第一次握手时发送的网络包，并且成功发送了响应数据包，这就说明，服务端的接收、发送能力正常。而另一方面，我收到了服务端的响应数据包，说明我第一次发送的网络包成功到达服务端，这样，我自己的发送和接收能力也是正常的。\n第三次握手：客户端发包，服务端收到了。这样服务端就能得出结论：客户端的接收、发送能力，服务端的发送、接收能力是正常的。 第一、二次握手后，服务端并不知道客户端的接收能力以及自己的发送能力是否正常。而在第三次握手时，服务端收到了客户端对第二次握手作的回应。从服务端的角度，我在第二次握手时的响应数据发送出去了，客户端接收到了。所以，我的发送能力是正常的。而客户端的接收能力也是正常的。\n\n二、TCP四次挥手\n四次挥手，实际就是Client端和Server端关闭TCP连接的发送四个包的过程。\n      \n\n第一次挥手(FIN=1，seq=u)\nClient 想要关闭连接，Client 会发送一个FIN标志位置为1，当前序列号为u的包，表示需要关闭连接了。Client进入 FIN_WAIT_1 状态。\n\n\n第二次挥手(ACK=1，seq=v，ack=u+1)\nServer收到Client的FIN包之后，会发送一个确认序号为收到的序列号u+1的包，表明自己接受到了Client关闭连接的请求，但还未准备好关闭连接。Server进入 CLOSE_WAIT 状态，Client进入 FIN_WAIT_2 状态。\n\n\n第三次挥手(FIN=1，ACK=1，seq=w，ack=u+1)\n当Server将剩余数据发送完之后，会发送一个自己的FIN包，序列号为u+1。Server进入 LAST_ACK 状态，等待来自Client的最后一个ACK。\n\n\n第四次挥手(ACK=1，seq=u+1，ack=w+1)\nClient接收到来自Server端的关闭请求之后，发送最后一个ACK确认包，确认序号设置为收到序号加1。Client进入 TIME_WAIT状态，等待可能出现的要求重传的 ACK 包。Server接收到这个确认包之后，关闭连接，进入CLOSED状态。(Client会等待2MSL之后，没有收到Server的ACK ，就确认Server进入CLOSED状态，自己也关闭进入CLOSED状态。)\n\n\n\n发送完毕后，Client和Server断开连接，TCP 挥手结束。\n为什么建立连接是三次握手，而关闭连接却是四次挥手呢？\n这是因为服务端在LISTEN（监听）状态下，收到建立连接请求的SYN报文后，把ACK和SYN放在一个报文里发送给客户端。而关闭连接时，当收到对方的FIN报文时，仅仅表示对方不再发送数据了但是还能接收数据，己方是否现在关闭发送数据通道，需要上层应用来决定，因此，己方ACK和FIN一般都会分开发送。\n"},"structure/":{"url":"structure/","title":"数据结构","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n数据结构\n\n\n\n数据结构\n"},"structure/堆栈和队列.html":{"url":"structure/堆栈和队列.html","title":"堆栈和队列","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n栈\n\n栈的存储结构（存储栈）\n\n栈的链式存储结构\n\n执行栈（函数调用栈）\n实践：创建一个栈\n\n堆\n为什么会有堆内存、栈内存之分\n队列\n\n创建一个队列\n\n实践\n\n有效括号\n多维数组 flatten\n\n\n\n\n栈\n栈是限定仅在表尾进行插入和删除操作的线性表，遵循 后进先出（LIFO） 原则。 我们把允许插入和删除的一端称为栈顶，另一端称为栈底，不含任何数据元素的栈称为空栈。\n栈由编译器自动分配释放。栈使用一级缓存。调用时处于存储空间，调用完毕自动释放。\n图示：\n\n栈的插入操作，叫做进栈；栈的删除操作叫做出栈。\n栈的存储结构（存储栈）\njavaScript中，数据类型分为基本数据类型和引用数据类型，基本数据类型包含：string、number、boolean、undefined、null、symbol、bigint这几种。\n在内存中这几种数据类型存储在栈空间。\n\n栈的链式存储结构\n把栈顶放在单链表的头部，用链表来存储栈的的数据结构称为链栈。\n图示：\n\n链栈的进栈就是头插法建立链表的插入操作；出栈就是单链表的删除操作。\n链栈的插入操作:\n\n链栈的删除操作:\n\n执行栈（函数调用栈）\n我们知道了基本数据结构的存储之后，我们再来看看JavaScript中如何通过栈来管理多个执行上下文。\n\n程序执行进入一个执行环境时，它的执行上下文就会被创建，并被推入执行栈中(入栈)。\n程序执行完成时，它的执行上下文就会被销毁，并从栈顶被推出(出栈)，控制权交由下一个执行上下文。\n\nJavaScript中每一个可执行代码，在解释执行前，都会创建一个可执行上下文。按照可执行代码块可分为三种可执行上下文。\n\n全局可执行上下文：每一个程序都有一个全局可执行代码，并且只有一个。任何不在函数内部的代码都在全局执行上下文。\n函数可执行上下文：每当一个函数被调用时, 都会为该函数创建一个新的上下文。每个函数都被调用时都会创建它自己的执行上下文。\nEval可执行上下文：Eval也有自己执行上下文。\n\n因为JS执行中最先进入全局环境，所以处于&quot;栈底的永远是全局环境的执行上下文&quot;。而处于&quot;栈顶的是当前正在执行函数的执行上下文&quot;，当函数调用完成后，它就会从栈顶被推出（理想的情况下，闭包会阻止该操作）。\n看个例子：\n    let name = &#39;蜗牛&#39;;\n\nfunction sayName(name) {\n    sayNameStart(name);\n}\n\nfunction sayNameStart(name) {\n    sayNameEnd(name);\n}\n\nfunction sayNameEnd(name) {\n    console.log(name);\n}\n\n当代码进行声明时：\n\n执行sayName函数时，会把直接函数压如执行栈，并且会创建执行上下文，执行完毕编译器会自动释放：\n\n实践：创建一个栈\n我们需要自己创建一个栈，并且这个栈包含一些方法。\n\npush(element(s)):添加一个（或多个）新元素到栈顶\npop():删除栈顶的元素，并返回该元素\npeek():返回栈顶的元素，不对栈做任何操作\nisEmpty():检查栈是否为空\nsize():返回栈的元素个数\nclear():清空栈\n\nlet Stack = (function () {\n    const items = new WeakMap();\n\n    class Stack {\n        constructor() {\n            items.set(this, []);\n        }\n\n        getItems() {\n            let s = items.get(this);\n            return s;\n        }\n\n        push(element) {\n            this.getItems().push(element);\n        }\n\n        pop() {\n            return this.getItems().pop();\n        }\n\n        peek() {\n            return this.getItems()[this.getItems.length - 1];\n        }\n\n        isEmpty() {\n            return this.getItems().length == 0;\n        }\n\n        size() {\n            return this.getItems().length;\n        }\n\n        clear() {\n            this.getItems() = [];\n        }\n    }\n\n    return Stack;\n})();\n\n堆\n堆，一般由操作人员（程序员）分配释放，若操作人员不分配释放，将由OS回收释放。分配方式类似链表。堆存储在二级缓存中。\nObject 类型都存储在堆内存中，是大小不定，复杂可变的。 Object 类型数据的 指针 存储在栈内存空间， 指针实际指向的值存储在堆内存空间。\n\n为什么会有堆内存、栈内存之分\n通常与垃圾回收机制有关。为了使程序运行时占用的内存最小。\n当一个方法执行时，每个方法都会建立自己的内存栈，在这个方法内定义的变量将会逐个放入这块栈内存里，随着方法的执行结束，这个方法的内存栈也将自然销毁了。因此，所有在方法中定义的变量都是放在栈内存中的；\n当我们在程序中创建一个对象时，这个对象将被保存到运行时数据区中，以便反复利用（因为对象的创建成本通常较大），这个运行时数据区就是堆内存。堆内存中的对象不会随方法的结束而销毁，即使方法结束后，这个对象还可能被另一个引用变量所引用（方法的参数传递时很常见），则这个对象依然不会被销毁，只有当一个对象没有任何引用变量引用它时，系统的垃圾回收机制才会在核实的时候回收它。\n队列\n队列是只允许在一端进行插入操作，而在另一端进行删除操作的线性表，队列是一种先进先出的线性表，简称FIFO.\n在现实中最常见的队列就是排队，先排队的先服务。\n\n创建一个队列\n实现包含以下方法的Queue类\n\nenqueue(element(s)):向队列尾部添加一个（或多个）元素。\ndequeue():移除队列的第一项，并返回移除的元素。\nfront():返回队列的第一个元素--最先被添加，最先被移除的元素。\nisEmpty():判断队列是否为空。\nsize():返回队列的长度。\n\nlet Queue1 = (function () {\n    const items = new WeakMap();\n\n    class Queue1 {\n        constructor() {\n            items.set(this, []);\n        }\n\n        // 获取队列\n        getQueue() {\n            return items.get(this);\n        }\n\n        // 添加元素\n        enqueue(element) {\n            this.getQueue().push(element);\n        }\n\n        // 删除元素\n        dequeue() {\n            return this.getQueue().shift();\n        }\n\n        // 返回队列第一个元素\n        front() {\n            return this.getQueue()[0];\n        }\n\n        // 判断队列是否为空\n        isEmpty() {\n            return this.getQueue().length === 0;\n        }\n\n        // 返回队列长度\n        size() {\n            return this.getQueue().length;\n        }\n    }\n\n    return Queue1;\n})();\n\n实践\n有效括号\n给定一个只包括 &#39;(&#39;，&#39;)&#39;，&#39;{&#39;，&#39;}&#39;，&#39;[&#39;，&#39;]&#39; 的字符串，判断字符串是否有效。\n有效字符串需满足：\n左括号必须用相同类型的右括号闭合。 左括号必须以正确的顺序闭合。 注意空字符串可被认为是有效字符串。\n示例:\n输入: &quot;()&quot;\n输出: true\n\n代码实现\nvar isValid = function (s) {\n    let stack = [];\n    for (let i = 0; i &lt; s.length; i++) {\n        let ch = s.charAt(i);\n        if (ch == &#39;(&#39; || ch == &#39;[&#39; || ch == &#39;{&#39;)\n            stack.push(ch);\n        if (!stack.length) return false;\n        if (ch == &#39;)&#39; &amp;&amp; stack.pop() !== &#39;(&#39;) return false;\n        if (ch == &#39;]&#39; &amp;&amp; stack.pop() !== &#39;[&#39;) return false;\n        if (ch == &#39;}&#39; &amp;&amp; stack.pop() !== &#39;{&#39;) return false;\n    }\n    return stack.length === 0;\n};\n\n多维数组 flatten\n将多维数组转化为一维数组。\n示例：\n[1, [2, [3, [4, 5]]], 6]\n-&gt;\n[1, 2, 3, 4, 5, 6]\n\n代码实现:\nlet flatten = (nestedList) =&gt; {\n    let result = [];\n    let fn = function (target, ary) {\n        for (let i = 0; i &lt; ary.length; i++) {\n            let item = ary[i];\n            if (Array.isArray(ary[i])) {\n                fn(target, item);\n            } else {\n                target.push(item);\n            }\n        }\n    }\n    fn(result, nestedList)\n    return result;\n\n"},"structure/二叉树.html":{"url":"structure/二叉树.html","title":"二叉树","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n树的基本概念\n二叉树的概念\n二叉搜索（BST）树\n树的遍历\n\n前序遍历\n中序遍历\n后序遍历\n\n树的搜索\n\n搜索特定值\n搜索最小值\n搜索最大值\n移除节点\n\n\n\n\n树的基本概念\n树是用来模拟具有树状结构性质的数据集合。或者你可以把它认为是一种抽象数据结构或是实现这种抽象数据类型的数据结构，用来模拟具有树状结构性质的数据集合。\n它是由n（n&gt;0）个有限节点组成一个具有层次关系的集合。把它叫做“树”是因为它看起来像一棵倒挂的树，也就是说它是根朝上，而叶朝下的。它具有以下的特点：\n\n每个节点都只有有限个子节点或无子节点；\n没有父节点的节点称为根节点；\n每一个非根节点有且只有一个父节点；\n除了根节点外，每个子节点可以分为多个不相交的子树；\n树里面没有环路(cycle)\n\n\n为了更加规范的总结，这里给出的描述来自于维基百科：\n\n1.节点的度：一个节点含有的子树的个数称为该节点的度；\n\n树的度：一棵树中，最大的节点度称为树的度；\n叶节点或终端节点：度为零的节点；\n非终端节点或分支节点：度不为零的节点；\n父亲节点或父节点：若一个节点含有子节点，则这个节点称为其子节点的父节点；\n孩子节点或子节点：一个节点含有的子树的根节点称为该节点的子节点；\n兄弟节点：具有相同父节点的节点互称为兄弟节点；\n节点的层次：从根开始定义起，根为第1层，根的子节点为第2层，以此类推；\n深度：对于任意节点n,n的深度为从根到n的唯一路径长，根的深度为0；\n高度：对于任意节点n,n的高度为从n到一片树叶的最长路径长，所有树叶的高度为0；\n堂兄弟节点：父节点在同一层的节点互为堂兄弟；\n节点的祖先：从根到该节点所经分支上的所有节点；\n子孙：以某节点为根的子树中任一节点都称为该节点的子孙；\n森林：由m（m&gt;=0）棵互不相交的树的集合称为森林。\n\n\n二叉树的概念\n树的种类有很多种，比如B树、霍夫曼树、二叉树等，在这里我们着重了解二叉树。\n二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。\n\n二叉搜索（BST）树\n二叉搜索树（BST）,它是二叉树的一种，只允许你在左侧节点存储比父节点小的值，在右侧节点存储比父节点大（或者等于）的值。如下图：\n\n接下来我们用代码实现一棵BST树， 在实现之前，我们需要先分析一下BST）树。我们要想构建一棵实用的树，我们需要节点和方法：\n\n基类节点\n基类方法\n插入\n搜索\n遍历\n删除\n\n\n\n先实现一个基类，如下：\nfunction BinarySearchTree() {\n    let Node = function (key) {\n        this.key = key;\n        this.left = null;\n        this.right = null;\n    }\n    let root = null;\n}\n\n按照上图的二叉搜索树的结构组织方式，来实现二叉树的基本方法。\n// 插入\nthis.insert = function (key) {\n    let newNode = new Node(key);\n    if (root === null) {\n        root = newNode;\n    } else {\n        insertNode(root, newNode);\n    }\n}\n\n其中insertNode方法用来判断在根节点不为空时的执行逻辑，具体代码如下：\nfunction insertNode(node, newNode) {\n    // 如果新节点值小于当前节点值，则插入左子节点\n    if (newNode.key &lt; node.key) {\n        if (node.left === null) {\n            node.left = newNode;\n        } else {\n            insertNode(node.left, newNode);\n        }\n    } else {\n        // 如果新节点值大于当前节点值，则插入右子节点\n        if (node.right === null) {\n            node.right = newNode;\n        } else {\n            insertNode(node.right, newNode);\n        }\n    }\n}\n\n我们需要一个方法查看生成的树:\nthis.getRoot = function () {\n    return root;\n};\n\n总的代码：\n    function BinarySearchTree() {\n    let Node = function (key) {\n        this.key = key;\n        this.left = null;\n        this.right = null;\n    };\n    let root = null;\n\n    this.getRoot = function () {\n        return root;\n    };\n\n    // 插入\n    this.insert = function (key) {\n        let newNode = new Node(key);\n        if (root === null) {\n            root = newNode;\n        } else {\n            insertNode(root, newNode);\n        }\n    };\n\n    function insertNode(node, newNode) {\n        // 如果新节点值小于当前节点值，则插入左子节点\n        if (newNode.key &lt; node.key) {\n            if (node.left === null) {\n                node.left = newNode;\n            } else {\n                insertNode(node.left, newNode);\n            }\n        } else {\n            // 如果新节点值大于当前节点值，则插入右子节点\n            if (node.right === null) {\n                node.right = newNode;\n            } else {\n                insertNode(node.right, newNode);\n            }\n        }\n    }\n\n}\n\n接下来我们使用方法创建一颗树：\nlet tree = new BinarySearchTree()\ntree.insert(19)\ntree.insert(10)\ntree.insert(20)\nconsole.log(tree.getRoot());\n\n以上代码生成的二叉树结构如下：\n\n树的遍历\n树的遍历是指访问树的每个节点并对它们进行某种操作的过程。\n常见的三种遍历方式：\n\n前序遍历\n中序遍历\n后序遍历\n\n前序遍历\n前序遍历是以优先于后代节点的顺序访问每一个节点。\n比如这样一颗二叉树\n\n前序遍历的顺序是：根节点-&gt;左子树-&gt;右子树：\n\n遍历结果为：ABDEFGC\n具体代码实现如下：\nthis.preOrderTraverse = function(cb) {\n    preOrderTraverseNode(root, cb)\n}\n\nfunction preOrderTraverseNode(node, cb) {\n    if(node !== null) {\n        cb(node.key)\n        preOrderTraverseNode(node.left, cb)\n        preOrderTraverseNode(node.right, cb)\n    }\n}\n\n中序遍历\n中序遍历是一种以从最小到最大的顺序访问所有节点的遍历方式\n\n中序遍历的顺序是：左子树-&gt;根节点-&gt;右子树\n遍历结果为：DEBGFAC\n代码实现如下：\nthis.inOrderTraverse = function(cb) {\n    inOrderTraverseNode(root, cb)\n}\n\nfunction inOrderTraverseNode(node, cb) {\n    if(node !== null) {\n        inOrderTraverseNode(node.left, cb)\n        cb(node.key)\n        inOrderTraverseNode(node.right, cb)\n    }\n}\n\n后序遍历\n后序遍历是先访问节点的后代节点，再访问节点本身。\n遍历顺序为：左子树-&gt;右子树-&gt;根节点\n\n遍历结果为：EDGFBCA\n代码实现如下：\nthis.postOrderTraverse = function(cb) {\n    preOrderTraverseNode(root, cb)\n}\n\nfunction postOrderTraverseNode(node, cb) {\n    if(node !== null) {\n        postOrderTraverseNode(node.left, cb)\n        postOrderTraverseNode(node.right, cb)\n        cb(node.key)\n    }\n}\n\n树的搜索\n我们一般的搜索会有最值搜索（也就是最大值，最小值，中值）和对特定值的搜索，接下来我们就来实现它们。\n搜索特定值\nthis.search = function(key) {\n    return searchNode(root, key)\n}\n\nfunction searchNode(ndoe, key) {\n    if(node === null) {\n        return false\n    }\n    if(key &lt; node.key) {\n        return searchNode(node.left, key)\n    }else if(key &gt; node.key) {\n        return searchNode(node.right, key)\n    }else {\n        return true\n    }\n}\n\n搜索最小值\n由二叉树的结构特征我们可以发现，二叉树的最左端就是最小值，二叉树的最右端就是最大值，所以我们可以通过遍历来找到最小值\nthis.min = function() {\n    return minNode(root)\n}\n\nfunction minNode(node) {\n    if(node) {\n        while(node &amp;&amp; node.left !== null) {\n            node = node.left;\n        }\n        return node.key\n    }\n    return null\n}\n\n搜索最大值\nthis.max = function() {\n    return maxNode(root)\n}\n\nfunction maxNode(node) {\n    if(node) {\n        while(node &amp;&amp; node.right !== null) {\n            node = node.right;\n        }\n        return node.key\n    }\n    return null\n}\n\n移除节点\n移除BST中的节点相对来说比较复杂，需要考虑很多情况，具体情况如下：\n\n移除一个叶节点\n\n\n\n移除有一个左侧或右侧子节点的节点\n\n\n\n移除有两个子节点的节点\n\n\n考虑到上述几种情况，代码如下：\nthis.remove = function(key) {\n    root = removeNode(root, key)\n}\n\nfunction removeNode(node, key) {\n    if(node === null) {\n        return null\n    }\n    if(key &lt; node.key) {\n        node.left = removeNode(node.left, key)\n        return node\n    }else if(key &gt; node.key) {\n        node.right = removeNode(node.right, key)\n        return node\n    }else {\n        // 一个叶节点\n        if(node.left === null &amp;&amp; node.right === null) {\n            node = null;\n            return node\n        }\n        // 只有一个子节点的节点\n        if(node.left === null) {\n            node = node.right;\n            return node\n        }else if(node.right === null) {\n            node = node.left;\n            return node\n        }\n        // 有两个子节点的节点情况\n        let aux = findMinNode(node.right);\n        node.key = aux.key;\n        node.right = removeNode(node.right, aux.key);\n        return node\n    }\n}\n\nfunction findMinNode(node) {\n    if(node) {\n        while(node &amp;&amp; node.left !== null) {\n            node = node.left;\n        }\n        return node\n    }\n    return null\n}\n\n"},"structure/哈希表HashMap.html":{"url":"structure/哈希表HashMap.html","title":"哈希表HashMap","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n什么是哈希表\n哈希化\n地址的冲突(哈希冲突)\n链地址法（拉链法）\n开放地址法\n\n线性探测\n二次探测\n再哈希法（最好的解决方式）\n\n哈希函数\n\n快速计算\n均匀分布\n\nJava 中的 HashMap \n哈希表的优势和劣势\n封装哈希表\n\n创建哈希表类\nput(key,value)\nget(key)\nremove(key)\nisEmpty()\nsize()\nresize()\n\n选择质数作为哈希表容量\n\n质数判断\n实现扩容或压缩后的哈希表容量为质数\n\n\n\n\n什么是哈希表\n首先我们看一个例子：假如你是公司的一名文员，老板让你整理公司1000人的信息，包括工号，姓名等，要求能够快速查找到某个员工的完整信息。\n你会怎么做呢？\n如果我们把工号储存在数组里，那就方便多了，可以直接通过下标（key）找到对应的员工。\n日常生活中，key 一般都赋予特定的含义，使用 0,1,2 ... 太过简单了。比如我们把工号加上出生日期和性别等信息，工号为 9511151 代表95年11月15号 男性。我们知道某一人的工号就可以直接找到对应的员工。\n这就是哈希化！ 通过给定的工号，去访问一种转换算法（将工号为9511151转换为95年11月15号 男性的方法），得到对应的员工信息（95年11月15号 男性）。\n其中这种转换算法称为哈希函数，给定的 key 称为关键字，关键字通过哈希函数计算出来的值则称为哈希值。通过哈希值到哈希表中就可以获取检索值。\n\n哈希表又叫散列表，是一种根据设定的映射函数f(key)将一组关键字映射到一个有限且连续的地址区间上，并以关键字在地址区间中的“像”作为元素在表中的存储位置的一种数据结构。这个映射过程称为哈希造表或者散列，这个映射函数f(key)即为哈希函数也叫散列函数，通过哈希函数得到的存储位置称为哈希地址或散列地址\n\n哈希化\n为了把字符串转化为对应的下标值，需要有一套编码系统，为了方便理解我们创建这样一套编码系统：比如 a 为 1，b 为 2，c 为 3，以此类推 z 为 26，空格为 27（不考虑大写情况）。\n有了编码系统后，将字母转化为数字也有很多种方案：\n\n方案一：数字相加。\n\n例如 cats 转化为数字：3 + 1 + 20 + 19 = 43，那么就把 43 作为 cats 单词的下标值储存在数组中。\n但是这种方式会存在这样的问题：很多的单词按照该方式转化为数字后都是 43，比如 was。而在数组中一个下标值只能储存一个数据，所以该方式不合理。\n\n方案二：幂的连乘。\n我们平时使用的大于 10 的数字，就是用幂的连乘来表示它的唯一性的。\n比如： 6543 = 6  10^3 + 5  10^2 + 4  10 + 3；这样单词也可以用该种方式来表示：cats = 3  27^3 + 1  27^2 + 20  27 + 17 = 60337。\n\n\n虽然该方式可以保证字符的唯一性，但是如果是较长的字符（如 aaaaaaaaaa）所表示的数字就非常大，此时要求很大容量的数组，然而其中却有许多下标值指向的是无效的数据（比如不存在 zxcvvv 这样的单词），造成了数组空间的浪费。\n现在需要一种压缩方法，把幂的连乘方案系统中得到的巨大整数范围压缩到可接受的数组范围中。可以通过取余操作来实现。虽然取余操作得到的结构也有可能重复，但是可以通过其他方式解决。\n地址的冲突(哈希冲突)\n在实际中，经过哈希函数哈希化过后得到的下标值可能有重复，这种情况称为冲突，冲突是不可避免的，我们只能解决冲突。\n解决冲突常见的两种方案：链地址法（拉链法）和开放地址法。\n链地址法（拉链法）\n如下图所示，我们将每一个数字都对 10 进行取余操作，则余数的范围 0~9 作为数组的下标值。并且，数组每一个下标值对应的位置存储的不再是一个数字了，而是存储由经过取余操作后得到相同余数的数字组成的数组或链表。\n\n这样可以根据下标值获取到整个数组或链表，之后继续在数组或链表中查找就可以了。而且，产生冲突的元素一般不会太多。\n总结：链地址法解决冲突的办法是每个数组单元中存储的不再是单个数据，而是一条链条，这条链条常使用的数据结构为数组或链表，两种数据结构查找的效率相当（因为链条的元素一般不会太多）。\n开放地址法\n开放地址法的主要工作方式是寻找空白的单元格来放置冲突的数据项。\n\n根据探测空白单元格位置方式的不同，可分为三种方法：\n\n线性探测\n二次探测\n再哈希法\n\n线性探测\n当插入 13 时：\n经过哈希化（对 10 取余）之后得到的下标值 index=3，但是该位置已经放置了数据 33。而线性探测就是从 index 位置+1 开始向后一个一个来查找合适的位置来放置 13，所谓合适的位置指的是空的位置，如上图中 index=4 的位置就是合适的位置。\n当查询 13 时：\n\n首先 13 经过哈希化得到 index=3，如果 index=3 的位置存放的数据与需要查询的数据 13 相同，就直接返回；\n不相同时，则线性查找，从 index+1 位置开始一个一个位置地查找数据 13。\n查询过程中不会遍历整个哈希表，只要查询到空位置，就停止，因为插入 13 时不会跳过空位置去插入其他位置。\n\n当删除 13 时：\n\n删除操作和上述两种情况类似，但需要注意的是，删除一个数据项时，不能将该位置下标的内容设置为 null，否则会影响到之后其他的查询操作，因为一遇到为 null 的位置就会停止查找。\n通常删除一个位置的数据项时，我们可以将它进行特殊处理（比如设置为-1），这样在查找时遇到-1 就知道要继续查找。\n\n线性探测存在的问题：\n线性探测存在一个比较严重的问题，就是聚集。\n如哈希表中还没插入任何元素时，插入 23、24、25、26、27，这就意味着下标值为 3、4、5、6、7 的位置都放置了数据，这种一连串填充单元就称为聚集。\n聚集会影响哈希表的性能，无论是插入/查询/删除都会影响。\n比如插入 13 时就会发现，连续的单元 3~7 都不允许插入数据，并且在插入的过程中需要经历多次这种情况。二次探测法可以解决该问题。\n\n二次探测\n二次探测是在线性探测的基础上进行了优化。\n线性探测我们可以看成是步长为 1 的探测，比如从下表值 x 开始，那么线性探测就是按照下标值：x+1、x+2、x+3 等依次探测。\n二次探测对步长进行了优化，比如从下标值 x 开始探测：x+1^2^、x+2^2^、x+3^3^ 。这样一次性探测比较长的距离，避免了数据聚集带来的影响。\n总结：当插入数据分布性较大的一组数据时，比如：13-163-63-3-213，这种情况会造成步长不一的一种聚集（虽然这种情况出现的概率较线性探测的聚集要小），同样会影响性能。\n再哈希法（最好的解决方式）\n再哈希法的做法为：把关键字用另一个哈希函数，再做一次哈希化，用这次哈希化的结果作为该关键字的步长。\n第二次哈希化需要满足以下两点：\n\n和第一个哈希函数不同，不然哈希化后的结果仍是原来位置；\n不能输出为 0，否则每次探测都是原地踏步的死循环；\n\n优秀的哈希函数：\n\nstepSize = constant - （key % constant）；\n其中 constant 是质数，且小于数组的容量；\n例如：stepSize = 5 - （key % 5），满足需求，并且结果不可能为 0；\n\n哈希表中执行插入和搜索操作效率是非常高的。\n\n如果没有发生冲突，那么效率就会更高；\n如果发生冲突，存取时间就依赖后来的探测长度；\n平均探测长度以及平均存取时间，取决于填装因子，随着填装因子变大，探测长度会越来越长。\n\n哈希函数\n哈希表的优势在于它的速度，所以哈希函数不能采用消耗性能较高的复杂算法。提高速度的一个方法是在哈希函数中尽量减少乘法和除法。\n性能高的哈希函数应具备以下两个优点：\n\n快速的计算；\n均匀的分布；\n\n快速计算\n霍纳法则：在中国霍纳法则也叫做秦久韶算法，具体算法为：\n\n求多项式的值时，首先计算最内层括号内一次多项式的值，然后由内向外逐层计算一次多项式的值。这种算法把求 n 次多项式 f(x)的值就转化为求 n 个一次多项式的值。\n变换之前：\n\n乘法次数：n(n+1)/2 次；\n加法次数：n 次；\n\n变换之后：\n\n乘法次数：n 次；\n加法次数：n 次；\n\n如果使用大 O 表示时间复杂度的话，直接从变换前的 O(N^2)降到了 O(N)。\n均匀分布\n在设计哈希表时，我们已经有办法处理映射到相同下标值的情况：链地址法或者开放地址法。但是，为了提供效率，最好的情况还是让数据在哈希表中均匀分布。因此，我们需要在使用常量的地方，尽量使用质数。比如：哈希表的长度、N 次幂的底数等。\nJava 中的 HashMap\nJava 中的 HashMap 采用的是链地址法，哈希化采用的是公式为：index = HashCode(key) &amp; (Length-1) 即将数据化为二进制进行与运算，而不是取余运算。这样计算机直接运算二进制数据，效率更高。但是 JavaScript 在进行较大数据的与运算时会出现问题，所以我们使用 JavaScript 实现哈希化时采用取余运算。\n哈希表的优势和劣势\n哈希表通常是基于数组实现的，但是相对于数组，它存在更多优势：\n\n哈希表可以提供非常快速的 插入-删除-查找 操作。\n无论多少数据，插入和删除值都只需接近常量的时间，即 O(1) 的时间复杂度。实际上，只需要几个机器指令即可完成。\n哈希表的速度比树还要快，基本可以瞬间查找到想要的元素。\n哈希表相对于树来说编码要简单得多。\n\n哈希表同样存在不足之处：\n\n哈希表中的数据是没有顺序的，所以不能以一种固定的方式（比如从小到大 ）来遍历其中的元素。\n通常情况下，哈希表中的 key 是不允许重复的，不能放置相同的 key，用于保存不同的元素。\n\n封装哈希表\n哈希表的常见操作\n\nput(key, value) 插入或修改操作。\nget(key) 获取哈希表中特定位置的元素。\nremove(key) 删除哈希表中特定位置的元素。\nisEmpty() 如果哈希表中不包含任何元素，返回 trun，如果哈希表长度大于 0 则返回 false。\nsize() 返回哈希表包含的元素个数。\nresize(value) 对哈希表进行扩容操作。\n\n简单实现：\n此处先简单地指定数组的大小\nhashFn(string, limit = 7) {\n\n  // 自己采用的一个质数（无强制要求，质数即可）\n  const PRIME = 31;\n\n  // 1、定义存储 hashCode 的变量\n  let hashCode = 0;\n\n  // 2、使用霍纳法则（秦九韶算法），计算 hashCode 的值\n  for (let item of string) {\n    hashCode = PRIME * hashCode + item.charCodeAt();\n  }\n\n  // 3、对 hashCode 取余，并返回\n  return hashCode % limit;\n}\n\n// 测试\nconsole.log(hashFn(&quot;123&quot;)); //--&gt; 5\nconsole.log(hashFn(&quot;abc&quot;)); //--&gt; 6\n\n创建哈希表类\n封装的哈希表的数据结构模型：\n\n首先创建哈希表类 HashTable，并添加必要的属性和上面实现的哈希函数，再进行其他方法的实现。\nclass HashTable {\n  constructor() {\n    this.storage = []; // 哈希表存储数据的变量\n    this.count = 0; // 当前存放的元素个数\n    this.limit = 7; // 哈希表长度（初始设为质数 7）\n  }\n}\n\nput(key,value)\n哈希表的插入和修改操作是同一个函数：因为，当使用者传入一个 [key, value] 时，如果原来不存在该 key，那么就是插入操作，如果原来已经存在该 key，那么就是修改操作。\n\n思路：\n\n首先，根据 key 获取索引值 index，目的为将数据插入到 storage 的对应位置；\n然后，根据索引值取出 bucket，如果 bucket 不存在，先创建 bucket，随后放置在该索引值的位置；\n接着，判断新增还是修改原来的值。如果已经有值了，就修改该值；如果没有，就执行后续操作。\n最后，进行新增数据操作。\n\n// put(key, value) 往哈希表里添加数据\nput(key, value) {\n\n  // 1、根据 key 获取要映射到 storage 里面的 index（通过哈希函数获取）\n  const index = hashFn(key, this.limit);\n\n  // 2、根据 index 取出对应的 bucket\n  let bucket = this.storage[index];\n\n  // 3、判断是否存在 bucket\n  if (bucket === undefined) {\n    bucket = [];  // 不存在则创建\n    this.storage[index] = bucket;\n  }\n\n  // 4、判断是插入数据操作还是修改数据操作\n  for (let i = 0; i &lt; bucket.length; i++) {\n    let tuple = bucket[i]; // tuple 的格式：[key, value]\n    if (tuple[0] === key) { // 如果 key 相等，则修改数据\n      tuple[1] = value;\n      return; // 修改完 tuple 里数据，return 终止不再往下执行。\n    }\n  }\n\n  // 5、bucket 新增数据\n  bucket.push([key, value]); // bucket 存储元组 tuple，格式为 [key, value]\n  this.count++;\n\n  // 判断哈希表是否要扩容，若装填因子 &gt; 0.75，则扩容\n  if (this.count / this.limit &gt; this.loadFactor) {\n    this.resize(this.getPrime(this.limit * 2));\n  }\n\n}\n\nget(key)\n思路：\n\n首先，根据 key 通过哈希函数获取它在 storage 中对应的索引值 index。\n然后，根据索引值获取对应的 bucket。\n接着，判断获取到的 bucket 是否为 null，如果为 null，直接返回 null。\n随后，线性遍历 bucket 中每一个 key 是否等于传入的 key。如果等于，直接返回对应的 value。\n最后，遍历完 bucket 后，仍然没有找到对应的 key，直接 return null 即可。\n\n// 根据 get(key) 获取 value\nget(key) {\n\n  const index = hashFn(key, this.limit);\n  const bucket = this.storage[index];\n\n  if (bucket === undefined) {\n    return null;\n  }\n\n  for (const tuple of bucket) {\n    if (tuple[0] === key) {\n      return tuple[1];\n    }\n  }\n  return null;\n}\n\nremove(key)\n思路：\n\n首先，根据 key 通过哈希函数获取它在 storage 中对应的索引值 index。\n然后，根据索引值获取对应的 bucket。\n接着，判断获取到的 bucket 是否为 null，如果为 null，直接返回 null。\n随后，线性查找 bucket，寻找对应的数据，并且删除。\n最后，依然没有找到，返回 null。\n\n// remove(key) 删除指定 key 的数据\nremove(key) {\n\n  const index = hashFn(key, this.limit);\n  const bucket = this.storage[index];\n\n  if (bucket === undefined) {\n    return null;\n  }\n\n  // 遍历 bucket，找到对应位置的 tuple，将其删除\n  for (let i = 0, len = bucket.length; i &lt; len; i++) {\n    const tuple = bucket[i];\n    if (tuple[0] === key) {\n      bucket.splice(i, 1); // 删除对应位置的数组项\n      this.count--;\n\n      // 根据装填因子的大小，判断是否要进行哈希表压缩\n      if (this.limit &gt; 7 &amp;&amp; this.count / this.limit &lt; this.minLoadFactor) {\n        this.resize(this.getPrime(Math.floor(this.limit / 2)));\n      }\n\n      return tuple;\n    }\n\n  }\n\n}\n\nisEmpty()\nisEmpty() {\n  return this.count === 0;\n}\n\nsize()\nsize() {\n  return this.count;\n}\n\nresize()\n常见的情况是 loadFactor &gt; 0.75 的时候进行扩容。\n实现思路：\n\n首先，定义一个变量，比如 oldStorage 指向原来的 storage。\n然后，创建一个新的容量更大的数组(通常是2倍大小)，让 this.storage 指向它。\n最后，将 oldStorage 中的每一个 bucket 中的每一个数据取出来依次添加到 this.storage 指向的新数组中。\n\n\n装填因子 = 哈希表中数据 / 哈希表长度，即 loadFactor = count / HashTable.length。\n// 重新调整哈希表大小，扩容或压缩\nresize(newLimit) {\n\n  // 1、保存旧的 storage 数组内容\n  const oldStorage = this.storage;\n\n  // 2、重置所有属性\n  this.storage = [];\n  this.count = 0;\n  this.limit = newLimit;\n\n  // 3、遍历 oldStorage，取出所有数据，重新 put 到 this.storage\n  for (const bucket of oldStorage) {\n    if (bucket) {\n      for (const b of bucket) {\n        this.put(b[0], b[1]);\n      }\n    }\n\n  }\n}\n\n\n通常情况下当装填因子 laodFactor &gt; 0.75 时，对哈希表进行扩容。在哈希表中的添加方法（push 方法）中添加如下代码，判断是否需要调用扩容函数进行扩容。\n\n// 判断哈希表是否要扩容，若装填因子 &gt; 0.75，则扩容\nif (this.count / this.limit &gt; this.loadFactor) {\n  this.resize(this.getPrime(this.limit * 2));\n}\n\n\n当装填因子 laodFactor &lt; 0.25 时，对哈希表容量进行压缩。在哈希表中的删除方法（remove 方法）中添加如下代码，判断是否需要调用扩容函数进行压缩。\n\n// 根据装填因子的大小，判断是否要进行哈希表压缩\nif (this.limit &gt; 7 &amp;&amp; this.count / this.limit &lt; this.minLoadFactor) {\n  this.resize(this.getPrime(Math.floor(this.limit / 2)));\n}\n\n选择质数作为哈希表容量\n\n质数是指在大于1的自然数中，除了1和它本身以外不再有其他因数的自然数。通俗来说，就是除了1和此整数自身外,没法被其他自然数整除的数。\n\n质数判断\nfunction isPrime(number) {\n  if (number &lt;= 1 || number === 4) return false;\n  const temp = Math.ceil(Math.sqrt(number));\n  for (let i = 2; i &lt; temp; i++) {\n    if (number % i === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\n实现扩容或压缩后的哈希表容量为质数\n2 倍扩容或压缩之后，通过循环调用 isPrime 判断得到的容量是否为质数，不是则+1，直到是为止。比如原长度：7，2 倍扩容后长度为 14，14 不是质数，14 + 1 = 15 不是质数，15 + 1 = 16 不是质数，16 + 1 = 17 是质数，停止循环，由此得到质数 17。\n\n首先需要为 HashTable 类添加判断质数的 isPrime 方法和获取质数的 getPrime 方法：// getPrime(number) 根据传入的 number 获取最临近的质数\ngetPrime(number) {\nwhile (!isPrime(number)) {\n number++;\n}\nreturn number;\n}\n\n\n修改添加元素的 put 方法和删除元素的 remove 方法中关于数组扩容的相关操作：\n```javascript\n// 在 put 方法中添加\n// 判断哈希表是否要扩容，若装填因子 &gt; 0.75，则扩容\nif (this.count / this.limit &gt; this.loadFactor) {\nthis.resize(this.getPrime(this.limit * 2));\n}\n\n// 在 remove 方法中添加\n// 根据装填因子的大小，判断是否要进行哈希表压缩\nif (this.limit &gt; 7 &amp;&amp; this.count / this.limit &lt; this.minLoadFactor) {\n  this.resize(this.getPrime(Math.floor(this.limit / 2)));\n}\n```\n"},"structure/链表.html":{"url":"structure/链表.html","title":"链表","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n什么是链表\n单向链表\n\n查找性能\n插入删除性能\n读取性能\n代码实现\n\n双向链表\n\n代码实现\n\n循环链表\n\n\n\n什么是链表\n前面我们讨论了如何使用栈、队列进行存数数据，他们其实都是列表的一种，底层存储的数据的数据结构都是数组。\n数组的特点是查询数据快，插入数据慢，查询的时间复杂度是O(1),插入的时间复杂度是O(n).\n链表我们平时用的比较少，它的特点是:插入数据快，查询数据慢，查询的时间复杂度是：O(n)，插入的时间复杂度是：O(1)，它的特点是和数组相反的。\n链表是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的指针(Pointer).\n\n当然,链表也有不同的形态,主要分为三种:单向链表、双向链表、循环链表.\n单向链表\n单向链表的节点通常由两个部分构成,一个是节点储存的值val,另一个就是节点的指针next.\n\n链表与数组类似,也可以进行查找、插入、删除、读取等操作,但是由于链表与数组的特性不同,导致不同操作的复杂度也不同.\n查找性能\n单向链表的查找操作通常是这样的:\n\n从头节点进入,开始比对节点的值,如果不同则通过指针进入下一个节点\n重复上面的动作,直到找到相同的值,或者节点的指针指向null\n\n链表的查找性能与数组一样,都是时间复杂度为O(n).\n插入删除性能\n链表与数组最大的不同就在于删除、插入的性能优势,由于链表是非连续的内存,所以不用像数组一样在插入、删除操作的时候需要进行大面积的成员位移,比如在a、b节点之间插入一个新节点c,链表只需要:\n\na断开指向b的指针，将指针指向c\nc节点将指针指向b，完毕\n\n这个插入操作仅仅需要移动一下指针即可，插入、删除的时间复杂度只有O(1).\n\n\n读取性能\n链表的读取操作远不如数组，链表由于非连续内存，所以必须通过指针一个一个节点遍历。需要从头部节点进入,在通过指针进入后续节点才能读取。这是链表对于数组的劣势。\n代码实现\n// 首先定义一个节点\nfunction Node(element) {\n    this.element = element;   //当前节点的元素\n    this.next = null;         //下一个节点链接\n}\n//链表类\nfunction LList () {\n    this.head = new Node( &#39;head&#39; );     //头节点\n    this.find = find;                   //查找节点\n    this.insert = insert;               //插入节点\n    this.remove = remove;               //删除节点\n    this.findPrev = findPrev;           //查找前一个节点\n    this.display = display;             //显示链表\n}\n//查找给定节点\nfunction find ( item ) {\n    var currNode = this.head;\n    while ( currNode.element != item ){\n        currNode = currNode.next;\n    }\n    return currNode;\n}\n//插入节点\nfunction insert ( newElement , item ) {\n    var newNode = new Node( newElement );\n    var currNode = this.find( item );\n    newNode.next = currNode.next;\n    currNode.next = newNode;\n}\n//显示链表元素\nfunction display () {\n    var currNode = this.head;\n    while ( !(currNode.next == null) ){\n        console.log( currNode.next.element );\n        currNode = currNode.next;\n    }\n}\n\n// 从链表中删除节点时，我们先要找个待删除节点的前一个节点，找到后，我们修改它的 next 属性，使其不在指向待删除的节点，而是待删除节点的下一个节点。那么，我们就得需要定义一个 findPrevious 方法遍历链表，检查每一个节点的下一个节点是否存储待删除的数据。如果找到，返回该节点，这样就可以修改它的 next 属性了。 findPrevious 的实现如下：\n//查找带删除节点的前一个节点\nfunction findPrev( item ) {\n    var currNode = this.head;\n    while ( !( currNode.next == null) &amp;&amp; ( currNode.next.element != item )){\n        currNode = currNode.next;\n    }\n    return currNode;\n}\n//删除节点\nfunction remove ( item ) {\n    var prevNode = this.findPrev( item );\n    if( !( prevNode.next == null ) ){\n        prevNode.next = prevNode.next.next;\n    }\n}\n\n双向链表\n单向链表的应用场景并不多,而真正在生产环境中被广泛运用的正是双向链表。\n双向链表多了一个新的指针prev指向节点的前一个节点,当然由于多了一个指针,所以双向链表要更占内存.\n\n别小看双向链表多了一个前置指针,在很多场景里由于多了这个指针,它的效率更高,也更加实用.\n代码实现\n// 从上面的图中看出，双向链表就是加了一个prev属性，所以我们需要把node类改成\nfunction Node(element) {\n    this.element = element;   //当前节点的元素\n    this.next = null;         //下一个节点链接\n    this.prev = null;     //上一个节点链接\n}\n//链表类,没变化\nfunction LList () {\n    this.head = new Node( &#39;head&#39; );     //头节点\n    this.find = find;                   //查找节点\n    this.insert = insert;               //插入节点\n    this.remove = remove;               //删除节点\n    this.findPrev = findPrev;           //查找前一个节点\n    this.display = display;             //显示链表\n}\n//  insert 方法与单链表相似，但需要设置新节点的 previous 属性，使其指向该节点的前驱\nfunction insert ( newElement , item ) {\n    var newNode = new Node( newElement );\n    var currNode = this.find( item );\n    newNode.next = currNode.next;\n    newNode.previous = currNode;\n    currNode.next = newNode;\n}\n// 删除 remove 方法比单链表效率高，不需要查找前驱节点，只要找出待删除节点，然后将该节点的前驱 next 属性指向待删除节点的后继，设置该节点后继 previous 属性，指向待删除节点的前驱即可\nfunction remove ( item ) {\n    var currNode = this.find ( item );\n    if( !( currNode.next == null ) ){\n        currNode.previous.next = currNode.next;\n        currNode.next.previous = currNode.previous;\n        currNode.next = null;\n        currNode.previous = null;\n    }\n}\n\n循环链表\n循环链表,顾名思义,他就是将单向链表的尾部指针指向了链表头节点:\n\n即：\nhead.next = head;\n\n"},"algorithm/":{"url":"algorithm/","title":"算法","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n算法\n\n时间复杂度\n空间复杂度\n\n\n\n\n算法\n在开始学习之前，我们首先要搞懂时间复杂度和空间复杂度的概念，它们的高低共同决定着一段代码质量的好坏：\n时间复杂度\n一个算法的时间复杂度反映了程序运行从开始到结束所需要的时间。把算法中基本操作重复执行的次数（频度）作为算法的时间复杂度。\n没有循环语句，记作O(1)，也称为常数阶。只有一重循环，则算法的基本操作的执行频度与问题规模n呈线性增大关系，记作O（n），也叫线性阶。\n常见的时间复杂度有：\n\nO(1): Constant Complexity: Constant 常数复杂度\nO(log n): Logarithmic Complexity: 对数复杂度\nO(n): Linear Complexity: 线性时间复杂度\nO(n^2): N square Complexity 平⽅方\nO(n^3): N square Complexity ⽴立⽅方\nO(2^n): Exponential Growth 指数\nO(n!): Factorial 阶乘\n\n空间复杂度\n一个程序的空间复杂度是指运行完一个程序所需内存的大小。利用程序的空间复杂度，可以对程序的运行所需要的内存多少有个预先估计。\n一个程序执行时除了需要存储空间和存储本身所使用的指令、常数、变量和输入数据外，还需要一些对数据进行操作的工作单元和存储一些为现实计算所需信息的辅助空间。\n"},"algorithm/排序.html":{"url":"algorithm/排序.html","title":"排序","body":"TreeviewCopyright © aleen42 all right reserved, powered by aleen42\n冒泡排序\n插入排序\n\n\n\n冒泡排序\n循环数组，当前项和下一项作对比，如果当前项大于下一项，则向上冒泡。\n代码：\n    function bubbleSort(array) {\n    for (let j = 0; j &lt; array.length; j++) {\n        let complete = true;\n        for (let i = 0; i &lt; array.length - 1 - j; i++) {\n            // 比较相邻数\n            if (array[i] &gt; array[i + 1]) {\n                [array[i], array[i + 1]] = [array[i + 1], array[i]];\n                complete = false;\n            }\n        }\n        // 没有冒泡结束循环\n        if (complete) {\n            break;\n        }\n    }\n    return array;\n}\n\n时间复杂度：O(n2)\n空间复杂度:O(1)\n插入排序\n将左侧看作一个有序列表，下一项依次和左侧列表的每一项作对比，当在两项中间时，则插入。\n    function insertSort(array) {\n    for (let i = 1; i &lt; array.length; i++) {\n        let target = i;\n        for (let j = i - 1; j &gt;= 0; j--) {\n            if (array[target] &lt; array[j]) {\n                [array[target], array[j]] = [array[j], array[target]]\n                target = j;\n            } else {\n                break;\n            }\n        }\n    }\n    return array;\n}\n\n时间复杂度：O(n2)\n空间复杂度:O(1)\n"}}}